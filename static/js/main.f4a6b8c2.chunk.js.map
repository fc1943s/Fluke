{"version":3,"sources":["../node_modules/gun sync","../public/index.tsx","../.fable/fable-library.3.2.7/Int32.js","../.fable/fable-library.3.2.7/Numeric.js","../.fable/fable-library.3.2.7/lib/long.js","../.fable/fable-library.3.2.7/Long.js","../.fable/fable-library.3.2.7/Util.js","../.fable/fable-library.3.2.7/Date.js","Bindings/Dom.fs.js","../.fable/fable-library.3.2.7/Option.js","../.fable/fable-library.3.2.7/RegExp.js","../.fable/fable-library.3.2.7/Types.js","../.fable/fable-library.3.2.7/String.js","../.fable/fable-library.3.2.7/Reflection.js","../.fable/fable-library.3.2.7/Array.js","../.fable/fable-library.3.2.7/List.js","../.fable/fable-library.3.2.7/AsyncBuilder.js","../.fable/fable-library.3.2.7/Choice.js","../.fable/fable-library.3.2.7/Async.js","Bindings/JS.fs.js","../.fable/fable-library.3.2.7/MapUtil.js","../.fable/fable-library.3.2.7/TimeSpan.js","../../Fluke.Shared/Core.fs.js","Bindings/Profiling.fs.js","Bindings/Batcher.fs.js","../.fable/Fable.Promise.2.2.2/Promise.fs.js","../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js","../.fable/fable-library.3.2.7/Guid.js","../.fable/fable-library.3.2.7/FSharp.Collections.js","../.fable/fable-library.3.2.7/System.Text.js","../.fable/fable-library.3.2.7/FSharp.Core.js","../.fable/fable-library.3.2.7/Seq.js","Bindings/Gun.fs.js","Bindings/Jotai.fs.js","../../Fluke.Shared/Domain/Model.fs.js","../../Fluke.Shared/Domain/UserInteraction.fs.js","../../Fluke.Shared/Domain/State.fs.js","Bindings/DeepEqual.fs.js","../.fable/Thoth.Json.5.1.0/Types.fs.js","../.fable/fable-library.3.2.7/BigInt/n.js","../.fable/fable-library.3.2.7/lib/big.js","../.fable/fable-library.3.2.7/Decimal.js","../.fable/fable-library.3.2.7/BigInt/z.js","../.fable/fable-library.3.2.7/BigInt.js","../.fable/fable-library.3.2.7/DateOffset.js","../.fable/fable-library.3.2.7/Map.js","../.fable/fable-library.3.2.7/Set.js","../.fable/Thoth.Json.5.1.0/Decode.fs.js","../.fable/Thoth.Json.5.1.0/Encode.fs.js","Bindings/Crypto.fs.js","../.fable/Feliz.1.47.0/Interop.fs.js","../.fable/Feliz.1.47.0/React.fs.js","../.fable/Feliz.1.47.0/ReactInterop.js","Bindings/Store.fs.js","../../Fluke.Shared/Domain/ModelGenerated.fs.js","../.fable/fable-library.3.2.7/MutableSet.js","../.fable/fable-library.3.2.7/MutableMap.js","../.fable/fable-library.3.2.7/Seq2.js","../../Fluke.Shared/Sorting.fs.js","../../Fluke.Shared/View.fs.js","TempUI.fs.js","../../Fluke.Shared/Rendering.fs.js","../.fable/fable-library.3.2.7/Range.js","../../Fluke.Shared/Templates.fs.js","State.fs.js","Hooks/Theme.fs.js","Bindings/Chakra.fs.js","../.fable/Feliz.UseListener.0.6.3/Listener.fs.js","../.fable/fable-library.3.2.7/Double.js","../.fable/Feliz.Router.3.8.0/Router.fs.js","Bindings/React.fs.js","Components/RootWrapper.fs.js","../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js","Components/RouterObserver.fs.js","Bindings/Rooks.fs.js","Hooks/Listener.fs.js","Components/KeyboardListener.fs.js","Hooks/Scheduling.fs.js","Components/PositionUpdater.fs.js","Templates.fs.js","../.fable/Fable.SimpleHttp.3.0.0/Types.fs.js","../.fable/Fable.SimpleHttp.3.0.0/Http.fs.js","Hooks/Hydrate.fs.js","Hooks/Auth.fs.js","Components/Tooltip.fs.js","Components/ExternalLink.fs.js","Components/TopBar.fs.js","Components/Spinner.fs.js","Components/LoadingSpinner.fs.js","Components/Accordion.fs.js","../.fable/Fable.React.7.4.1/Fable.React.Extensions.fs.js","Components/Button.fs.js","Components/Popover.fs.js","Components/Hint.fs.js","Components/Input.fs.js","Components/Dropdown.fs.js","Bindings/ColorPicker.fs.js","Components/ChangeUserPasswordButton.fs.js","Components/DropdownMenuButton.fs.js","Components/Checkbox.fs.js","Components/CheckboxInput.fs.js","Components/InputList.fs.js","Components/Settings.fs.js","Components/Menu.fs.js","Components/DatabaseNodeMenu.fs.js","Components/DatabaseLeafIcon.fs.js","Bindings/CheckboxTree.fs.js","Components/Databases.fs.js","Components/DockPanel.fs.js","Components/MenuItemToggle.fs.js","Components/DockButton.fs.js","Components/LeftDock.fs.js","Components/AttachmentIndicator.fs.js","Components/InformationName.fs.js","Components/TaskPriority.fs.js","Components/TaskName.fs.js","Components/MonthResponsiveCell.fs.js","Components/Day.fs.js","Components/GridHeader.fs.js","Hooks/Setters.fs.js","Components/CellMenu.fs.js","Components/CellSessionIndicator.fs.js","Components/CellBorder.fs.js","Components/CellStatusUserIndicator.fs.js","Components/Cell.fs.js","Components/TaskCells.fs.js","Components/Cells.fs.js","Components/InformationView.fs.js","Components/TaskInformationName.fs.js","Components/HabitTrackerView.fs.js","Components/PriorityView.fs.js","Components/BulletJournalView.fs.js","Components/ViewTabs.fs.js","Components/DatabaseAccessIndicator.fs.js","Components/DatabaseForm.fs.js","Components/AddAttachmentInput.fs.js","Components/AttachmentPanel.fs.js","Components/InformationForm.fs.js","Components/DatabaseSelector.fs.js","Components/Radio.fs.js","Components/AreaForm.fs.js","Components/AreaSelector.fs.js","Components/ProjectForm.fs.js","Components/InformationSelector.fs.js","Components/SchedulingSelector.fs.js","Components/TaskForm.fs.js","Components/CellForm.fs.js","Components/RightDock.fs.js","Components/StatusBar.fs.js","Components/SoundPlayer.fs.js","Components/InitialPeers.fs.js","Components/LoginScreen.fs.js","Components/Content.fs.js","Components/DebugOverlay.fs.js","App.fs.js","Main.fs.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","NumberStyles","getRange","unsigned","bitsize","isValid","str","style","radix","res","exec","replace","prefix","digits","getInvalidDigits","AllowHexSpecifier","getRadix","test","regexMatch","sign","validResponse","parse","v","Number","parseInt","isNaN","umin","umax","min","max","tryParse","defValue","contents","_a","op_UnaryNegation_Int32","x","symbol","Symbol","isNumeric","multiply","y","toFixed","dp","toPrecision","sd","toExponential","toHex","toString","wasm","WebAssembly","Instance","Module","Uint8Array","Long","low","high","this","isLong","obj","prototype","GetHashCode","h1","Equals","equals","CompareTo","compare","toJSON","String","substr","fromBytes","toBytes","__isLong__","Object","defineProperty","value","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","length","RangeError","p","indexOf","substring","radixToPower","result","i","size","add","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","isOdd","other","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","le","hi","lo","toBytesLE","toBytesBE","bytes","fromBytesLE","fromBytesBE","LongLib","op_Addition","op_Subtraction","op_Multiply","op_Division","op_Modulus","rem_u","rem_s","op_UnaryNegation","op_BitwiseAnd","fromInteger","kind","xh","unixEpochMillisecondsToTicks","ms","offset","isArrayLike","Array","isArray","ArrayBuffer","isView","isHashable","sameConstructor","getPrototypeOf","constructor","Enumerator","iter","current","cur","next","done","getEnumerator","o","GetEnumerator","iterator","toIterator","en","hasNext","undefined","Lazy","factory","isValueCreated","createdValue","padWithZeros","padLeftAndRightWithZeros","lengthLeft","lengthRight","dateOffset","date","date1","getTimezoneOffset","int32ToString","ObjectRef","idMap","has","set","count","get","stringHash","s","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h2","arrayHash","structuralHash","Date","getTime","dateHash","values","map","safeHash","equalArraysWith","eq","equalArrays","isEquatable","compareDates","xKeys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","j","compareArraysWith","isComparable","key","compareObjects","comparer","createObj","fields","kv","randomNext","random","WeakMap","CURRIED_KEY","uncurry","arity","f","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","mapCurriedArgs","fn","mappings","mapArg","arg","idx","mapping","expectedArity","actualArity","offsetRegex","dateOffsetToString","isMinus","minutes","abs","dateToHalfUTCString","half","toISOString","dateToStringWithCustomFormat","format","utc","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","dateToStringWithOffset","_b","_c","d","dateWithOffset","dateToISOStringWithOffset","dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","_provider","DateTime","getTicks","minValue","parseRaw","input","trim","m","baseDate","timeInSeconds","timeParts","split","parseFloat","toUpperCase","offsetParts","offsetInMinutes","detectUTC","_err","create","year","month","day","dateValue","UTC","setFullYear","now","hour","minute","second","dayOfWeek","getUTCDay","getDay","ts","newDate","oldTzOffset","newTzOffset","addDays","that","domRefs","Map","window","Some","some","ofNullable","toArray","opt","defaultArg","defaultValue","defaultArgWith","defThunk","bind","binder","pattern","options","flags","RegExp","escape","matches","reg","lastIndex","global","push","seqToString","self","callStack","cons","entries","join","name","Union","cases","tag","concat","fieldStr","withParens","unionToString","splice","recordToJSON","recordToString","recordGetHashCode","recordEquals","thisNames","recordCompareTo","Record","FSharpRef","contentsOrGetter","setter","getter","fsFormatRegExp","interpolateRegExp","formatRegExp","isLessThan","numericCompare","printf","cont","strParts","strIdx","matchIndex","index","createPrinter","interpolate","valIdx","padLength","precision","formatReplacement","continuePrint","toConsole","console","toText","toFail","toLowerCase","dateToString","zeroFlag","minusFlag","ch","padLeft","_strParts","_matches","_result","padArg","slice","args","_padLength","shift","_","intPart","decimalPart","endsWith","search","lastIndexOf","isNullOrWhiteSpace","delimiter","xs","from","isRight","splitters","removeEmpty","arguments","splits","startIndex","CaseInfo","declaringType","TypeInfo","fullname","generics","construct","parent","enumCases","fullName","getHashCode","getGenerics","t","fullnameHash","genHashes","t1","t2","getRecordElements","k1","v1","k2","v2","class_type","record_type","union_type","caseNames","tuple_type","option_type","generic","list_type","array_type","enum_type","underlyingType","obj_type","string_type","bool_type","int32_type","info","gen","getElementType","isGenericType","isEnum","getGenericTypeDefinition","getEnumUnderlyingType","getEnumValues","getEnumCase","parseEnum","getEnumName","getUnionCases","getTupleElements","isTuple","isUnion","isRecord","startsWith","getUnionCaseFields","uci","makeUnion","expectedLength","Helpers_allocateArrayFromCons","differentLengths","fill","target","targetIndex","start","last","array","mapIndexed","source","indexed","arrays","arrays_1","totalIdx","totalLength","idx_1","arr_2","initialize","initializer","fold","folder","state","delegateArg0","delegateArg1","equalsWith","array1","array2","length1","length2","compareWith","e1","e2","head","foldBack","reduceRight","foldBack2","acc","foldBackIndexed2","_arg1","SR_indexOutOfBounds","SR_inputListWasEmpty","SR_inputMustBeNonNegative","SR_keyNotFoundAlt","SR_notEnoughElements","FSharpList","tail","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","matchValue","xt","yt","i_mut","h_mut","_key","c","ListEnumerator$1","ListEnumerator$1_$ctor_3002E699","it","__","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","FSharpList__get_IsEmpty","FSharpList__get_Length","FSharpList__get_Head","FSharpList__get_Tail","empty","singleton","isEmpty","tryHead","tryLast","xs_mut","value_1","reverse","foldBack_1","iterate","action","unitVar0","ofArrayWithTail","tail_1","ofArray","ofSeq","xs_3","root","node","enumerator","Dispose","xs_5","t_2","append","ys","collect","zs","acc_mut","foldIndexed","tryPick","tryFind","tryFindIndex","findIndex","tryItem","n","item","FSharpList__get_Item_Z524259A4","filter","choose","contains","replicate","xs_2","exists","sortWith","arr","Compare","sortBy","projection","sortByDescending","sum","adder","Add","GetZero","skipWhile","predicate_mut","predicate","take","CancellationToken","cancelled","_id","_cancelled","_listeners","listener","delete","$","addListener","removeListener","OperationCanceledError","setPrototypeOf","Trampoline","callCount","maxTrampolineCallCount","setTimeout","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","protectedBind","computation","onSuccess","ex","protectedReturn","computation1","computation2","Bind","generator","sequence","body","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","FSharpResult$2","Result_Map","FSharpChoice$2","emptyContinuation","_x","awaitPromise","fromContinuations","conts","then","catch","defaultCancellationToken","startWithContinuations","continuation","exceptionContinuation","cancellationContinuation","startAsPromise","cancellationToken","Promise","reject","Promise_ignore","JS_window","JS_DeviceInfo","UserAgent","IsEdge","IsMobile","IsElectron","IsExtension","GitHubPages","IsTesting","JS_deviceInfo","window$","userAgent","navigator","isEdge","isElectron","deviceInfo","location","protocol","host","process","JEST_WORKER_ID","Cypress","JSON","stringify","JS_isDebugStatic","JS_isDebug","debug","Debug","JS_playAudio","_file","audio","Audio","volume","play","JS_newObj","mutator","opts","jsOptions","lodash","JS_debounce","lodash_1","JS_ofNonEmptyObj","obj_1","tryGetValue","addToSet","addToDict","dict","k","getItemFromDict","signedRound","fromTicks","ticks","days","hours","seconds","milliseconds","firstDot","firstColon","r","String_parseInt","text","outArg","String_parseIntMin","DateTime_ticksDiff","initialTicks","profilingState","CallCount","Timestamps","addCount","addTimestamp","internalBatcher","batcher$002Djs","batcher","settings","newFn","_lock","x_1","PromiseBuilder","PromiseBuilder__Delay_62FBFDE1","f1","f2","er","er_1","er_2","er_3","PromiseBuilder__Run_212F1D4B","success","fail","guidRegex","guidRegexNoHyphen","guidRegexHex","hyphenateGuid","wsTrimAndLowered","chars","newGuid","b","a","ComparisonIdentity_Structural","LanguagePrimitives_FastGenericComparer","SR_inputSequenceEmpty","Enumerator_notStarted","Enumerator_alreadyFinished","Enumerator_Seq","Enumerator_FromFunctions$1","dispose","Enumerator_noReset","Enumerator_FromFunctions$1_$ctor_58C54629","Enumerator_generateWhileSome","openf","compute","closef","started","curr","finish","matchValue_1","checkNonNull","argName","Operators_NullArg","mkSeq","Enumerator_Seq_$ctor_673A07F2","delay","sources","outerOpt","innerOpt","finished","inner","outer","inner_1","outer_1","ie","Enumerator_concat","unfold","st_1","Enumerator_unfold","ar","singleton_1","toArray_1","toList","ofArray_1","ofSeq_1","generate","generateIndexed","chooser","e_1","found","tryItem_1","tryItem_2","index_1_mut","index_1","iterateIndexed","length_1","GunKeys","pub","epub","priv","epriv","GunProps","peers","radisk","localStorage","multicast","gun","gun_2","gun_3","batchData","arg_1","pr","Fn","Timestamp","Data","all","interval","batchSubscribe","promise_1","gun_1","GunAtomNode","data","copyOfStruct","on","getGunNodePath","atomPath","keyIdentifier","keyIdentifier_2","header","wrapAtomPath","nodes","outArg_1","secondLast","v_1","append_1","Jotai_atomPathMap","Jotai_atomIdMap","Jotai_registerAtom","atom","atomPath_2","atom_1","gunNodePath","atomPathMap","atomIdMap","Jotai_AtomReference$1","Jotai_queryAtomPath","atomReference","Jotai_jotai","jotai","Jotai_jotaiUtils","utils","Information","Information$reflection","Project","ProjectName$reflection","Area$reflection","Resource","ResourceName$reflection","Area","Name","AreaName$reflection","AreaName","ProjectName","ResourceName","InformationName","Task","Id","Duration","PendingAfter","MissedAfter","Scheduling","Priority","Task$reflection","TaskId$reflection","TaskName$reflection","Minute$reflection","FlukeTime$reflection","Scheduling$reflection","Priority$reflection","TaskId","TaskName","Minute","FlukeTime","Hour","ManualScheduling","Recurrency","RecurrencyOffset","FixedRecurrency","Day$reflection","Day","Information_Name_Z233FE4C2","information_mut","information","UserInteraction","FlukeDateTime","Date$","Time","FlukeDateTime$reflection","FlukeDate$reflection","FlukeDate","Year","Month","Interaction","Attachment","Attachment$reflection","Comment$","Username$reflection","User","Username","Color","WeekStart","DayStart","SessionDuration","SessionBreakDuration","Language","Language$reflection","TaskInteraction","Session","Session$reflection","DateId","DateId$reflection","CellInteraction","CellStatusChange","AttachmentId","AttachmentId$reflection","Database","Owner","SharedWith","Position","DatabaseId","DatabaseId$reflection","DatabaseName","DatabaseName$reflection","DatabaseState","InformationStateMap","TaskStateMap","DatabaseState$reflection","DatabaseAccess$reflection","InformationState$reflection","TaskState$reflection","DatabaseAccess","Access","InformationState","Attachments","SortList","TaskState","Sessions","CellStateMap","CellState","CellStatus$reflection","Status","CellStatus","ManualCellStatus$reflection","ManualCellStatus","fastDeepEqual","react","compare_1","ErrorReason","CaseStrategy","Util_Cache$1","Util_Cache$1_$ctor","Util_Casing_lowerFirst","Util_Casing_convert","caseStrategy","fieldName","replacement","limit","replacer","withGroups","pLast","groups","tmp","_s","sub1","sub2","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","BigNatModule_setCoeff","BigNatModule_pow64","BigNatModule_pow32","BigNatModule_baseBits","BigNatModule_baseN","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_createN","BigNatModule_normN","na_mut","na","findLeastBound","BigNatModule_embed","r_1","BigNatModule_boundInt","BigNatModule_eval32","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_isZero","BigNatModule_equal","q","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_lt","BigNatModule_mulSchoolBookCarry","r_mut","c_mut","k_mut","rak","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_mulSchoolBook","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","BigNatModule_scaleSubInPlace","patternInput","patternInput_1","ad","a_1","f_1","z","zLo","zHi","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","pn","qn","xa","aa","qai","BigNatModule_divmod","BigNatModule_copyN","BigNatModule_ofInt32","BigNatModule_ofInt64","BigNatModule_boundInt64","BigNatModule_embed64","BigNatModule_toString","degn","digits_4","isLeading_mut","digits_mut","n_1_mut","_arg1_mut","isLeading","n_1","n_2","prior_1","nL","nH","prior_mut","ten2k_mut","prior","ten2k","route","BigNatModule_isSmall","BigNatModule_getSmall","P","cmp","_this","MAX_DP","MAX_POWER","NAME","INVALID","INVALID_DP","DIV_BY_ZERO","UNDEFINED","NUMERIC","nl","charAt","round","Big","DP","RM","rm","more","xc","xci","unshift","pop","doExponential","isNonzero","isneg","yc","l","bl","bt","ri","bz","ai","al","rl","qc","qi","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","mod","ygtx","times","one","prec","sqrt","NE","PE","strict","valueOf","_Big_","normalize","TypeError","Decimal","BigInteger","signInt","BigInteger__get_SignInt","BigInteger__get_V","BigInteger_op_Equality_56F059C0","BigNatModule_hash","nn","BigInteger_op_LessThan_56F059C0","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","smallLim","smallPosTab","BigInteger_$ctor_Z524259A4","BigInteger_get_One","BigInteger_get_Two","two","BigInteger_get_Zero","zero","DateTimeOffset","checkOffsetInRange","offsetMatch","MapTreeLeaf$2","MapTreeLeaf$2_$ctor_5BDDA1","MapTreeLeaf$2__get_Key","MapTreeLeaf$2__get_Value","MapTreeNode$2","left","right","MapTreeNode$2_$ctor_499A11FD","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_sizeAux","m_mut","m2","MapTreeModule_size","MapTreeModule_mk","hl","hr","m_2","MapTreeModule_rebalance","m2_2","m_3","m2_3","t1h","t2h","matchValue_2","matchValue_3","MapTreeModule_add","MapTreeModule_empty","MapTreeModule_tryFind","comparer_mut","MapTreeModule_filter1","MapTreeModule_filterAux","f_mut","acc_1","acc_2","MapTreeModule_filter","MapTreeModule_spliceOutSuccessor","MapTreeModule_remove","MapTreeModule_iterOpt","MapTreeModule_iter","MapTreeModule_existsOpt","MapTreeModule_exists","MapTreeModule_mapiOpt","l2","r2","MapTreeModule_mapi","MapTreeModule_foldOpt","MapTreeModule_fold","MapTreeModule_copyToArray","MapTreeModule_ofArray","forLoopVar","MapTreeModule_ofSeq","fold_1","tupledArg","MapTreeModule_ofList","e_mut","MapTreeModule_mkFromEnumerator","MapTreeModule_MapIterator$2","stack","MapTreeModule_collapseLHS","stack_mut","isEmpty_1","empty_1","rest","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","FSharpMap","tree","this$","combineHash","activePatternResult5329","FSharpMap__ComputeHashCode","m1","e1c","e2c","map_1","toStringTag","b1","b2","kvp1","kvp2","FSharpMap__ContainsKey","FSharpMap__get_Item","FSharpMap__get_Count","thisArg","iterate_1","FSharpMap_$ctor","FSharpMap_Create","FSharpMap__get_Tree","FSharpMap__get_IsEmpty","MapTreeModule_find","MapTreeModule_mem","FSharpMap__Remove","FSharpMap__ToList","m_1_mut","MapTreeModule_toList","table","FSharpMap__Add","FSharpMap__TryFind","FSharpMap__Exists","FSharpMap__Filter","toSeq","kvp","elements","SetTreeLeaf$1","SetTreeLeaf$1_$ctor_2B595","SetTreeLeaf$1__get_Key","SetTreeNode$1","SetTreeNode$1_$ctor_Z6E7BE5F7","SetTreeNode$1__get_Left","SetTreeNode$1__get_Right","SetTreeNode$1__get_Height","SetTreeModule_countAux","t_mut","SetTreeModule_count","SetTreeModule_mk","SetTreeModule_rebalance","t2_3","t_3","t2_4","SetTreeModule_add","c_1","SetTreeModule_empty","SetTreeModule_balance","t1$0027","t2$0027","SetTreeModule_split","pivot","SetTreeModule_spliceOutSuccessor","SetTreeModule_remove","SetTreeModule_mem","SetTreeModule_iter","SetTreeModule_foldOpt","SetTreeModule_fold","SetTreeModule_exists","SetTreeModule_filterAux","SetTreeModule_filter","SetTreeModule_diffAux","SetTreeModule_diff","SetTreeModule_union","SetTreeModule_SetIterator$1","SetTreeModule_collapseLHS","x2","SetTreeModule_mkIterator","SetTreeModule_current","SetTreeModule_alreadyFinished","SetTreeModule_notStarted","SetTreeModule_mkIEnumerator","SetTreeModule_moveNext","SetTreeModule_compare","l1_mut","l2_mut","SetTreeModule_compareStacks","l1","x1_3","x2_3","pattern_matching_result","t1_6","x1_4","t2_6","x2_4","matchValue_4","pattern_matching_result_1","t1_7","x1_5","t2_7","x2_5","c_3","c_2","matchValue_5","pattern_matching_result_2","t1_8","x1_6","t2_8","x2_6","pattern_matching_result_3","t1_2","x1","t2_2","x2_1","pattern_matching_result_4","t1_4","x1_2","x2_2","SetTreeModule_copyToArray","SetTreeModule_ofArray","SetTreeModule_ofSeq","fold_2","SetTreeModule_ofList","SetTreeModule_mkFromEnumerator","FSharpSet","FSharpSet__ComputeHashCode","FSharpSet__get_Comparer","FSharpSet__get_Tree","FSharpSet__get_Count","FSharpSet__Contains","FSharpSet_$ctor","set$","FSharpSet_Empty","FSharpSet__Add","FSharpSet__Remove","FSharpSet__get_IsEmpty","FSharpSet_op_Addition","set1","set2","FSharpSet__ToList","t$0027_mut","FSharpSet__ToArray","SetTreeModule_toArray","element","remove","union","FSharpSet__Map","difference","FSharpSet_op_Subtraction","genericMsg","msg","newLine","errorToString","path","error","reason_1","decoder","SyntaxError","message","sbyte","value_2","name_1","path_1","value_3","value_4","isFinite","tryParse_3","byte","int16","uint16","int","uint32","datetime","tryParse_6","datetimeOffset","tryParse_7","requestedIndex","currentPath","vArray","list","list_1","tokens","succeed","output","_arg2","andThen","cb","ctor","d1","tuple2","decoder1","decoder2","decoder_3","path_3","decoder_2","decoder_1","path_2","arg10$0040","arg20$0040","mixedArray","decoders","arg30","arg10","extra","name_3","find","uci_1","makeUnion_1","values_1","map_2","fi","autoDecoder","autoDecodeRecordsAndUnions","isOptional","decoderRef","extra_1","makeRecord","decoderInfos","autoObject","decoder_15","tryFind_1","enumType","value_5","enumValue","path_4","value_7","path_5","value_8","enumValue_1","y_1","path_6","value_10","t_4","path_7","value_11","enumValue_2","x_2","y_2","path_8","value_13","t_5","path_9","value_14","enumValue_3","x_3","y_3","path_10","value_16","t_6","path_11","value_17","enumValue_4","x_4","y_4","path_12","value_19","t_7","path_13","value_20","matchValue_6","enumValue_5","x_5","y_5","clo2","arg20","clo3","t_8","path_14","value_21","fullname_1","decoder_13","path_15","value_22","arg0","option","decoder_14","path_16","value_23","keyDecoder","valueDecoder","decoders_1","path_17","value_24","autoObject2","path_18","value_25","path_19","value_26","decoders_1_mut","errors_mut","errors","head_1","runner","oneOf","path_20","value_28","decoder_16","path_21","value_29","matchValue_7","ofSeq_2","path_22","value_31","path_23","value_32","path_24","value_33","path_25","value_34","path_26","value_35","path_27","value_36","path_28","value_37","path_29","value_38","tryParse_8","timespan","path_30","value_39","tryParse_2","guid","_arg1_6","makeExtra","map_3","Coders","Auto_generateDecoder_7848D058","resolver","caseStrategy_1","value_40","ResolveType","Auto_unsafeFromString_Z5CB6BD","json","seq","toString_4","unit","space","autoEncodeRecordsAndUnions","skipNullField","encoder","encoderRef","setters","targetKey","encode_1","autoEncoder","field","getRecordField","source_1","target_1","case_","getUnionFields","fieldTypes","target_2","encode_2","encoders","value_9","encoder_2","Value","encoder_3","keyType","valueEncoder","value_12","activePatternResult36829","keyEncoder","clo4","arg40","activePatternResult36833","value_18","value_30","toString_3","Auto_toString_5A41365E","skipNullField_1","Auto_generateEncoder_Z127D9D79","jssha","jssha_1","hashCache","getTextGuidHash","hash","update","getHash","outputLen","shake128","Interop_reactApi","ReactInterop_useEffect","getDisposable","useEffectReact","disposable","ReactInterop_useEffectWithDeps","deps","ReactInterop_useLayoutEffect","useLayoutEffectReact","Internal_memo_Z603636D8","renderElement","areEqual","withKey","memoElementType","memo","displayName","props","createElement","Internal_propsWithKey","React_createDisposable_3A5B6456","useReact_useEffect_Z5ECA432F","effect","useReact_useEffect_Z5234A374","dependencies","useReact_useEffect_Z101E1A95","_arg4","useReact_useCallback_93353E","callbackFunction","useCallback","useReact_useRef_1505","initialValue","useRef","useReact_useElementRef","useReact_useMemo_CF4EA67","createFunction","useMemo","React_memo_62A0F746","render","useReact_useCallbackRef_7C4B0DD6","callback","lastRenderCallbackRef","callbackRef","useState","React_suspense_Z3796A576","children","fallback","Suspense","assign","useFeliz_React__React_useState_Static_1505","initial","atomWithStorage","internalAtom","argFn","Atoms_gunPeers","Atoms_isTesting","Atoms_username","Atoms_gunKeys","Selectors_gun","atomPath_1","getter_3","isTesting","gunPeers","getter_4","Selectors_gunNamespace","selectAtom","user","is","sea","Selectors_gunAtomNode","atomFamily","param","selector_1","gunNamespace","alias","result_1","readWriteValue","readWriteValue_1","lastGunAtomNode","lastUsername","lastValue","lastGunValue","lastAtomPath","lastUserAtomId","lastWrapperSet","assignLastGunAtomNode","username_1","username","gunAtomNode","_username","baseInfo","lastSubscription","subscribe","setAtom_1","copyOfStruct_1","key_1","gunAtomNode_3","promise","keys_1","Gun","SEA","verify","decrypt","decoded","_arg3","_arg1_1","lastValueTicks","lastValue_1","lastValue_2","newValue","_lastValue","_arg2_1","debounceGunPut","newValue_1","key_2","gunAtomNode_4","user_1","keys_2","keys_3","encrypt","_arg1_2","_arg2_2","_arg3_1","ex_2","_arg3_2","put","ack","ack_2","node_2","putResult","ok","lastAck","lastNode","lastPutResult","_arg5","wrapper_1","atomPath_3","getter_5","copyOfStruct_2","userAtom","userAtomId","lastWrapperSet_1","getter_6","setter_2","newValueFn","userAtom_1","oldValue","copyOfStruct_3","newValue_2","wrapper","onMount","setAtom_2","gunAtomNode_2","off","a_5","b_6","_arg2_3","atomPath_4","guidHash","pathHash","getter_7","_arg1_3","setter_3","newValue_4","newValue_5","a_6","b_7","fnCallback","fnCallback_1","shadowedCallbackFn","setValue","useAtom","getter_1","setter_1","tupledArg_1","arg_2","resolve_1","err_1","arg00","emptyArrayAtom","waitForAll","atoms","InputScope$1","AtomScope","InputAtom$1","AtomField$1","ReadOnly","ReadWrite","emptyAtom","Hooks_useStateOption","Hooks_useAtomFieldOptions","inputScope","atomField","inputScope_2","setReadOnlyValue","readOnlyValue","setReadWriteValue","newReadWriteValue","jsonDecode","readWriteValue_2","setReadWriteValue_1","jsonEncode","setReadOnlyValue_1","ReadOnlyValue","AtomField","AtomValue","ReadWriteValue","SetAtomValue","SetReadOnlyValue","SetReadWriteValue","Information_toString","Priority_toTag","HashSet","items","hashMap","HashSet__Add_2B595","HashSet__Clear","HashSet__Contains_2B595","arrayIndex","HashSet__get_Count","HashSet__Remove_2B595","HashSet__TryFindIndex_2B595","clear","Dictionary","pairs","pair","Dictionary__Add_5BDDA1","Dictionary__Clear","Dictionary__TryFind_2B595","Dictionary__get_Count","Dictionary__Remove_2B595","Dictionary__ContainsKey_2B595","Dictionary__get_Item_2B595","Dictionary__set_Item_5BDDA1","Dictionary__TryFindIndex_2B595","distinct","hashSet","groupBy","List_groupBy","LaneSortType","sortLanesByTimeOfDay","dayStart","position","lanes","dateStart","_arg8","dateEnd","_arg8_1","date_1","currentDateId","position_1","year_8","month_8","day_8","tuple_2","tuple_1","collect_1","tupledArg_2","tupledArg_3","_arg4_1","tuple","activePatternResult38271","$007CPostponedUntil$007CPostponed$007CWasPostponed$007CNotPostponed$007C","dayStart_5","time_1","position_9","referenceDay_1","dateToCompare","time_2","time_3","this$_1","date_2","_arg5_1","_arg8_2","_arg8_3","$007CSchedulingRecurrency$007CManualWithSuggestion$007CManualWithoutSuggestion$007CHasSessionToday$007C","taskState_1","cellState","_arg13","orderFn","_arg5_2","_arg6","_arg7","_arg8_4","_arg9_1","_arg10","_arg11","_arg12","filter_1","dateId_2","dateStart_1","_arg8_5","dateEnd_1","_arg8_6","View","View$reflection","getDateRange","dateSequence","dateRangeEnd_1","dateRangeStart_1","arg00_1","sortLanes","Lanes","statusMap","dateId","status","_arg5_3","activePatternResult38216","sortLanesByIncomingRecurrency","sortLanesByFrequency","lanes_1","informationState","InformationStateList","DockType","DockType$reflection","ActiveSession","informationColor","manualCellStatusColor","cellStatusColor","getDateSequence","paddingLeft","paddingRight","cellDates","dates","year_43","month_44","day_45","dateLoop","maxDate","LaneCellRenderState","LaneCellRenderOutput","renderTaskStatusMap","taskState","dates_1","date_3","e2_1","firstDateRange","lastDateRange","last_1","tupledArg_13","position_84","matchValue_23","dateStart_13","_arg8_34","dateEnd_13","matchValue_24","_arg8_35","x_19","date_24","copyOfStruct_5","_arg5_6","tupledArg_12","x_18","renderState","date_7","dateStart_2","dateEnd_2","_arg8_7","x_6","dateStart_3","_arg8_8","dateEnd_3","_arg8_9","x_7","dateStart_4","_arg8_10","dateEnd_4","matchValue_8","_arg8_11","x_8","dayStart_13","time_8","position_33","referenceDay_7","time_9","time_10","date_12","_arg8_12","_arg8_13","matchValue_21","tupledArg_11","dateStart_12","_arg8_28","dateEnd_12","matchValue_20","_arg8_29","x_17","tupledArg_10","dateStart_11","_arg8_26","dateEnd_11","matchValue_19","_arg8_27","x_16","tupledArg_9","dateStart_10","_arg8_24","dateEnd_10","matchValue_17","_arg8_25","x_15","x_13","tupledArg_8","dateStart_9","_arg8_22","dateEnd_9","matchValue_16","_arg8_23","x_14","matchValue_22","dayStart_30","time_19","position_82","referenceDay_16","dateToCompare_1","time_20","this$_2","time_21","this$_3","date_21","_arg5_4","_arg8_30","_arg8_31","dayStart_31","time_22","position_83","referenceDay_17","dateToCompare_2","time_23","this$_4","time_24","this$_5","date_22","copyOfStruct_4","_arg5_5","_arg8_32","_arg8_33","dateId_1","manualCellStatus","userStatus","moment","referenceDay_2","group","renderState_1","activePatternResult38167","getStatus","renderState_2","x_9","x_10","x_11","matchValue_9","activePatternResult38176","dateStart_5","matchValue_10","tupledArg_4","_arg8_14","dateEnd_5","_arg8_15","activePatternResult38177","dateStart_6","matchValue_11","tupledArg_5","_arg8_16","dateEnd_6","_arg8_17","activePatternResult38175","dateStart_7","matchValue_12","tupledArg_6","_arg8_18","dateEnd_7","_arg8_19","matchValue_13","matchValue_18","isDateMatched","x_12","dayOfWeek_1","matchValue_14","activePatternResult38184","dateStart_8","matchValue_15","tupledArg_7","_arg8_20","dateEnd_8","_arg8_21","days_1","tempStatus","date_4","min_15","max_15","integralRangeStep","step","stop","stepFn","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","makeRangeStepFunction","rangeDouble","DslTask","TemplateExpect","TemplateTask","Events","Expected","DslTemplate","Tasks","DslData","TaskStateList","getDatabaseMap","dslTemplate","templateTask","inputRecord","Task_1","Information_48","Scheduling_96","inputRecord_1","inputRecord_2","inputRecord_3","inputRecord_4","inputRecord_5","inputRecord_6","inputRecord_7","inputRecord_8","inputRecord_9","inputRecord_10","inputRecord_11","inputRecord_12","inputRecord_13","inputRecord_14","inputRecord_15","inputRecord_16","inputRecord_17","inputRecord_18","inputRecord_19","inputRecord_20","inputRecord_21","inputRecord_22","inputRecord_23","inputRecord_24","inputRecord_25","inputRecord_26","inputRecord_27","inputRecord_28","inputRecord_29","inputRecord_30","inputRecord_31","inputRecord_32","inputRecord_33","inputRecord_34","inputRecord_35","inputRecord_36","inputRecord_37","inputRecord_38","inputRecord_39","inputRecord_40","inputRecord_41","inputRecord_42","inputRecord_43","inputRecord_44","inputRecord_45","inputRecord_46","inputRecord_47","d_1","d_2","d_3","d_4","getDatabase","createCellStatusChangeInteraction","task","createLaneRenderingDslData","sortTaskMap","dslTasks","userInteractions","sortTaskMap_1","getTask","dslTask","taskName","taskName_1","task_2","task_3","createTaskState","mergeDslDataIntoDatabaseState","dslData","databaseState","newInformationStateMap","v$0027","databaseState_3","cellStatusChange","interaction","taskInteraction","taskId","taskId_1","cellInteraction","taskState_2","informationInteraction","taskStateMap","oldValue_1","oldTaskState","m_1","k_1","v$0027_1","oldValue_2","templatesUser","TextKey","Atoms_debug","syncAtom","storageAtom","defaultValue_1","wrapper_3","lastSetAtom","lastValue_3","getter_12","pattern_matching_result_5","lastSetAtom_2","syncValue_2","getter_13","setter_6","setAtom_3","Atoms_lastTotal","Atoms_sessionRestored","Atoms_initialPeerSkipped","Atoms_position","Atoms_ctrlPressed","Atoms_shiftPressed","Atoms_databaseIdSet","compare_2","Atoms_expandedDatabaseIdSetDefault","Atoms_expandedDatabaseIdSet","Atoms_selectedDatabaseIdSetDefault","Atoms_selectedDatabaseIdSet","Atoms_viewDefault","Atoms_view","Atoms_languageDefault","Atoms_language","Atoms_color","Atoms_weekStart","Atoms_weekStartDefault","Atoms_dayStartDefault","Atoms_dayStart","Atoms_sessionDurationDefault","Atoms_sessionDuration","Atoms_sessionBreakDurationDefault","Atoms_sessionBreakDuration","Atoms_daysBefore","Atoms_daysBeforeDefault","Atoms_daysAfter","Atoms_daysAfterDefault","Atoms_searchText","Atoms_cellSize","Atoms_cellSizeDefault","Atoms_fontSize","Atoms_fontSizeDefault","Atoms_darkMode","Atoms_systemUiFont","Atoms_leftDockDefault","Atoms_leftDock","Atoms_rightDockDefault","Atoms_rightDock","Atoms_hideTemplates","Atoms_hideSchedulingOverlay","Atoms_showViewOptions","Atoms_filterTasksByView","Atoms_informationAttachmentMapDefault","empty_2","Atoms_informationAttachmentMap","Atoms_UIFlag","Atoms_UIFlag$reflection","Atoms_UIFlagType","Atoms_uiFlagDefault","Atoms_uiFlag","Atoms_accordionFlagDefault","Atoms_accordionFlag","key_3","key_4","Atoms_Database_databaseIdIdentifier","databaseId","Atoms_Database_taskIdSet","Atoms_Database_name","Atoms_Database_owner","Atoms_Database_sharedWith","Atoms_Database_position","Atoms_Attachment_attachmentIdIdentifier","attachmentId","Atoms_Attachment_timestamp","Atoms_Attachment_attachment","Atoms_Task_taskIdIdentifier","Atoms_Task_statusMap","Atoms_Task_sessions","Atoms_Task_attachmentIdSet","Atoms_Task_cellAttachmentMap","Atoms_Task_selectionSet","Atoms_Task_information","Information_1","Scheduling_1","Atoms_Task_name","Atoms_Task_scheduling","Atoms_Task_pendingAfter","Atoms_Task_missedAfter","Atoms_Task_priority","Atoms_Task_duration","Selectors_dateSequence","position_2","compare_3","year_9","month_9","day_9","Selectors_taskIdMap","databaseIdArray","taskIdSet","Selectors_deviceInfo","database$0040431$002D1","getFn_1","isReadWrite$0040444$002D1","database","database_1","username_2","Selectors_Database_database","Selectors_Database_isReadWrite","Selectors_Attachment_attachment","attachment_1","timestamp_1","attachments$0040481$002D1","informationState$0040496$002D1","getter_2","Selectors_Information_attachments","Selectors_Information_informationState","task$0040509$002D1","getter_8","getter_9","taskState$0040525$002D1","sessions","attachmentIdSet","cellAttachmentMap","cellState_1","attachmentIdArray","timestampList","attachmentArray","cellSessions","mapIndexed_1","timestamp","attachment","map_4","getter_14","getter_15","statusMap$0040630$002D1","databaseId$0040645$002D1","taskIdMap","databaseIdList","map_5","isReadWrite$0040662$002D3","lastSession$0040670$002D1","activeSession$0040689$002D1","lastSession_1","sessionDuration","sessionBreakDuration","currentDuration","showUser$0040719$002D1","choose_1","hasSelection$0040738$002D1","selectionSet","Selectors_Task_task","Selectors_Task_taskState","Selectors_Task_statusMap","Selectors_Task_databaseId","Selectors_Task_isReadWrite","Selectors_Task_activeSession","Selectors_Task_showUser","Selectors_Task_hasSelection","Selectors_Cell_sessionStatus","setFn_1","atom_4","value_6","Selectors_Cell_selected","add_1","set$_1","remove_1","Selectors_Cell_sessions","Selectors_Cell_attachments","taskIdSet$0040816$002D1","taskStateList$0040828$002D1","informationSet$0040842$002D1","informationName","activePatternResult37001","activePatternResult37002","str_4","selectedTaskIdSet$0040863$002D1","selectedDatabaseIdSet","taskIdArray","informationStateList$0040881$002D1","activeSessions$0040895$002D1","selectedTaskIdArray","durationArray","nameArray","duration","filteredTaskIdSet$0040925$002D1","getter_10","filterTasksByView","searchText","view","selectedTaskList","selectedTaskListSearch","filteredTaskList","taskStateSeq","dateRangeEnd","dateRangeStart","filterTaskStateSeq","task_1","getter_11","sortedTaskIdList$0040983$002D1","filteredTaskIdSet","filteredTaskIdArray","statusMapArray","zip","tasksByInformationKind$00401035$002D1","sortedTaskIdList","informationArray","arg_3","Information_toTag","indexed_1","selectionSetMap$00401062$002D1","cellSelectionMap$00401077$002D1","selectionSetMap","filter_2","Selectors_Session_taskStateList","Selectors_Session_informationSet","Selectors_Session_selectedTaskIdSet","Selectors_Session_informationStateList","Selectors_Session_activeSessions","Selectors_Session_filteredTaskIdSet","Selectors_Session_sortedTaskIdList","Selectors_Session_tasksByInformationKind","Selectors_Session_cellSelectionMap","Selectors_FlukeDate_isToday","Selectors_FlukeDate_hasCellSelection","lastDate","exists_1","Selectors_BulletJournalView_weekCellsMap","taskStateArray","weekStart","weekOffset","dateIdSequence","startDate","date_mut","addDays_1","getWeekStart","position_10","date_11","position_11","arg00_6","date_8","date_6","hour_6","minute_6","arg00_5","cellsMetadata","dateId_5","taskSessions","sortedTasksMap","cellMetadata","cell","isToday","IsToday","useTheme","darkMode","useAtomValue","systemUiFont","fontSize","colors","alphaColors","dark","$00350","gray","DarkMode","whiteAlpha","focusShadow","_green","_orange","blackAlpha","heliotrope","fonts","main","SystemUiFont","breakpoints","lg","md","sm","xl","config","initialColorMode","useSystemColorMode","fontSizes","FontSize","fontWeights","black","bold","extrabold","hairline","light","medium","normal","semibold","thin","lineHeights","styles","_props","display","wordWrap","width","background","backgroundClip","borderLeft","opacity","height","borderBottomColor","borderBottomWidth","marginBottom","listStyleType","padding","marginLeft","marginRight","boxShadow","marginTop","backgroundColor","color","boxSizing","fontFamily","fontFeatureSettings","fontVariantNumeric","fontWeight","letterSpacing","lineHeight","margin","overflow","touchAction","userSelect","theme","input_1","Component","Props","Children","box","react_1","button","center","flex","hStack","icon","iconButton","link","menuItem","radioGroup","simpleGrid","spacer","useToast","toast","toastFn","title","description","isClosable","lastToast","Impl_allowsPassiveEvents","addEventListener","passive","removeEventListener","Impl_adjustPassive","maybeOptions","capture","once","Impl_createRemoveOptions","RouterModule_String_$007CPrefix$007C","RouterModule_String_$007CSuffix$007C","suffix","RouterModule_encodeParts","routeMode","activePatternResult34372","activePatternResult34373","activePatternResult34374","activePatternResult34377","RouterModule_normalizeRoute","part","encodeURIComponent","RouterModule_urlSegments","mode","segment","segment_1","trimEnd","decodeURIComponent","query","RouterModule_router","onChange","ev","urlChanged","onUrlChanged","pathname","RouterModule_onUrlChange","hashMode","eventType","action_1","options_1","addOptions","removeOptions","eventType_1","action_3","options_5","addOptions_1","removeOptions_1","fn_1","eventType_2","action_4","options_8","addOptions_2","removeOptions_2","fn_2","application","ReactErrorBoundary_ErrorBoundaryProps","Inner","ErrorComponent","OnError","ReactErrorBoundary_ErrorBoundaryState","HasErrors","ReactErrorBoundary_ErrorBoundary","setState","ThemeLoader","themeLoaderInputProps","clo0_1","clo0_2","clo1_1","arg10_1","arg00_2","clo1_2","arg10_2","RootWrapper","rootWrapperInputProps","errorElement","className","componentStack","Provider","Helpers_nothing","RouterObserver","redirect","sessionStorage","href","history","pushState","replaceState","document","createEvent","initEvent","dispatchEvent","RouterModule_nav","count_1","skip","setSessionRestored","useUpdateAtom","RooksMagic_Rooks","useKeyPress","keyEvent","useKey","e_2","eventTypes","CtrlListener_CtrlListener","ctrlKey","ShiftListener_ShiftListener","shiftKey","setView","altKey","SelectionListener_SelectionListener","cellSelectionMap","type","source_8","taskId_2","atom_2","SchedulingType","useScheduling","schedulingType","savedCallback","setMounted","mounted","callback_1","ms_1","setInterval","token_1","clearInterval","token","clearTimeout","PositionUpdater","newPosition_1","selectedDatabasePositions","pausedPosition","newPosition","year_1","month_1","day_1","hour_1","minute_1","fetchTemplatesDatabaseStateMap","newDslTemplate","taskTemplate","templateName","dslDataList","databaseState_1","databaseStateFromDslTemplate","HttpMethod","BodyContent","HttpRequest","url","method","headers","withCredentials","overridenMimeType","overridenResponseType","content","ResponseContent","HttpResponse","statusCode","responseText","responseType","responseHeaders","useHydrateDatabase","arg00$0040","atomScope","atom_3","atom_10","atom_17","atomPath_5","atom_24","atomPath_6","atomPath_7","value_64","setter_5","setter_9","setter_13","hydrateDatabase","hydrateTask","_databaseId","atom_31","atomPath_8","atomPath_9","atom_38","atomPath_10","atomPath_11","atom_45","atomPath_12","atomPath_13","atom_52","atomPath_14","atomPath_15","setter_17","setter_21","key_5","setter_25","key_6","value_48","setter_29","key_7","value_56","useHydrateTaskState","activePatternResult40530","activePatternResult40534","attachmentId_1","hydrateTaskState","useHydrateDatabaseState","hydrateDatabase_1","hydrateTaskState_1","atom_14","_arg1_4","useExportDatabase","_arg6_1","taskStateList","fileName","contentType","file","Blob","URL","createObjectURL","download","click","JS_download","useImportDatabase","hydrateDatabaseState","files","items_1","files_1","computations","reader","FileReader","onload","readyState","readAsText","FileReader_readFileAsText","w","content_1","databaseName_1","useLogout","unitVar2","leave","useSignIn","postSignIn","password","auth","authUser","useChangePassword","newPassword","change","changeUserPassword","useSignUp","signIn","hydrateTemplates","databaseStateMap","useHydrateTemplates","createUser","signUpAck","value_66","Tooltip","tooltipInputProps","wrapperProps","ref","hovered","elemRef","setIsHovered","setIsHoveredTrue","setIsHoveredFalse","elemRef_2","elem","options_2","elem_1","options_3","elemRef_4","action_5","elem_2","options_6","elem_3","options_7","useElementHover","tooltip","isLazy","isOpen","paddingTop","paddingBottom","zIndex","closeOnMouseDown","portalProps","appendToParentPortal","externalLinkIcon","icons","TopBar","arg10_4","arg10_5","arg10_9","logout","onLogoClick","arg10_3","columns","borderWidth","borderColor","cursor","alignItems","onClick","WebkitAppRegion","label","children_1","vsc","variant","border","borderRadius","textAlign","label_1","children_5","arg10_11","tabIndex","isExternal","label_2","children_8","input_2","label_3","children_11","input_3","x_20","window$_1","api","send","close","x_21","x_22","_arg1_5","spacing","direction","Spinner","spinnerInputProps","spinner","LoadingSpinner","InlineLoadingSpinner","accordionItem","accordionIcon","accordionButton","accordionPanel","flexDirection","accordionItem_1","Accordion","Atom","Items","accordion","allowMultiple","reduceMotion","defaultIndex","indexes","newIndexes","Browser_Types_Event__Event_get_Value","IconPosition","Button","Icon","iconPosition_1","Hint","icon_2","icon_3","icon_5","transform","alignSelf","CustomPopover","disclosure","initialFocusRef","Trigger","popoverTrigger","Body","popoverArrow","CloseButton","io","minWidth","onClose","preventDefault","arg10_7","popoverBody","Padding","maxWidth","maxHeight","popoverContent","popover","closeOnBlur","autoFocus","defaultIsOpen","onOpen","hintInputProps","props_1","hintTitle","as","bs","hint","RenderOnHover","InputFormat","Input","CustomProps","customProps","inputFallbackRef","inputRef","atomFieldOptions","patternInput_2","fixedValue","onValidate","onFormat","currentValueString","currentValue","fireChange","Event","bubbles","autoFocusOnAllMounts","focus","validValue_1","validValueString","validValue_2","HintTitle","Label","Hint_2","clo0_3","clo0_4","textarea","arg00_3","clo1_3","arg00_4","clo1_4","inputFormat","_focus","onKeyDown","onEnterPress","cmp_4","rightButton_1","rightButton","numberButtonClick","op","valueAsNumber","fa","rightButton_2","top","bottom","borderLeftWidth","borderLeftColor","Dropdown","visible","setVisible","Left","borderRightWidth","sketchPicker","SketchPicker","ChangeUserPasswordButton","changePassword","setPasswordField","passwordField","setNewPasswordField","newPasswordField","setNewPassword2Field","newPassword2Field","confirmClick","onHide","placeholder","DropdownMenuButton","Checked","OnClick","Checkbox","checkboxInputProps","checkbox","colorScheme","CheckboxInput","isChecked","InputList","inputListInputProps","len1","len2","newArray","i_1","inputList_1","i$0027","children_4","Settings","settingsInputProps","minute_3","arg_4","arg_8","arg_9","arg_13","_onHide","color_1","hex","toLocaleUpperCase","io5","isReadOnly","arg_14","overflowY","flexBasis","visible_1","setVisible_1","x_23","x_24","x_25","x_26","x_27","x_28","x_29","x_30","x_32","x_31","Menu","menuList","MenuListProps","menu","closeOnSelect","MenuItem_MenuItem","menuItem_MenuItemInputProps","_hover","DatabaseNodeMenu_DatabaseNodeMenu_Z63772A98","databaseNodeMenu_DatabaseNodeMenu_Z63772A98InputProps","setDatabaseIdSet","disabled","isReadWrite","setLeftDock","setRightDock","setDatabaseUIFlag","setTaskUIFlag","exportDatabase","isDisabled","bi","cmp_3","DatabaseLeafIcon","databaseLeafIconInputProps","owner","sharedWith","newSharedWith","share","newSharedWith_1","children_2","children_6","arg10_8","arg10_6","checkboxTree","react$002Dcheckbox$002Dtree_1","icon_1","halfCheck","uncheck","expandOpen","expandClose","parentClose","parentOpen","CheckboxTreeNode","NodeValue","Node$","NodeType","Databases","databasesInputProps","hideTemplates","hideTemplatesCache","setExpandedDatabaseIdSet","expandedDatabaseIdSet","databaseList","toList_1","databaseMap","setSelectedDatabaseIdSet","ids","paths","filteredDatabaseMap","nodeData","nodeType_2","newDatabaseNameList","list_6","database_2","nodes_2","nodes_1","head_2","nodeChildren","database_4","item_1","database_5","database_6","validSelectedDatabases","database_7","database_9","DatabaseId_1","isEmptyNode","Disabled","labelText","IsEmptyNode","visibility","whiteSpace","database_10","option_2","tuple_3","tuple_4","groupNodes","depth","list_4","activePatternResult42539","str_1","node_1","nodes_3","newSelectedDatabaseGuidArray_1","newExpandedDatabaseGuidArray_1","checked","expandOnClick","expanded","onCheck","onExpand","onlyLeafCheckboxes","DockPanelIcon","DockPanel","setAtom","RightIcons","MenuItemToggle","menuItemToggleInputProps","menuItemOption","menuOptionGroup","checks","DockButton","newAtomValue","LeftDock","leftDock","Icon_1","Content","transformOrigin","base","borderRightColor","AttachmentIndicator","attachmentIndicatorInputProps","attachments","cellSize","tooltipContainerRef","_after","borderTopWidth","borderTopColor","informationNameInputProps","detailsClick","TaskPriority","taskPriorityInputProps","priority","priorityText","taskNameInputProps","hasSelection","editTask","startSession","setter_4","now_1","deleteTask","cmp_5","gi","cmp_7","textOverflow","MonthResponsiveCell","monthResponsiveCellInputProps","format_1","dayInputProps","hasCellSelection","activePatternResult40919","activePatternResult40920","GridHeader","datesByMonth","firstDate","day_2","cellWidth","Day_1","date_5","format_2","useSetSelected","setCellSelectionMap","newSelection","newDates","ctrlPressed","dateList","sets","oldCellSelectionMap","initialTaskIdSet","newTaskIdList","initialDateList","fold_3","s1","s2","dateSet","y_6","newMap","oldSelection","oldSelection_1","CellMenu","cellMenuInputProps","postponedUntilLabel","until_1","setSessionStatus","sessionStatus","postponedUntil","setCellUIFlag","onClickStatus","iterate_2","postponeUntilLater","postponedUntil_1","children_3","wrapButton","onClick_1","onClick_2","wrapButtonStatus","wrapButtonTooltip","status_1","tooltipLabel","color_2","_arg9","arg10_12","arg10_13","cmp_6","arg00_14","_arg1_8","_arg1_9","hour_2","minute_2","arg00_17","_arg1_7","arg10_14","CellSessionIndicator","cellSessionIndicatorInputProps","textShadow","CellBorder","cellBorderInputProps","activePatternResult41073","CellStatusUserIndicator","activePatternResult41067","Cell","showUser","selected","setSelected","onCellClick","newSelected","placement","SemiTransparent","TaskCells","taskCellsInputProps","Cells","cellsInputProps","taskIdList","InformationView","arg10_10","tasksByInformationKind","minHeight","TaskInformationName","taskInformationNameInputProps","HabitTrackerView","PriorityView","BulletJournalView","weekCellsMap","week","cells","visibleCells","source_4","cell_1","ViewTabs","showViewOptions","Icon_2","Icon_3","tabs","ti","View_4","tab","tabs_1","tabIndex_1","lastTabIndex","tabIndex_2","tab_1","tab_3","_selected","tabList","overflowX","tab_2","tabPanel","tabPanels","tabs_2","DatabaseAccessIndicator","circle","DatabaseForm","databaseFormInputProps","onSave","onSave_1","activePatternResult36978","databaseName","databaseNames","atom_9","databaseId$0027","atom_13","importDatabase","data_1","DatabaseFormWrapper","databaseUIFlag","databaseId_1","AddAttachmentInput","addAttachmentInputInputProps","onAdd","setAddAttachmentText","addAttachmentText","addAttachment","borderBottomRightRadius","borderTopRightRadius","borderBottomLeftRadius","borderTopLeftRadius","AttachmentPanel","attachmentPanelInputProps","justifyContent","InformationForm","informationFormInputProps","onAttachmentAdd","informationAttachmentMap","InformationFormWrapper","informationUIFlag","information_1","information_2","DatabaseSelector","databaseSelectorInputProps","databaseIdSet","filteredDatabaseIdList","databaseNameList","option_3","option_1","onHide_1","activePatternResult41845","Radio","radioInputProps","radio","AreaForm","areaFormInputProps","area","areaName","area_1","AreaSelector","areaSelectorInputProps","onSelect","informationSet","sortedAreaList","area_2","Href","Link","Tooltip_2","Hint_3","area_3","onHide2","area_4","cmp_8","activePatternResult41657","ProjectForm","projectFormInputProps","project","projectName","activePatternResult36978_1","str_6","project_1","InformationSelectionType","isVisibleInformation","informationString","Information_isArea","Information_isResource","InformationSelector","informationFieldOptions","informationSelected","informationName_1","sortedInformationList","SelectionType","DisableResource","radioValueSelected","informationName_2","activePatternResult37001_1","str_12","activePatternResult37002_1","str_16","str_8","NumberInput","numberInputInputProps","ManualRadio","manualRadioInputProps","Hint_1","SuggestedRadio","suggestedRadioInputProps","OffsetDaysRadio","offsetDaysRadioInputProps","OffsetWeeksRadio","offsetWeeksRadioInputProps","OffsetMonthsRadio","offsetMonthsRadioInputProps","FixedWeeklyRadio","fixedWeeklyRadioInputProps","weeklySet","newList","FixedMonthlyRadio","fixedMonthlyRadioInputProps","monthlySet","arg0_1","FixedYearlyRadio","fixedYearlyRadioInputProps","rows_3","row","i_4","fixedRecurrency_1","Tooltip_1","fixedRecurrencyList_2","pattern_matching_result_7","month_2","fixedRecurrency_2","month_5","day_6","i_7","day_7","list_9","dayNumber","i_11","children_7","yearlySelected","month_3","i_5","day_3","fixedRecurrencyList_4","pattern_matching_result_9","day_4","month_4","fixedRecurrency_3","SchedulingSelector","schedulingSelectorInputProps","schedulingFieldOptions","scheduling","TaskForm","taskFormInputProps","setSessions","deleteSession","taskUIFlag","taskDatabaseId","atom_16","str_5","str_9","str_14","taskInformation","value_15","taskScheduling","atom_15","result_2","Information_4","Scheduling_4","atom_23","atom_28","atom_33","databaseId_2","data_3","_arg7_1","_arg6_2","start_1","TaskFormWrapper","setTaskIdSet","selectedTaskIdSet","CellForm","cellFormInputProps","CellFormWrapper","dateId_3","taskId_3","cellUIFlag","RightDock","rightDock","itemsMap","NowIndicator","SessionIndicator","activeSessions","activeSessions_1","getSessionInfo","SessionType","session","sessionInfo_1","sessionInfo","TasksIndicator","informationStateList","cellAttachmentMapArray","lastTotal","source_10","informationAttachment","tasks","taskAttachment","taskSession","cellStatus","taskState_3","cellAttachment","sum_1","total","notFirst","element_2","StatusBar","minChildWidth","justifyItems","SoundPlayer","oldActiveSessions","oldDuration","newSession","InitialPeers","gunPeer","setGunPeers","setInitialPeerSkipped","nextClick","cg","LoginScreen","usernameField","password2Field","signUp","signInClick","signUpClick","LoggedContent","sessionRestored","initialPeerSkipped","testExpr","DebugOverlay","activePatternResult41271","SortedCallCount","activePatternResult41269","App","appInputProps","wrap","cmp_1","react$002Ddom","getElementById"],"mappings":"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GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,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","file":"static/js/main.f4a6b8c2.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 166;","export default null;\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n// export function makeRangeStepFunction(step: Long, last: Long, unsigned: boolean) {\n//   const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Long) => {\n//     const comparedWithLast = LongLib.compare(x, last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","\nconst domRefs = new Map([]);\n\nif ((typeof window) !== \"undefined\") {\n    window.domRefs = domRefs;\n}\n\nexport function set$(key, value) {\n    domRefs.set(key, value);\n}\n\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            // arguments: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_a_parameter\n            // * match: matched substring\n            // * p1, p2, ...: nth capture group string\n            // * offset: offset of matched substring\n            // * string: whole string examined\n            // * groups: named capturing groups\n            //           ONLY if regex contains a named capture group AND browser supports named groups\n            // -> last element can be groups OR input string\n            // -> check if last element is string\n            const withGroups = typeof arguments[len - 1] !== \"string\";\n            let pLast = withGroups ? len - 3 : len - 2;\n            for (let i = 0; i < pLast; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[pLast++];\n            match.input = arguments[pLast++];\n            if (withGroups) {\n                match.groups = arguments[pLast];\n            }\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        replacement =\n            replacement\n                // $0 doesn't work with JS regex, see #1155\n                .replace(/\\$0/g, (_s) => \"$&\")\n                // named groups in replacement are `${name}` in .Net, but `$<name>` in JS (in regex: groups are `(?<name>...)` in both)\n                .replace(/\\${([^}]+)}/g, \"\\$<$1>\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\r\nimport { min as min_1, compare, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\r\n\r\nexport function Helpers_allocateArrayFromCons(cons, len) {\r\n    if ((typeof cons) === \"function\") {\r\n        return new cons(len);\r\n    }\r\n    else {\r\n        return new Array(len);\r\n    }\r\n}\r\n\r\nfunction indexNotFound() {\r\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\r\n}\r\n\r\nfunction differentLengths() {\r\n    throw (new Error(\"Arrays had different lengths\"));\r\n}\r\n\r\nexport function append(array1, array2, cons) {\r\n    const len1 = array1.length | 0;\r\n    const len2 = array2.length | 0;\r\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\r\n    for (let i = 0; i <= (len1 - 1); i++) {\r\n        newArray[i] = array1[i];\r\n    }\r\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\r\n        newArray[i_1 + len1] = array2[i_1];\r\n    }\r\n    return newArray;\r\n}\r\n\r\nexport function filter(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function fill(target, targetIndex, count, value) {\r\n    const start = targetIndex | 0;\r\n    return target.fill(value, start, (start + count));\r\n}\r\n\r\nexport function getSubArray(array, start, count) {\r\n    const start_1 = start | 0;\r\n    return array.slice(start_1, (start_1 + count));\r\n}\r\n\r\nexport function last(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    return array[array.length - 1];\r\n}\r\n\r\nexport function tryLast(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[array.length - 1]);\r\n    }\r\n}\r\n\r\nexport function mapIndexed(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(i, source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function map(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function mapIndexed2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapIndexed3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapFold(mapping, state, array, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = 0; i <= (array.length - 1); i++) {\r\n            const patternInput = mapping(acc, array[i]);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function mapFoldBack(mapping, array, state, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = array.length - 1; i >= 0; i--) {\r\n            const patternInput = mapping(array[i], acc);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function indexed(source) {\r\n    const len = source.length | 0;\r\n    const target = new Array(len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = [i, source[i]];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function truncate(count, array) {\r\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\r\n    const start = 0;\r\n    return array.slice(start, (start + count_1));\r\n}\r\n\r\nexport function concat(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const matchValue = arrays_1.length | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return Helpers_allocateArrayFromCons(cons, 0);\r\n        }\r\n        case 1: {\r\n            return arrays_1[0];\r\n        }\r\n        default: {\r\n            let totalIdx = 0;\r\n            let totalLength = 0;\r\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\r\n                const arr_1 = arrays_1[idx];\r\n                totalLength = ((totalLength + arr_1.length) | 0);\r\n            }\r\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\r\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\r\n                const arr_2 = arrays_1[idx_1];\r\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\r\n                    result[totalIdx] = arr_2[j];\r\n                    totalIdx = ((totalIdx + 1) | 0);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function collect(mapping, array, cons) {\r\n    return concat(map(mapping, array, null), cons);\r\n}\r\n\r\nexport function where(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function contains(value, array, eq) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return false;\r\n            }\r\n            else if (eq.Equals(value, array[i])) {\r\n                return true;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function empty(cons) {\r\n    return Helpers_allocateArrayFromCons(cons, 0);\r\n}\r\n\r\nexport function singleton(value, cons) {\r\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\r\n    ar[0] = value;\r\n    return ar;\r\n}\r\n\r\nexport function initialize(count, initializer, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (count - 1); i++) {\r\n        result[i] = initializer(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function pairwise(array) {\r\n    if (array.length < 2) {\r\n        return [];\r\n    }\r\n    else {\r\n        const count = (array.length - 1) | 0;\r\n        const result = new Array(count);\r\n        for (let i = 0; i <= (count - 1); i++) {\r\n            result[i] = [array[i], array[i + 1]];\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function replicate(count, initial, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (result.length - 1); i++) {\r\n        result[i] = initial;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function copy(array) {\r\n    return array.slice();\r\n}\r\n\r\nexport function reverse(array) {\r\n    const array_2 = array.slice();\r\n    return array_2.reverse();\r\n}\r\n\r\nexport function scan(folder, state, array, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[0] = state;\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        res[i + 1] = folder(res[i], array[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function scanBack(folder, array, state, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[array.length] = state;\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n        res[i] = folder(array[i], res[i + 1]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function skip(count, array, cons) {\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = ((count < 0) ? 0 : count) | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) ? predicate(array[count]) : false) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = count | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function take(count, array, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        return array.slice(start, (start + count));\r\n    }\r\n}\r\n\r\nexport function takeWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) ? predicate(array[count]) : false) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        const count_1 = count | 0;\r\n        return array.slice(start, (start + count_1));\r\n    }\r\n}\r\n\r\nexport function addInPlace(x, array) {\r\n    void (array.push(x));\r\n}\r\n\r\nexport function addRangeInPlace(range, array) {\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function insertRangeInPlace(index, range, array) {\r\n    let index_1;\r\n    let i = index;\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            void ((index_1 = (i | 0), array.splice(index_1, 0, x)));\r\n            i = ((i + 1) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function removeInPlace(item_1, array) {\r\n    const i = array.indexOf(item_1, 0);\r\n    if (i > -1) {\r\n        void (array.splice(i, 1));\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function removeAllInPlace(predicate, array) {\r\n    const countRemoveAll = (count) => {\r\n        const i = array.findIndex(predicate);\r\n        if (i > -1) {\r\n            void (array.splice(i, 1));\r\n            return (countRemoveAll(count) + 1) | 0;\r\n        }\r\n        else {\r\n            return count | 0;\r\n        }\r\n    };\r\n    return countRemoveAll(0) | 0;\r\n}\r\n\r\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\r\n    const diff = (targetIndex - sourceIndex) | 0;\r\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\r\n        target[i + diff] = source[i];\r\n    }\r\n}\r\n\r\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\r\n    try {\r\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\r\n    }\r\n    catch (matchValue) {\r\n        copyTo(source, sourceIndex, target, targetIndex, count);\r\n    }\r\n}\r\n\r\nexport function indexOf(array, item_1, start, count) {\r\n    const start_1 = defaultArg(start, 0) | 0;\r\n    const i = array.indexOf(item_1, start_1);\r\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return i | 0;\r\n    }\r\n}\r\n\r\nexport function partition(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\r\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\r\n    let iTrue = 0;\r\n    let iFalse = 0;\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        if (f(source[i])) {\r\n            res1[iTrue] = source[i];\r\n            iTrue = ((iTrue + 1) | 0);\r\n        }\r\n        else {\r\n            res2[iFalse] = source[i];\r\n            iFalse = ((iFalse + 1) | 0);\r\n        }\r\n    }\r\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\r\n}\r\n\r\nexport function find(predicate, array) {\r\n    const matchValue = array.find(predicate);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_2(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, array) {\r\n    return array.find(predicate);\r\n}\r\n\r\nexport function findIndex(predicate, array) {\r\n    const matchValue = array.findIndex(predicate);\r\n    if (matchValue > -1) {\r\n        return matchValue | 0;\r\n    }\r\n    else {\r\n        return indexNotFound() | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, array) {\r\n    const matchValue = array.findIndex(predicate);\r\n    if (matchValue > -1) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function pick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return indexNotFound();\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue != null) {\r\n                    return value_2(matchValue);\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function tryPick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue == null) {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function findBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound();\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return array[i];\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function tryFindBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return some(array[i]);\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function findLastIndex(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return -1;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function findIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound() | 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function choose(chooser, array, cons) {\r\n    const res = [];\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        const matchValue = chooser(array[i]);\r\n        if (matchValue != null) {\r\n            const y = value_2(matchValue);\r\n            void (res.push(y));\r\n        }\r\n    }\r\n    if ((typeof cons) === \"function\") {\r\n        return map((x) => x, res, cons);\r\n    }\r\n    else {\r\n        return res;\r\n    }\r\n}\r\n\r\nexport function foldIndexed(folder, state, array) {\r\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\r\n}\r\n\r\nexport function fold(folder, state, array) {\r\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\r\n}\r\n\r\nexport function iterate(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(array[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(i, array[i]);\r\n    }\r\n}\r\n\r\nexport function iterate2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(i, array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function isEmpty(array) {\r\n    return array.length === 0;\r\n}\r\n\r\nexport function forAll(predicate, array) {\r\n    return array.every(predicate);\r\n}\r\n\r\nexport function permute(f, array) {\r\n    const size = array.length | 0;\r\n    const res = array.slice();\r\n    const checkFlags = new Array(size);\r\n    iterateIndexed((i, x) => {\r\n        const j = f(i) | 0;\r\n        if ((j < 0) ? true : (j >= size)) {\r\n            throw (new Error(\"Not a valid permutation\"));\r\n        }\r\n        res[j] = x;\r\n        checkFlags[j] = 1;\r\n    }, array);\r\n    if (!(checkFlags.every(((y) => (1 === y))))) {\r\n        throw (new Error(\"Not a valid permutation\"));\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function setSlice(target, lower, upper, source) {\r\n    const lower_1 = defaultArg(lower, 0) | 0;\r\n    const upper_1 = defaultArg(upper, 0) | 0;\r\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\r\n    for (let i = 0; i <= length; i++) {\r\n        target[i + lower_1] = source[i];\r\n    }\r\n}\r\n\r\nexport function sortInPlaceBy(projection, xs, comparer) {\r\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\r\n}\r\n\r\nexport function sortInPlace(xs, comparer) {\r\n    xs.sort(((x, y) => comparer.Compare(x, y)));\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const comparer_1 = comparer;\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(comparer_1);\r\n    return xs_1;\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const len1 = xs.length | 0;\r\n    const len2 = ys.length | 0;\r\n    const res = new Array((len1 * len2));\r\n    for (let i = 0; i <= (xs.length - 1); i++) {\r\n        for (let j = 0; j <= (ys.length - 1); j++) {\r\n            res[(i * len2) + j] = [xs[i], ys[j]];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    const res = [];\r\n    const loop = (state_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const state_1 = state_1_mut;\r\n            const matchValue = generator(state_1);\r\n            if (matchValue != null) {\r\n                const x = matchValue[0];\r\n                const s = matchValue[1];\r\n                void (res.push(x));\r\n                state_1_mut = s;\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(state);\r\n    return res;\r\n}\r\n\r\nexport function unzip(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n    }, array);\r\n    return [res1, res2];\r\n}\r\n\r\nexport function unzip3(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    const res3 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n        res3[i] = tupledArg[2];\r\n    }, array);\r\n    return [res1, res2, res3];\r\n}\r\n\r\nexport function zip(array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function zip3(array1, array2, array3) {\r\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i], array3[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function chunkBySize(chunkSize, array) {\r\n    if (chunkSize < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\r\n            let slice;\r\n            const start_1 = (x * chunkSize) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            void (result.push(slice));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function splitAt(index, array) {\r\n    let start;\r\n    if (index < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\r\n    }\r\n    if (index > array.length) {\r\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\r\n    }\r\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\r\n}\r\n\r\nexport function compareWith(comparer, array1, array2) {\r\n    if (array1 == null) {\r\n        if (array2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (array2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        let i = 0;\r\n        let result = 0;\r\n        const length1 = array1.length | 0;\r\n        const length2 = array2.length | 0;\r\n        if (length1 > length2) {\r\n            return 1;\r\n        }\r\n        else if (length1 < length2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            while ((i < length1) ? (result === 0) : false) {\r\n                result = (comparer(array1[i], array2[i]) | 0);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return result | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function equalsWith(comparer, array1, array2) {\r\n    return compareWith((e1, e2) => compare(e1, e2), array1, array2) === 0;\r\n}\r\n\r\nexport function exactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return array[0];\r\n    }\r\n    else if (array.length === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return some(array[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function head(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        return array[0];\r\n    }\r\n}\r\n\r\nexport function tryHead(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[0]);\r\n    }\r\n}\r\n\r\nexport function tail(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\r\n    }\r\n    return array.slice(1);\r\n}\r\n\r\nexport function item(index, array) {\r\n    return array[index];\r\n}\r\n\r\nexport function tryItem(index, array) {\r\n    if ((index < 0) ? true : (index >= array.length)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[index]);\r\n    }\r\n}\r\n\r\nexport function foldBackIndexed(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldBack(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldIndexed2(folder, state, array1, array2) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        throw (new Error(\"Arrays have different lengths\"));\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        acc = folder(i, acc, array1[i], array2[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function fold2(folder, state, array1, array2) {\r\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\r\n}\r\n\r\nexport function foldBackIndexed2(folder, array1, array2, state) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const size = array1.length | 0;\r\n    for (let i = 1; i <= size; i++) {\r\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(f, array1, array2, state) {\r\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\r\n}\r\n\r\nexport function reduce(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduce(reduction_1);\r\n}\r\n\r\nexport function reduceBack(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduceRight(reduction_1);\r\n}\r\n\r\nexport function forAll2(predicate, array1, array2) {\r\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\r\n}\r\n\r\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\r\n    existsOffset:\r\n    while (true) {\r\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\r\n        if (index === array.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array_mut = array;\r\n            index_mut = (index + 1);\r\n            continue existsOffset;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists(predicate, array) {\r\n    return existsOffset(predicate, array, 0);\r\n}\r\n\r\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\r\n    existsOffset2:\r\n    while (true) {\r\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\r\n        if (index === array1.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array1[index], array2[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array1_mut = array1;\r\n            array2_mut = array2;\r\n            index_mut = (index + 1);\r\n            continue existsOffset2;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    return existsOffset2(predicate, array1, array2, 0);\r\n}\r\n\r\nexport function sum(array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, array[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function sumBy(projection, array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, projection(array[i]));\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, array[i]);\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function averageBy(projection, array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, projection(array[i]));\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function windowed(windowSize, source) {\r\n    if (windowSize <= 0) {\r\n        throw (new Error(\"windowSize must be positive\"));\r\n    }\r\n    let res;\r\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\r\n    res = (new Array(len));\r\n    for (let i = windowSize; i <= source.length; i++) {\r\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function splitInto(chunks, array) {\r\n    if (chunks < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\r\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\r\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\r\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\r\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\r\n            let slice;\r\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            void (result.push(slice));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function transpose(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const len = arrays_1.length | 0;\r\n    if (len === 0) {\r\n        return new Array(0);\r\n    }\r\n    else {\r\n        const lenInner = arrays_1[0].length | 0;\r\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\r\n            differentLengths();\r\n        }\r\n        const result = new Array(lenInner);\r\n        for (let i = 0; i <= (lenInner - 1); i++) {\r\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\r\n            for (let j = 0; j <= (len - 1); j++) {\r\n                result[i][j] = arrays_1[j][i];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n","import { join } from \"./String.js\";\r\nimport { uncurry, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\r\nimport { Record } from \"./Types.js\";\r\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\r\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\r\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\r\n\r\nexport const SR_indexOutOfBounds = \"The index was outside the range of elements in the list.\";\r\n\r\nexport const SR_inputListWasEmpty = \"List was empty\";\r\n\r\nexport const SR_inputMustBeNonNegative = \"The input must be non-negative.\";\r\n\r\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\r\n\r\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\r\n\r\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\r\n\r\nexport const SR_listsHadDifferentLengths = \"The lists had different lengths.\";\r\n\r\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\r\n\r\nexport class FSharpList extends Record {\r\n    constructor(head, tail) {\r\n        super();\r\n        this.head = head;\r\n        this.tail = tail;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        return (\"[\" + join(\"; \", xs)) + \"]\";\r\n    }\r\n    Equals(other) {\r\n        const xs = this;\r\n        if (xs === other) {\r\n            return true;\r\n        }\r\n        else {\r\n            const loop = (xs_1_mut, ys_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                    const matchValue = [xs_1.tail, ys_1.tail];\r\n                    if (matchValue[0] != null) {\r\n                        if (matchValue[1] != null) {\r\n                            const xt = matchValue[0];\r\n                            const yt = matchValue[1];\r\n                            if (equals(xs_1.head, ys_1.head)) {\r\n                                xs_1_mut = xt;\r\n                                ys_1_mut = yt;\r\n                                continue loop;\r\n                            }\r\n                            else {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (matchValue[1] != null) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(xs, other);\r\n        }\r\n    }\r\n    GetHashCode() {\r\n        const xs = this;\r\n        const loop = (i_mut, h_mut, xs_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\r\n                const matchValue = xs_1.tail;\r\n                if (matchValue != null) {\r\n                    const t = matchValue;\r\n                    if (i > 18) {\r\n                        return h | 0;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\r\n                        xs_1_mut = t;\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return h | 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0, 0, xs) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    CompareTo(other) {\r\n        const xs = this;\r\n        const loop = (xs_1_mut, ys_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                const matchValue = [xs_1.tail, ys_1.tail];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const xt = matchValue[0];\r\n                        const yt = matchValue[1];\r\n                        const c = compare(xs_1.head, ys_1.head) | 0;\r\n                        if (c === 0) {\r\n                            xs_1_mut = xt;\r\n                            ys_1_mut = yt;\r\n                            continue loop;\r\n                        }\r\n                        else {\r\n                            return c | 0;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                else if (matchValue[1] != null) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(xs, other) | 0;\r\n    }\r\n    GetEnumerator() {\r\n        const xs = this;\r\n        return ListEnumerator$1_$ctor_3002E699(xs);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const xs = this;\r\n        return getEnumerator(xs);\r\n    }\r\n}\r\n\r\nexport function FSharpList$reflection(gen0) {\r\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\r\n}\r\n\r\nexport class ListEnumerator$1 {\r\n    constructor(xs) {\r\n        this.xs = xs;\r\n        this.it = this.xs;\r\n        this.current = null;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        const matchValue = __.it.tail;\r\n        if (matchValue != null) {\r\n            const t = matchValue;\r\n            __.current = __.it.head;\r\n            __.it = t;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        const __ = this;\r\n        __.it = __.xs;\r\n        __.current = null;\r\n    }\r\n    Dispose() {\r\n    }\r\n}\r\n\r\nexport function ListEnumerator$1$reflection(gen0) {\r\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\r\n}\r\n\r\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\r\n    return new ListEnumerator$1(xs);\r\n}\r\n\r\nexport function FSharpList_get_Empty() {\r\n    return new FSharpList(null, void 0);\r\n}\r\n\r\nexport function FSharpList_Cons_305B8EAC(x, xs) {\r\n    return new FSharpList(x, xs);\r\n}\r\n\r\nexport function FSharpList__get_IsEmpty(xs) {\r\n    return xs.tail == null;\r\n}\r\n\r\nexport function FSharpList__get_Length(xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = matchValue;\r\n                continue loop;\r\n            }\r\n            else {\r\n                return i | 0;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs) | 0;\r\n}\r\n\r\nexport function FSharpList__get_Head(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return xs.head;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Tail(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                if (i === index) {\r\n                    return xs_1.head;\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    xs_1_mut = matchValue;\r\n                    continue loop;\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function empty() {\r\n    return FSharpList_get_Empty();\r\n}\r\n\r\nexport function cons(x, xs) {\r\n    return FSharpList_Cons_305B8EAC(x, xs);\r\n}\r\n\r\nexport function singleton(x) {\r\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    return FSharpList__get_IsEmpty(xs);\r\n}\r\n\r\nexport function length(xs) {\r\n    return FSharpList__get_Length(xs);\r\n}\r\n\r\nexport function head(xs) {\r\n    return FSharpList__get_Head(xs);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n}\r\n\r\nexport function tail(xs) {\r\n    return FSharpList__get_Tail(xs);\r\n}\r\n\r\nexport function tryLast(xs_mut) {\r\n    tryLast:\r\n    while (true) {\r\n        const xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return void 0;\r\n        }\r\n        else {\r\n            const t = FSharpList__get_Tail(xs);\r\n            if (FSharpList__get_IsEmpty(t)) {\r\n                return some(FSharpList__get_Head(xs));\r\n            }\r\n            else {\r\n                xs_mut = t;\r\n                continue tryLast;\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_inputListWasEmpty));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const loop = (xs_1_mut, ys_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\r\n            if (matchValue[0]) {\r\n                if (matchValue[1]) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return -1;\r\n                }\r\n            }\r\n            else if (matchValue[1]) {\r\n                return 1;\r\n            }\r\n            else {\r\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\r\n                if (c === 0) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return c | 0;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs, ys) | 0;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    const len = FSharpList__get_Length(xs) | 0;\r\n    const res = fill(new Array(len), 0, len, null);\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (!FSharpList__get_IsEmpty(xs_1)) {\r\n                res[i] = FSharpList__get_Head(xs_1);\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(0, xs);\r\n    return res;\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_1)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function foldIndexed(folder, state, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, state, xs);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    let ys_1 = ys;\r\n    while ((!FSharpList__get_IsEmpty(xs_1)) ? (!FSharpList__get_IsEmpty(ys_1)) : false) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n        ys_1 = FSharpList__get_Tail(ys_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function unfold(gen, state) {\r\n    const loop = (acc_mut, node_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, node = node_mut;\r\n            const matchValue = gen(acc);\r\n            if (matchValue != null) {\r\n                acc_mut = matchValue[1];\r\n                node_mut = ((t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t)));\r\n                continue loop;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(state, root);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    void fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    void fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function toSeq(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function ofArrayWithTail(xs, tail_1) {\r\n    let res = tail_1;\r\n    for (let i = xs.length - 1; i >= 0; i--) {\r\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function ofArray(xs) {\r\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    let xs_3, t;\r\n    if (isArrayLike(xs)) {\r\n        return ofArray(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        const root = FSharpList_get_Empty();\r\n        let node = root;\r\n        const enumerator = getEnumerator(xs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                node = ((xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t))));\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n        const xs_5 = node;\r\n        const t_2 = FSharpList_get_Empty();\r\n        xs_5.tail = t_2;\r\n        return FSharpList__get_Tail(root);\r\n    }\r\n}\r\n\r\nexport function concat(lists) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    const action = (xs) => {\r\n        node = fold((acc, x) => {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }, node, xs);\r\n    };\r\n    if (isArrayLike(lists)) {\r\n        lists.forEach(action);\r\n    }\r\n    else if (lists instanceof FSharpList) {\r\n        iterate(action, lists);\r\n    }\r\n    else {\r\n        const enumerator = getEnumerator(lists);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n    }\r\n    const xs_6 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_6.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    let xs_4, t_2;\r\n    const root = FSharpList_get_Empty();\r\n    let node;\r\n    const t = new FSharpList(state, void 0);\r\n    root.tail = t;\r\n    node = t;\r\n    let acc = state;\r\n    let xs_3 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_3)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_3));\r\n        node = ((xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2))));\r\n        xs_3 = FSharpList__get_Tail(xs_3);\r\n    }\r\n    const xs_6 = node;\r\n    const t_4 = FSharpList_get_Empty();\r\n    xs_6.tail = t_4;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return ofArray(scanBack_1(folder, toArray(xs), state));\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    let xs_1, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    let ys = xs;\r\n    while (!FSharpList__get_IsEmpty(ys)) {\r\n        let zs = mapping(FSharpList__get_Head(ys));\r\n        while (!FSharpList__get_IsEmpty(zs)) {\r\n            node = ((xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t))));\r\n            zs = FSharpList__get_Tail(zs);\r\n        }\r\n        ys = FSharpList__get_Tail(ys);\r\n    }\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = foldIndexed((i, acc, x) => {\r\n        const t = new FSharpList(mapping(i, x), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const t = new FSharpList(mapping(x), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold2((acc, x, y) => {\r\n        const t = new FSharpList(mapping(x, y), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = ((t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(0, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\r\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                zs_1_mut = FSharpList__get_Tail(zs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(root, xs, ys, zs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const patternInput_1 = fold((tupledArg, x) => {\r\n        let t;\r\n        const patternInput = mapping(tupledArg[1], x);\r\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\r\n    }, [root, state], xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_2;\r\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\r\n}\r\n\r\nexport function tryPick(f, xs) {\r\n    const loop = (xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = f(FSharpList__get_Head(xs_1));\r\n                if (matchValue == null) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs);\r\n}\r\n\r\nexport function pick(f, xs) {\r\n    const matchValue = tryPick(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(f, xs) {\r\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\r\n}\r\n\r\nexport function find(f, xs) {\r\n    const matchValue = tryFind(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(f, xs) {\r\n    return tryFindBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findBack(f, xs) {\r\n    const matchValue = tryFindBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(f, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (f(FSharpList__get_Head(xs_1))) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function findIndex(f, xs) {\r\n    const matchValue = tryFindIndex(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(f, xs) {\r\n    return tryFindIndexBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(f, xs) {\r\n    const matchValue = tryFindIndexBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryItem(n, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (i === n) {\r\n                return some(FSharpList__get_Head(xs_1));\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function item(n, xs) {\r\n    return FSharpList__get_Item_Z524259A4(xs, n);\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        if (f(x)) {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function partition(f, xs) {\r\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\r\n    const root2 = patternInput[1];\r\n    const root1 = patternInput[0];\r\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\r\n        const lacc = tupledArg[0];\r\n        const racc = tupledArg[1];\r\n        return (x) => {\r\n            let t, t_2;\r\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\r\n        };\r\n    }), [root1, root2], xs);\r\n    const t_4 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_4;\r\n    const t_5 = FSharpList_get_Empty();\r\n    patternInput_1[1].tail = t_5;\r\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\r\n}\r\n\r\nexport function choose(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const matchValue = f(x);\r\n        if (matchValue == null) {\r\n            return acc;\r\n        }\r\n        else {\r\n            const t = new FSharpList(value_1(matchValue), void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function contains(value, xs, eq) {\r\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\r\n}\r\n\r\nexport function initialize(n, f) {\r\n    let xs, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    for (let i = 0; i <= (n - 1); i++) {\r\n        node = ((xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t))));\r\n    }\r\n    const xs_2 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_2.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reduce(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputListWasEmpty));\r\n    }\r\n    else {\r\n        return fold(f, head(xs), tail(xs));\r\n    }\r\n}\r\n\r\nexport function reduceBack(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputListWasEmpty));\r\n    }\r\n    else {\r\n        return foldBack(f, tail(xs), head(xs));\r\n    }\r\n}\r\n\r\nexport function forAll(f, xs) {\r\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\r\n}\r\n\r\nexport function forAll2(f, xs, ys) {\r\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\r\n}\r\n\r\nexport function exists(f, xs) {\r\n    return tryFindIndex(f, xs) != null;\r\n}\r\n\r\nexport function exists2(f_mut, xs_mut, ys_mut) {\r\n    exists2:\r\n    while (true) {\r\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\r\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0]) {\r\n            if (matchValue[1]) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 2;\r\n            }\r\n        }\r\n        else if (matchValue[1]) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return false;\r\n            }\r\n            case 1: {\r\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    xs_mut = FSharpList__get_Tail(xs);\r\n                    ys_mut = FSharpList__get_Tail(ys);\r\n                    continue exists2;\r\n                }\r\n            }\r\n            case 2: {\r\n                throw (new Error((SR_listsHadDifferentLengths + \"\\\\nParameter name: \") + \"list2\"));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function unzip(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function unzip3(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const arr = toArray(xs);\r\n    arr.sort(comparer);\r\n    return ofArray(arr);\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    return averager.DivideByInt(fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs), count);\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    return averager.DivideByInt(fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs), count);\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return ofArray(permute_1(f, toArray(xs)));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), chunkBySize_1(chunkSize, toArray(xs))));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    iterate((x) => {\r\n        iterate((y) => {\r\n            let xs_1, t;\r\n            node = ((xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t))));\r\n        }, ys);\r\n    }, xs);\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function skip(count_mut, xs_mut) {\r\n    skip:\r\n    while (true) {\r\n        const count = count_mut, xs = xs_mut;\r\n        if (count <= 0) {\r\n            return xs;\r\n        }\r\n        else if (FSharpList__get_IsEmpty(xs)) {\r\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n        }\r\n        else {\r\n            count_mut = (count - 1);\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skip;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate_mut, xs_mut) {\r\n    skipWhile:\r\n    while (true) {\r\n        const predicate = predicate_mut, xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return xs;\r\n        }\r\n        else if (!predicate(FSharpList__get_Head(xs))) {\r\n            return xs;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skipWhile;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function take(count, xs) {\r\n    if (count < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\r\n    }\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    const loop = (acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function getSlice(startIndex, endIndex, xs) {\r\n    const len = length(xs) | 0;\r\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\r\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\r\n    if (startIndex_1 < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\r\n    }\r\n    else if (endIndex_1 >= len) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\r\n    }\r\n    else if (endIndex_1 < startIndex_1) {\r\n        return FSharpList_get_Empty();\r\n    }\r\n    else {\r\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\r\n    }\r\n}\r\n\r\nexport function splitAt(index, xs) {\r\n    if (index < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    if (index > FSharpList__get_Length(xs)) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return [take(index, xs), skip(index, xs)];\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return FSharpList__get_Head(xs);\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    if ((!FSharpList__get_IsEmpty(xs)) ? FSharpList__get_IsEmpty(FSharpList__get_Tail(xs)) : false) {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return ofArray(pairwise_1(toArray(xs)));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), windowed_1(windowSize, toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), splitInto_1(chunks, toArray(xs))));\r\n}\r\n\r\nexport function transpose(lists) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), transpose_1(map_1((xs) => toArray(xs), Array.from(lists)))));\r\n}\r\n\r\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { Union } from \"./Types.js\";\r\nimport { union_type } from \"./Reflection.js\";\r\nimport { some } from \"./Option.js\";\r\n\r\nexport class FSharpResult$2 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Ok\", \"Error\"];\r\n    }\r\n}\r\n\r\nexport function FSharpResult$2$reflection(gen0, gen1) {\r\n    return union_type(\"FSharp.Core.FSharpResult`2\", [gen0, gen1], FSharpResult$2, () => [[[\"ResultValue\", gen0]], [[\"ErrorValue\", gen1]]]);\r\n}\r\n\r\nexport function Result_Map(mapping, result) {\r\n    if (result.tag === 0) {\r\n        return new FSharpResult$2(0, mapping(result.fields[0]));\r\n    }\r\n    else {\r\n        return new FSharpResult$2(1, result.fields[0]);\r\n    }\r\n}\r\n\r\nexport function Result_MapError(mapping, result) {\r\n    if (result.tag === 0) {\r\n        return new FSharpResult$2(0, result.fields[0]);\r\n    }\r\n    else {\r\n        return new FSharpResult$2(1, mapping(result.fields[0]));\r\n    }\r\n}\r\n\r\nexport function Result_Bind(binder, result) {\r\n    if (result.tag === 0) {\r\n        return binder(result.fields[0]);\r\n    }\r\n    else {\r\n        return new FSharpResult$2(1, result.fields[0]);\r\n    }\r\n}\r\n\r\nexport class FSharpChoice$2 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of2\", \"Choice2Of2\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$2$reflection(gen0, gen1) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`2\", [gen0, gen1], FSharpChoice$2, () => [[[\"Item\", gen0]], [[\"Item\", gen1]]]);\r\n}\r\n\r\nexport class FSharpChoice$3 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of3\", \"Choice2Of3\", \"Choice3Of3\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$3$reflection(gen0, gen1, gen2) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`3\", [gen0, gen1, gen2], FSharpChoice$3, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]]]);\r\n}\r\n\r\nexport class FSharpChoice$4 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of4\", \"Choice2Of4\", \"Choice3Of4\", \"Choice4Of4\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$4$reflection(gen0, gen1, gen2, gen3) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`4\", [gen0, gen1, gen2, gen3], FSharpChoice$4, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]]]);\r\n}\r\n\r\nexport class FSharpChoice$5 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of5\", \"Choice2Of5\", \"Choice3Of5\", \"Choice4Of5\", \"Choice5Of5\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$5$reflection(gen0, gen1, gen2, gen3, gen4) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`5\", [gen0, gen1, gen2, gen3, gen4], FSharpChoice$5, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]]]);\r\n}\r\n\r\nexport class FSharpChoice$6 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of6\", \"Choice2Of6\", \"Choice3Of6\", \"Choice4Of6\", \"Choice5Of6\", \"Choice6Of6\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$6$reflection(gen0, gen1, gen2, gen3, gen4, gen5) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`6\", [gen0, gen1, gen2, gen3, gen4, gen5], FSharpChoice$6, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]]]);\r\n}\r\n\r\nexport class FSharpChoice$7 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of7\", \"Choice2Of7\", \"Choice3Of7\", \"Choice4Of7\", \"Choice5Of7\", \"Choice6Of7\", \"Choice7Of7\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$7$reflection(gen0, gen1, gen2, gen3, gen4, gen5, gen6) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`7\", [gen0, gen1, gen2, gen3, gen4, gen5, gen6], FSharpChoice$7, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]], [[\"Item\", gen6]]]);\r\n}\r\n\r\nexport function Choice_makeChoice1Of2(x) {\r\n    return new FSharpChoice$2(0, x);\r\n}\r\n\r\nexport function Choice_makeChoice2Of2(x) {\r\n    return new FSharpChoice$2(1, x);\r\n}\r\n\r\nexport function Choice_tryValueIfChoice1Of2(x) {\r\n    if (x.tag === 0) {\r\n        return some(x.fields[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Choice_tryValueIfChoice2Of2(x) {\r\n    if (x.tag === 1) {\r\n        return some(x.fields[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(Array.from(computations, (w) => startAsPromise(w))));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { ofNullable, map, bind, value as value_2, some } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { interpolate, endsWith, printf, toConsole } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { toString, Record } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { record_type, bool_type, string_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { jsOptions, equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport lodash from \"lodash.clonedeep\";\nimport lodash_1 from \"lodash.debounce\";\nimport { ofArray, toArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { singleton } from \"../../.fable/fable-library.3.2.7/AsyncBuilder.js\";\nimport { sleep } from \"../../.fable/fable-library.3.2.7/Async.js\";\n\nexport function Promise_ignore(fn) {\n    return fn.then(((value) => {\n    }));\n}\n\nexport function JS_window(fn) {\n    if ((typeof window) !== \"undefined\") {\n        return some(fn(window));\n    }\n    else {\n        toConsole(printf(\"No window found\"));\n        return void 0;\n    }\n}\n\nexport class JS_DeviceInfo extends Record {\n    constructor(UserAgent, IsEdge, IsMobile, IsElectron, IsExtension, GitHubPages, IsTesting) {\n        super();\n        this.UserAgent = UserAgent;\n        this.IsEdge = IsEdge;\n        this.IsMobile = IsMobile;\n        this.IsElectron = IsElectron;\n        this.IsExtension = IsExtension;\n        this.GitHubPages = GitHubPages;\n        this.IsTesting = IsTesting;\n    }\n}\n\nexport function JS_DeviceInfo$reflection() {\n    return record_type(\"Fluke.UI.Frontend.Bindings.JS.DeviceInfo\", [], JS_DeviceInfo, () => [[\"UserAgent\", string_type], [\"IsEdge\", bool_type], [\"IsMobile\", bool_type], [\"IsElectron\", bool_type], [\"IsExtension\", bool_type], [\"GitHubPages\", bool_type], [\"IsTesting\", bool_type]]);\n}\n\nexport const JS_deviceInfo = (() => {\n    const matchValue = JS_window((x) => x);\n    if (matchValue != null) {\n        const window$ = matchValue;\n        const userAgent = equals(window$.navigator, void 0) ? \"\" : window$.navigator.userAgent;\n        const isEdge = (new RegExp(\"Edg\\\\/\")).test(userAgent);\n        const isElectron = (new RegExp(\"Electron\\\\/\")).test(userAgent);\n        const deviceInfo = new JS_DeviceInfo(userAgent, isEdge, (new RegExp(\"Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop\", (('') + \"i\"))).test(userAgent), isElectron, window$.location.protocol === \"chrome-extension:\", endsWith(window$.location.host, \"github.io\"), (process.env.JEST_WORKER_ID) ? true : (!equals(window$.Cypress, null)));\n        toConsole(interpolate(\"deviceInfo=%P()\", [JSON.stringify(deviceInfo)]));\n        return deviceInfo;\n    }\n    else {\n        return new JS_DeviceInfo(\"window==null\", false, false, false, false, false, false);\n    }\n})();\n\nconst JS_isDebugStatic = (((!JS_deviceInfo.GitHubPages) ? (!JS_deviceInfo.IsExtension) : false) ? (!JS_deviceInfo.IsElectron) : false) ? (!JS_deviceInfo.IsMobile) : false;\n\n(function () {\n    const matchValue = JS_window((x) => x);\n    if (matchValue != null) {\n        const window$ = matchValue;\n        window$.Debug = false;\n    }\n})();\n\nexport function JS_isDebug() {\n    let debug;\n    const matchValue = JS_window((x) => x);\n    debug = ((matchValue != null) ? matchValue.Debug : false);\n    if (debug !== false) {\n        if (debug) {\n            return true;\n        }\n        else {\n            return JS_isDebugStatic;\n        }\n    }\n    else {\n        return false;\n    }\n}\n\nexport const JS_playAudio = (_file) => {\n    (() => { var audio = new Audio(_file); audio.volume = 0.5 || 1; return audio; })().play();;\n};\n\nexport function JS_newObj(fn) {\n    return jsOptions(fn);\n}\n\nexport const JS_cloneDeep = lodash;\n\nexport const JS_debounce = lodash_1;\n\nexport function JS_cloneObj(obj, fn) {\n    return fn(JS_cloneDeep(obj));\n}\n\nexport function JS_toJsArray(a) {\n    return toArray(ofArray(a));\n}\n\nexport function JS_exited() {\n    if (!JS_deviceInfo.IsTesting) {\n        return false;\n    }\n    else {\n        return window.exit === true;\n    }\n}\n\nexport function JS_waitFor(fn) {\n    return singleton.Delay(() => {\n        if (JS_exited()) {\n            return singleton.Return(null);\n        }\n        else if (fn()) {\n            return singleton.Return();\n        }\n        else {\n            toConsole(printf(\"waitFor: false. waiting...\"));\n            return singleton.Bind(sleep(100), () => singleton.ReturnFrom(JS_waitFor(fn)));\n        }\n    });\n}\n\nexport function JS_waitForObject(fn) {\n    return singleton.Delay(() => (JS_exited() ? singleton.Return(null) : singleton.Bind(fn(), (_arg1) => {\n        const obj = _arg1;\n        if (equals(obj, null)) {\n            toConsole(printf(\"waitForObject: null. waiting...\"));\n            return singleton.Bind(sleep(100), () => singleton.ReturnFrom(JS_waitForObject(fn)));\n        }\n        else {\n            return singleton.Return(obj);\n        }\n    })));\n}\n\nexport function JS_waitForSome(fn) {\n    return singleton.Delay(() => (JS_exited() ? singleton.Return(null) : singleton.Bind(fn(), (_arg1) => {\n        const obj = _arg1;\n        return (obj == null) ? singleton.Combine(JS_deviceInfo.IsTesting ? singleton.Bind(sleep(0), () => singleton.Return()) : ((console.log(some([\"waitForSome: none. waiting...\", toString(fn)])), singleton.Bind(sleep(100), () => singleton.Return()))), singleton.Delay(() => singleton.ReturnFrom(JS_waitForSome(fn)))) : singleton.Return(value_2(obj));\n    })));\n}\n\nexport function JS_ofNonEmptyObj(obj) {\n    return bind((obj_1) => {\n        if (((typeof obj_1) === \"object\") ? (Object.keys(obj_1).length === 0) : false) {\n            return void 0;\n        }\n        else {\n            return some(obj_1);\n        }\n    }, map((x) => x, ofNullable(obj)));\n}\n\nexport function JS_download(content, fileName, contentType) {\n    const a = document.createElement(\"a\");\n    const file = new Blob([content], (new (class {\n        get type() {\n            return contentType;\n        }\n        get endings() {\n            return \"transparent\";\n        }\n        set type(value) {\n        }\n        set endings(value_1) {\n        }\n    }\n    )()));\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n    a.remove();\n}\n\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","// tslint:disable:max-line-length\nimport { fromNumber, op_Division, op_Multiply, toNumber } from \"./Long.js\";\nimport { comparePrimitives, padLeftAndRightWithZeros, padWithZeros } from \"./Util.js\";\n// TimeSpan in runtime just becomes a number representing milliseconds\n/**\n * Calls:\n * - `Math.ceil` if the `value` is **negative**\n * - `Math.floor` if the `value` is **positive**\n * @param value Value to round\n */\nfunction signedRound(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n}\nexport function create(d = 0, h = 0, m = 0, s = 0, ms = 0) {\n    switch (arguments.length) {\n        case 1:\n            // ticks\n            return fromTicks(arguments[0]);\n        case 3:\n            // h,m,s\n            d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;\n            break;\n        default:\n            // d,h,m,s,ms\n            break;\n    }\n    return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\nexport function fromTicks(ticks) {\n    return toNumber(op_Division(ticks, 10000));\n}\nexport function fromDays(d) {\n    return create(d, 0, 0, 0);\n}\nexport function fromHours(h) {\n    return create(h, 0, 0);\n}\nexport function fromMinutes(m) {\n    return create(0, m, 0);\n}\nexport function fromSeconds(s) {\n    return create(0, 0, s);\n}\nexport function days(ts) {\n    return signedRound(ts / 86400000);\n}\nexport function hours(ts) {\n    return signedRound(ts % 86400000 / 3600000);\n}\nexport function minutes(ts) {\n    return signedRound(ts % 3600000 / 60000);\n}\nexport function seconds(ts) {\n    return signedRound(ts % 60000 / 1000);\n}\nexport function milliseconds(ts) {\n    return signedRound(ts % 1000);\n}\nexport function ticks(ts) {\n    return op_Multiply(fromNumber(ts), 10000);\n}\nexport function totalDays(ts) {\n    return ts / 86400000;\n}\nexport function totalHours(ts) {\n    return ts / 3600000;\n}\nexport function totalMinutes(ts) {\n    return ts / 60000;\n}\nexport function totalSeconds(ts) {\n    return ts / 1000;\n}\nexport function negate(ts) {\n    return ts * -1;\n}\nexport function add(ts1, ts2) {\n    return ts1 + ts2;\n}\nexport function subtract(ts1, ts2) {\n    return ts1 - ts2;\n}\nexport const op_Addition = add;\nexport const op_Subtraction = subtract;\nexport const compare = comparePrimitives;\nexport const compareTo = comparePrimitives;\nexport function duration(x) {\n    return Math.abs(x);\n}\nexport function toString(ts, format = \"c\", _provider) {\n    if ([\"c\", \"g\", \"G\"].indexOf(format) === -1) {\n        throw new Error(\"Custom formats are not supported\");\n    }\n    const d = Math.abs(days(ts));\n    const h = Math.abs(hours(ts));\n    const m = Math.abs(minutes(ts));\n    const s = Math.abs(seconds(ts));\n    const ms = Math.abs(milliseconds(ts));\n    const sign = ts < 0 ? \"-\" : \"\";\n    return `${sign}${d === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"c\" ? d + \".\" : d + \":\"}${format === \"g\" ? h : padWithZeros(h, 2)}:${padWithZeros(m, 2)}:${padWithZeros(s, 2)}${ms === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"g\" ? \".\" + padWithZeros(ms, 3) : \".\" + padLeftAndRightWithZeros(ms, 3, 7)}`;\n}\nexport function parse(str) {\n    const firstDot = str.search(\"\\\\.\");\n    const firstColon = str.search(\"\\\\:\");\n    if (firstDot === -1 && firstColon === -1) { // There is only a day ex: 4\n        const d = parseInt(str, 0);\n        if (isNaN(d)) {\n            throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n        }\n        else {\n            return create(d, 0, 0, 0, 0);\n        }\n    }\n    if (firstColon > 0) { // process time part\n        // WIP: (-?)(((\\d+)\\.)?([0-9]|0[0-9]|1[0-9]|2[0-3]):(\\d+)(:\\d+(\\.\\d{1,7})?)?|\\d+(?:(?!\\.)))\n        const r = /^(-?)((\\d+)\\.)?(?:0*)([0-9]|0[0-9]|1[0-9]|2[0-3]):(?:0*)([0-5][0-9]|[0-9])(:(?:0*)([0-5][0-9]|[0-9]))?\\.?(\\d+)?$/.exec(str);\n        if (r != null && r[4] != null && r[5] != null) {\n            let d = 0;\n            let ms = 0;\n            let s = 0;\n            const sign = r[1] != null && r[1] === \"-\" ? -1 : 1;\n            const h = +r[4];\n            const m = +r[5];\n            if (r[3] != null) {\n                d = +r[3];\n            }\n            if (r[7] != null) {\n                s = +r[7];\n            }\n            if (r[8] != null) {\n                // Depending on the number of decimals passed, we need to adapt the numbers\n                switch (r[8].length) {\n                    case 1:\n                        ms = +r[8] * 100;\n                        break;\n                    case 2:\n                        ms = +r[8] * 10;\n                        break;\n                    case 3:\n                        ms = +r[8];\n                        break;\n                    case 4:\n                        ms = +r[8] / 10;\n                        break;\n                    case 5:\n                        ms = +r[8] / 100;\n                        break;\n                    case 6:\n                        ms = +r[8] / 1000;\n                        break;\n                    case 7:\n                        ms = +r[8] / 10000;\n                        break;\n                    default:\n                        throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n                }\n            }\n            return sign * create(d, h, m, s, ms);\n        }\n    }\n    throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n","import { singleton } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/AsyncBuilder.js\";\nimport { indexed, filter, map } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/List.js\";\nimport { tryParse } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Int32.js\";\nimport { FSharpRef } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Types.js\";\nimport { bind } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Option.js\";\nimport { fromTicks } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/TimeSpan.js\";\nimport { op_Subtraction } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Long.js\";\nimport { getTicks, now } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Date.js\";\n\nexport function Async_lift(value) {\n    return singleton.Delay(() => singleton.Return(value));\n}\n\nexport function List_removeAt(index, list) {\n    return map((tuple) => tuple[1], filter((tupledArg) => (tupledArg[0] !== index), indexed(list)));\n}\n\nexport function String_parseInt(text) {\n    let matchValue;\n    let outArg = 0;\n    matchValue = [tryParse(text, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n        outArg = (v | 0);\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function String_parseIntMin(min, text) {\n    return bind((n) => {\n        if (n >= min) {\n            return n;\n        }\n        else {\n            return void 0;\n        }\n    }, String_parseInt(text));\n}\n\nexport const String_parseUInt = (text) => String_parseIntMin(0, text);\n\nexport function String_parseIntMax(max, text) {\n    return bind((n) => {\n        if (n <= max) {\n            return n;\n        }\n        else {\n            return void 0;\n        }\n    }, String_parseInt(text));\n}\n\nexport function DateTime_ticksDiff(ticks) {\n    let copyOfStruct;\n    let copyOfStruct_1 = fromTicks(op_Subtraction((copyOfStruct = now(), getTicks(copyOfStruct)), ticks));\n    return copyOfStruct_1;\n}\n\n","import { getTicks, now } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { set$ } from \"./Dom.fs.js\";\nimport { JS_isDebug } from \"./JS.fs.js\";\nimport { getItemFromDict } from \"../../.fable/fable-library.3.2.7/MapUtil.js\";\nimport { DateTime_ticksDiff } from \"../../../Fluke.Shared/Core.fs.js\";\n\nconst initialTicks = (() => {\n    let copyOfStruct = now();\n    return getTicks(copyOfStruct);\n})();\n\nexport const profilingState = {\n    CallCount: new Map([]),\n    Timestamps: [],\n};\n\nset$(\"profilingState\", profilingState);\n\nexport function addCount(id) {\n    if (JS_isDebug()) {\n        const matchValue = profilingState.CallCount.has(id);\n        if (matchValue) {\n            profilingState.CallCount.set(id, getItemFromDict(profilingState.CallCount, id) + 1);\n        }\n        else {\n            profilingState.CallCount.set(id, 1);\n        }\n    }\n}\n\nexport function addTimestamp(id) {\n    if (JS_isDebug()) {\n        void (profilingState.Timestamps.push([id, DateTime_ticksDiff(initialTicks)]));\n    }\n}\n\naddTimestamp(\"Init\");\n\n","import batcher$002Djs from \"batcher-js\";\n\nconst internalBatcher = batcher$002Djs;\n\nexport function batcher(fn, settings) {\n    const newFn = internalBatcher((x, _lock) => {\n        fn(x);\n    }, settings);\n    return (x_1) => {\n        newFn(x_1,(() => {\n        }));\n    };\n}\n\n","import { Result_MapError, Result_Map, FSharpResult$2 } from \"../fable-library.3.2.7/Choice.js\";\nimport { class_type } from \"../fable-library.3.2.7/Reflection.js\";\nimport { equals, getEnumerator } from \"../fable-library.3.2.7/Util.js\";\n\nexport function reject(reason) {\n    return Promise.reject(reason);\n}\n\nexport function result(a) {\n    return a.then(((arg) => (new FSharpResult$2(0, arg))),((arg_1) => (new FSharpResult$2(1, arg_1))));\n}\n\nexport function mapResult(fn, a) {\n    return a.then(((result_1) => Result_Map(fn, result_1)));\n}\n\nexport function bindResult(fn, a) {\n    return a.then(((a_1) => {\n        if (a_1.tag === 1) {\n            return Promise.resolve((new FSharpResult$2(1, a_1.fields[0])));\n        }\n        else {\n            return result(fn(a_1.fields[0]));\n        }\n    }));\n}\n\nexport function mapResultError(fn, a) {\n    return a.then(((result_1) => Result_MapError(fn, result_1)));\n}\n\nexport function tap(fn, a) {\n    return a.then(((x) => {\n        fn(x);\n        return x;\n    }));\n}\n\nexport class PromiseBuilder {\n    constructor() {\n    }\n}\n\nexport function PromiseBuilder$reflection() {\n    return class_type(\"Promise.PromiseBuilder\", void 0, PromiseBuilder);\n}\n\nexport function PromiseBuilder_$ctor() {\n    return new PromiseBuilder();\n}\n\nexport function PromiseBuilder__For_1565554B(x, seq, body) {\n    let p = Promise.resolve(undefined);\n    const enumerator = getEnumerator(seq);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const a = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            p = (p.then((() => body(a))));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return p;\n}\n\nexport function PromiseBuilder__While_2044D34(x, guard, p) {\n    if (guard()) {\n        return p.then((() => PromiseBuilder__While_2044D34(x, guard, p)));\n    }\n    else {\n        return Promise.resolve(undefined);\n    }\n}\n\nexport function PromiseBuilder__TryFinally_7D49A2FD(x, p, compensation) {\n    return p.then(((x_1) => {\n        compensation();\n        return x_1;\n    }),((er) => {\n        compensation();\n        throw er;\n    }));\n}\n\nexport function PromiseBuilder__Delay_62FBFDE1(x, generator) {\n    return {\n        then: (f1, f2) => {\n            try {\n                return generator().then(f1, f2);\n            }\n            catch (er) {\n                if (equals(f2, null)) {\n                    return Promise.reject(er);\n                }\n                else {\n                    try {\n                        return Promise.resolve(f2(er));\n                    }\n                    catch (er_1) {\n                        return Promise.reject(er_1);\n                    }\n                }\n            }\n        },\n        catch: (f) => {\n            try {\n                return generator().catch(f);\n            }\n            catch (er_2) {\n                try {\n                    return Promise.resolve(f(er_2));\n                }\n                catch (er_3) {\n                    return Promise.reject(er_3);\n                }\n            }\n        },\n    };\n}\n\nexport function PromiseBuilder__Run_212F1D4B(x, p) {\n    return new Promise(((success, fail) => {\n        try {\n            const p_1 = Promise.resolve(p);\n            p_1.then(success, fail);\n        }\n        catch (er) {\n            fail(er);\n        }\n    }));\n}\n\nexport function PromiseBuilder__Using_74F7E79D(x, resource, binder) {\n    return PromiseBuilder__TryFinally_7D49A2FD(x, binder(resource), () => {\n        let copyOfStruct = resource;\n        copyOfStruct.Dispose();\n    });\n}\n\n","import { PromiseBuilder_$ctor } from \"./Promise.fs.js\";\n\nexport const promise = PromiseBuilder_$ctor();\n\n","import { trim } from \"./String.js\";\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[\\(\\{]{0,2}[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}[\\)\\}]{0,2}$/;\nconst guidRegexNoHyphen = /^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/;\nconst guidRegexHex = /^\\{0x[0-9a-f]{8},(0x[0-9a-f]{4},){2}\\{(0x[0-9a-f]{2},){7}0x[0-9a-f]{2}\\}\\}$/;\nconst guidHexCaptures = /^([0-9a-f]{8})-(([0-9a-f]{4})-)(([0-9a-f]{4})-)([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/;\nexport function toString(str, format, _provider) {\n    if (format && (format === null || format === void 0 ? void 0 : format.length) > 0) {\n        switch (format) {\n            case \"N\":\n                return str.replace(/-/g, '');\n            case \"D\":\n                return str;\n            case \"B\":\n                return \"{\" + str + \"}\";\n            case \"P\":\n                return \"(\" + str + \")\";\n            case \"X\":\n                return str.replace(guidHexCaptures, \"{0x$1,0x$3,0x$5,{0x$6,0x$7,0x$8,0x$9,0x$10,0x$11,0x$12,0x$13}}\");\n            default:\n                throw new Error(\"Unrecognized Guid print format\");\n        }\n    }\n    else {\n        return str;\n    }\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). */\nexport function parse(str) {\n    function hyphenateGuid(str) {\n        return str.replace(guidRegexNoHyphen, \"$1-$2-$3-$4-$5\");\n    }\n    const wsTrimAndLowered = str.trim().toLowerCase();\n    if (guidRegex.test(wsTrimAndLowered)) {\n        return trim(wsTrimAndLowered, \"{\", \"}\", \"(\", \")\");\n    }\n    else if (guidRegexNoHyphen.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered);\n    }\n    else if (guidRegexHex.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered.replace(/[\\{\\},]|0x/g, ''));\n    }\n    else {\n        throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n    }\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = parse(str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\n","import { compare, physicalHash, equals, structuralHash } from \"./Util.js\";\r\n\r\nexport function HashIdentity_FromFunctions(hash, eq) {\r\n    return {\r\n        Equals(x, y) {\r\n            return eq(x, y);\r\n        },\r\n        GetHashCode(x_1) {\r\n            return hash(x_1);\r\n        },\r\n    };\r\n}\r\n\r\nexport function HashIdentity_Structural() {\r\n    return HashIdentity_FromFunctions((obj) => structuralHash(obj), (e1, e2) => equals(e1, e2));\r\n}\r\n\r\nexport function HashIdentity_Reference() {\r\n    return HashIdentity_FromFunctions((obj) => physicalHash(obj), (e1, e2) => (e1 === e2));\r\n}\r\n\r\nexport function ComparisonIdentity_FromFunction(comparer) {\r\n    return {\r\n        Compare(x, y) {\r\n            return comparer(x, y);\r\n        },\r\n    };\r\n}\r\n\r\nexport function ComparisonIdentity_Structural() {\r\n    return ComparisonIdentity_FromFunction((e1, e2) => compare(e1, e2));\r\n}\r\n\r\n","import { substring, format, isNullOrEmpty, join } from \"./String.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { clear, int32ToString } from \"./Util.js\";\r\nimport { toString } from \"./Types.js\";\r\n\r\nexport class StringBuilder {\r\n    constructor(value, capacity) {\r\n        this.buf = [];\r\n        if (!isNullOrEmpty(value)) {\r\n            void (this.buf.push(value));\r\n        }\r\n    }\r\n    toString() {\r\n        const __ = this;\r\n        return join(\"\", __.buf);\r\n    }\r\n}\r\n\r\nexport function StringBuilder$reflection() {\r\n    return class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\r\n}\r\n\r\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\r\n    return new StringBuilder(value, capacity);\r\n}\r\n\r\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\r\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\r\n}\r\n\r\nexport function StringBuilder_$ctor_Z721C83C5(value) {\r\n    return StringBuilder_$ctor_Z18115A39(value, 16);\r\n}\r\n\r\nexport function StringBuilder_$ctor() {\r\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\r\n}\r\n\r\nexport function StringBuilder__Append_Z721C83C5(x, s) {\r\n    void (x.buf.push(s));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_244C7CD6(x, c) {\r\n    void (x.buf.push(c));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_Z524259A4(x, o) {\r\n    void (x.buf.push(int32ToString(o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_5E38073B(x, o) {\r\n    void (x.buf.push(o.toString()));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_Z1FBCCD16(x, o) {\r\n    void (x.buf.push(toString(o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_4E60E31B(x, o) {\r\n    void (x.buf.push(toString(o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_695F1130(x, cs) {\r\n    void (x.buf.push(cs.join('')));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_43A65C09(x, s) {\r\n    void (x.buf.push(toString(s)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\r\n    void (x.buf.push(format(fmt, o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__AppendLine(x) {\r\n    void (x.buf.push(\"\\n\"));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\r\n    void (x.buf.push(s));\r\n    void (x.buf.push(\"\\n\"));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__get_Length(x) {\r\n    let len = 0;\r\n    for (let i = x.buf.length - 1; i >= 0; i--) {\r\n        len = ((len + x.buf[i].length) | 0);\r\n    }\r\n    return len | 0;\r\n}\r\n\r\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\r\n    return substring(toString(x), firstIndex, length);\r\n}\r\n\r\nexport function StringBuilder__Clear(x) {\r\n    clear(x.buf);\r\n    return x;\r\n}\r\n\r\n","import { structuralHash, equals } from \"./Util.js\";\r\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\r\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\r\n\r\nexport const LanguagePrimitives_GenericEqualityComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport const LanguagePrimitives_GenericEqualityERComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport function LanguagePrimitives_FastGenericComparer() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function Operators_Failure(message) {\r\n    return new Error(message);\r\n}\r\n\r\nexport function Operators_FailurePattern(exn) {\r\n    return exn.message;\r\n}\r\n\r\nexport function Operators_NullArg(x) {\r\n    throw (new Error(x));\r\n}\r\n\r\nexport function Operators_Using(resource, action) {\r\n    try {\r\n        return action(resource);\r\n    }\r\n    finally {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            resource.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function Operators_Lock(_lockObj, action) {\r\n    return action();\r\n}\r\n\r\nexport function ExtraTopLevelOperators_LazyPattern(input) {\r\n    return input.Value;\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\r\n    return format.cont((s) => {\r\n        void StringBuilder__Append_Z721C83C5(builder, s);\r\n        return continuation();\r\n    });\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\r\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\r\n    }, builder, format);\r\n}\r\n\r\n","import { equals, isArrayLike, isDisposable, toIterator, getEnumerator } from \"./Util.js\";\r\nimport { toString } from \"./Types.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { Operators_NullArg } from \"./FSharp.Core.js\";\r\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\r\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\r\n\r\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\r\n\r\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\r\n\r\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\r\n\r\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\r\n\r\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\r\n\r\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\r\n\r\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\r\n\r\nexport function Enumerator_noReset() {\r\n    throw (new Error(SR_resetNotSupported));\r\n}\r\n\r\nexport function Enumerator_notStarted() {\r\n    throw (new Error(SR_enumerationNotStarted));\r\n}\r\n\r\nexport function Enumerator_alreadyFinished() {\r\n    throw (new Error(SR_enumerationAlreadyFinished));\r\n}\r\n\r\nexport class Enumerator_Seq {\r\n    constructor(f) {\r\n        this.f = f;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        const maxCount = 4;\r\n        let i = 0;\r\n        let str = \"seq [\";\r\n        const e = getEnumerator(xs);\r\n        try {\r\n            while ((i < maxCount) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n                if (i > 0) {\r\n                    str = (str + \"; \");\r\n                }\r\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                i = ((i + 1) | 0);\r\n            }\r\n            if (i === maxCount) {\r\n                str = (str + \"; ...\");\r\n            }\r\n            return str + \"]\";\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n    GetEnumerator() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n}\r\n\r\nexport function Enumerator_Seq$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\r\n}\r\n\r\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\r\n    return new Enumerator_Seq(f);\r\n}\r\n\r\nexport class Enumerator_FromFunctions$1 {\r\n    constructor(current, next, dispose) {\r\n        this.current = current;\r\n        this.next = next;\r\n        this.dispose = dispose;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        return __.next();\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        Enumerator_noReset();\r\n    }\r\n    Dispose() {\r\n        const __ = this;\r\n        __.dispose();\r\n    }\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\r\n    return new Enumerator_FromFunctions$1(current, next, dispose);\r\n}\r\n\r\nexport function Enumerator_cast(e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        if (isDisposable(e)) {\r\n            e.Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_concat(sources) {\r\n    let outerOpt = void 0;\r\n    let innerOpt = void 0;\r\n    let started = false;\r\n    let finished = false;\r\n    let curr = void 0;\r\n    const finish = () => {\r\n        finished = true;\r\n        if (innerOpt != null) {\r\n            const inner = innerOpt;\r\n            try {\r\n                inner.Dispose();\r\n            }\r\n            finally {\r\n                innerOpt = (void 0);\r\n            }\r\n        }\r\n        if (outerOpt != null) {\r\n            const outer = outerOpt;\r\n            try {\r\n                outer.Dispose();\r\n            }\r\n            finally {\r\n                outerOpt = (void 0);\r\n            }\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        else if (finished) {\r\n            Enumerator_alreadyFinished();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        let copyOfStruct;\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (finished) {\r\n            return false;\r\n        }\r\n        else {\r\n            let res = void 0;\r\n            while (res == null) {\r\n                const matchValue = [outerOpt, innerOpt];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const inner_1 = matchValue[1];\r\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                            res = true;\r\n                        }\r\n                        else {\r\n                            try {\r\n                                inner_1.Dispose();\r\n                            }\r\n                            finally {\r\n                                innerOpt = (void 0);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        const outer_1 = matchValue[0];\r\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                            innerOpt = ((copyOfStruct = ie, getEnumerator(copyOfStruct)));\r\n                        }\r\n                        else {\r\n                            finish();\r\n                            res = false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    outerOpt = getEnumerator(sources);\r\n                }\r\n            }\r\n            return value_1(res);\r\n        }\r\n    }, () => {\r\n        if (!finished) {\r\n            finish();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_enumerateThenFinally(f, e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        try {\r\n            e.Dispose();\r\n        }\r\n        finally {\r\n            f();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\r\n    let started = false;\r\n    let curr = void 0;\r\n    let state = some(openf());\r\n    const dispose = () => {\r\n        if (state != null) {\r\n            const x_1 = value_1(state);\r\n            try {\r\n                closef(x_1);\r\n            }\r\n            finally {\r\n                state = (void 0);\r\n            }\r\n        }\r\n    };\r\n    const finish = () => {\r\n        try {\r\n            dispose();\r\n        }\r\n        finally {\r\n            curr = (void 0);\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (state != null) {\r\n            const s = value_1(state);\r\n            let matchValue_1;\r\n            try {\r\n                matchValue_1 = compute(s);\r\n            }\r\n            catch (matchValue) {\r\n                finish();\r\n                throw matchValue;\r\n            }\r\n            if (matchValue_1 != null) {\r\n                curr = matchValue_1;\r\n                return true;\r\n            }\r\n            else {\r\n                finish();\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, dispose);\r\n}\r\n\r\nexport function Enumerator_unfold(f, state) {\r\n    let curr = void 0;\r\n    let acc = state;\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (curr != null) {\r\n            const x = curr[0];\r\n            const st = curr[1];\r\n            return x;\r\n        }\r\n        else {\r\n            return Enumerator_notStarted();\r\n        }\r\n    }, () => {\r\n        curr = f(acc);\r\n        if (curr != null) {\r\n            const x_1 = curr[0];\r\n            const st_1 = curr[1];\r\n            acc = st_1;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, () => {\r\n    });\r\n}\r\n\r\nexport function indexNotFound() {\r\n    throw (new Error(SR_keyNotFoundAlt));\r\n}\r\n\r\nexport function checkNonNull(argName, arg) {\r\n    if (arg == null) {\r\n        Operators_NullArg(argName);\r\n    }\r\n}\r\n\r\nexport function mkSeq(f) {\r\n    return Enumerator_Seq_$ctor_673A07F2(f);\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return getEnumerator(xs);\r\n}\r\n\r\nexport function delay(generator) {\r\n    return mkSeq(() => getEnumerator(generator()));\r\n}\r\n\r\nexport function concat(sources) {\r\n    return mkSeq(() => Enumerator_concat(sources));\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    return mkSeq(() => Enumerator_unfold(generator, state));\r\n}\r\n\r\nexport function empty() {\r\n    return delay(() => (new Array(0)));\r\n}\r\n\r\nexport function singleton(x) {\r\n    return delay(() => singleton_1(x));\r\n}\r\n\r\nexport function ofArray(arr) {\r\n    return arr;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return toArray_1(xs);\r\n    }\r\n    else {\r\n        return Array.from(xs);\r\n    }\r\n}\r\n\r\nexport function ofList(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function toList(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return ofArray_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        return ofSeq_1(xs);\r\n    }\r\n}\r\n\r\nexport function generate(create, compute, dispose) {\r\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\r\n}\r\n\r\nexport function generateIndexed(create, compute, dispose) {\r\n    return mkSeq(() => {\r\n        let i = -1;\r\n        return Enumerator_generateWhileSome(create, (x) => {\r\n            i = ((i + 1) | 0);\r\n            return compute(i, x);\r\n        }, dispose);\r\n    });\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return concat([xs, ys]);\r\n}\r\n\r\nexport function cast(xs) {\r\n    return mkSeq(() => {\r\n        checkNonNull(\"source\", xs);\r\n        return Enumerator_cast(getEnumerator(xs));\r\n    });\r\n}\r\n\r\nexport function choose(chooser, xs) {\r\n    return generate(() => ofSeq(xs), (e) => {\r\n        let curr = void 0;\r\n        while ((curr == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return curr;\r\n    }, (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let c = 0;\r\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            while (((c === 0) ? b1 : false) ? b2 : false) {\r\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\r\n                if (c === 0) {\r\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                }\r\n            }\r\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\r\n        }\r\n        finally {\r\n            e2.Dispose();\r\n        }\r\n    }\r\n    finally {\r\n        e1.Dispose();\r\n    }\r\n}\r\n\r\nexport function contains(value, xs, comparer) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function enumerateFromFunctions(create, moveNext, current) {\r\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\r\n        const matchValue = x_1;\r\n        if (isDisposable(matchValue)) {\r\n            matchValue.Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateThenFinally(source, compensation) {\r\n    const compensation_1 = compensation;\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\r\n        }\r\n        catch (matchValue) {\r\n            compensation_1();\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateUsing(resource, source) {\r\n    const compensation = () => {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            let copyOfStruct = resource;\r\n            copyOfStruct.Dispose();\r\n        }\r\n    };\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\r\n        }\r\n        catch (matchValue_1) {\r\n            compensation();\r\n            throw matchValue_1;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateWhile(guard, xs) {\r\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    return choose((x) => {\r\n        if (f(x)) {\r\n            return some(x);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, xs);\r\n}\r\n\r\nexport function exists(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let found = false;\r\n            while (((!found) ? e1[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return found;\r\n        }\r\n        finally {\r\n            e2.Dispose();\r\n        }\r\n    }\r\n    finally {\r\n        e1.Dispose();\r\n    }\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n            else {\r\n                return v;\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n        }\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (predicate(c)) {\r\n                res = some(c);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function find(predicate, xs) {\r\n    const matchValue = tryFind(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(predicate, xs) {\r\n    return tryFindBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findBack(predicate, xs) {\r\n    const matchValue = tryFindBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (i_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\r\n                        return i;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return void 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0);\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function findIndex(predicate, xs) {\r\n    const matchValue = tryFindIndex(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, xs) {\r\n    return tryFindIndexBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(predicate, xs) {\r\n    const matchValue = tryFindIndexBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let acc = state;\r\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return acc;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let acc = state;\r\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return acc;\r\n        }\r\n        finally {\r\n            e2.Dispose();\r\n        }\r\n    }\r\n    finally {\r\n        e1.Dispose();\r\n    }\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function forAll(predicate, xs) {\r\n    return !exists((x) => (!predicate(x)), xs);\r\n}\r\n\r\nexport function forAll2(predicate, xs, ys) {\r\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryHead_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryHead_2(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function head(xs) {\r\n    const matchValue = tryHead(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function initialize(count, f) {\r\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\r\n}\r\n\r\nexport function initializeInfinite(f) {\r\n    return initialize(2147483647, f);\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length === 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return isEmpty_1(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function tryItem(index, xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryItem_1(index, xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryItem_2(index, xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            const loop = (index_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const index_1 = index_1_mut;\r\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        return void 0;\r\n                    }\r\n                    else if (index_1 === 0) {\r\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    }\r\n                    else {\r\n                        index_1_mut = (index_1 - 1);\r\n                        continue loop;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(index);\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function item(index, xs) {\r\n    const matchValue = tryItem(index, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    void fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    void fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function tryLast(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    return acc;\r\n                }\r\n                else {\r\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                    continue loop;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function length(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length | 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return length_1(xs) | 0;\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            let count = 0;\r\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                count = ((count + 1) | 0);\r\n            }\r\n            return count | 0;\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            tupledArg_1[0].Dispose();\r\n        }\r\n        finally {\r\n            tupledArg_1[1].Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            tupledArg_1[0].Dispose();\r\n        }\r\n        finally {\r\n            tupledArg_1[1].Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        const e3 = tupledArg[2];\r\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e3[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            tupledArg_1[0].Dispose();\r\n        }\r\n        finally {\r\n            try {\r\n                tupledArg_1[1].Dispose();\r\n            }\r\n            finally {\r\n                tupledArg_1[2].Dispose();\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function readOnly(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return map((x) => x, xs);\r\n}\r\n\r\nexport function cache(xs) {\r\n    let cached = false;\r\n    const xsCache = [];\r\n    return delay(() => {\r\n        if (!cached) {\r\n            cached = true;\r\n            return map((x) => {\r\n                void (xsCache.push(x));\r\n                return x;\r\n            }, xs);\r\n        }\r\n        else {\r\n            return xsCache;\r\n        }\r\n    });\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const ysCache = cache(ys);\r\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function tryPick(chooser, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function pick(chooser, xs) {\r\n    const matchValue = tryPick(chooser, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function reduce(folder, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return acc;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else {\r\n            throw (new Error(SR_inputSequenceEmpty));\r\n        }\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function reduceBack(folder, xs) {\r\n    const arr = toArray(xs);\r\n    if (arr.length > 0) {\r\n        return arr.reduceRight(folder);\r\n    }\r\n    else {\r\n        throw (new Error(SR_inputSequenceEmpty));\r\n    }\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return delay(() => ofArray(reverse_1(toArray(xs))));\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    return delay(() => {\r\n        let acc = state;\r\n        return concat([singleton(state), map((x) => {\r\n            acc = folder(acc, x);\r\n            return acc;\r\n        }, xs)]);\r\n    });\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\r\n}\r\n\r\nexport function skip(count, xs) {\r\n    return mkSeq(() => {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            for (let i = 1; i <= count; i++) {\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n                }\r\n            }\r\n            return Enumerator_enumerateThenFinally(() => {\r\n            }, e);\r\n        }\r\n        catch (matchValue) {\r\n            e.Dispose();\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function skipWhile(predicate, xs) {\r\n    return delay(() => {\r\n        let skipped = true;\r\n        return filter((x) => {\r\n            if (skipped) {\r\n                skipped = predicate(x);\r\n            }\r\n            return !skipped;\r\n        }, xs);\r\n    });\r\n}\r\n\r\nexport function tail(xs) {\r\n    return skip(1, xs);\r\n}\r\n\r\nexport function take(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if (i < count) {\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() ? predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    return delay(() => concat(map(mapping, xs)));\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), splitInto_1(chunks, toArray(xs)))));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), windowed_1(windowSize, toArray(xs)))));\r\n}\r\n\r\nexport function transpose(xss) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), transpose_1(map_1((xs_1) => toArray(xs_1), toArray(xss))))));\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    return delay(() => {\r\n        const arr = toArray(xs);\r\n        arr.sort(comparer);\r\n        return ofArray(arr);\r\n    });\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: xs\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: xs\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), chunkBySize_1(chunkSize, toArray(xs)))));\r\n}\r\n\r\n","import { FSharpRef, Record } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { array_type, lambda_type, unit_type, bool_type, int32_type, option_type, record_type, string_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { JS_isDebug, JS_deviceInfo } from \"./JS.fs.js\";\nimport gun_2 from \"gun/gun\";\nimport * as radix from \"gun/lib/radix\";\nimport * as radisk from \"gun/lib/radisk\";\nimport * as store from \"gun/lib/store\";\nimport * as rindexed from \"gun/lib/rindexed\";\nimport gun_3 from \"gun\";\nimport * as sea from \"gun/sea\";\nimport * as promise from \"gun/lib/promise\";\nimport { split, join, toText, printf, interpolate, toConsole } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { batcher } from \"./Batcher.fs.js\";\nimport { take, equalsWith, map } from \"../../.fable/fable-library.3.2.7/Array.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { getTicks, now } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { promise as promise_1 } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { singleton as singleton_1, append as append_1, head, isEmpty } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { tryParse } from \"../../.fable/fable-library.3.2.7/Guid.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { comparePrimitives } from \"../../.fable/fable-library.3.2.7/Util.js\";\n\nexport class GunKeys extends Record {\n    constructor(pub, epub, priv, epriv) {\n        super();\n        this.pub = pub;\n        this.epub = epub;\n        this.priv = priv;\n        this.epriv = epriv;\n    }\n}\n\nexport function GunKeys$reflection() {\n    return record_type(\"Fluke.UI.Frontend.Bindings.Gun.GunKeys\", [], GunKeys, () => [[\"pub\", string_type], [\"epub\", string_type], [\"priv\", string_type], [\"epriv\", string_type]]);\n}\n\nexport class UserResult extends Record {\n    constructor(err, ok, pub, $0023, at, wait) {\n        super();\n        this.err = err;\n        this.ok = ok;\n        this.pub = pub;\n        this[\"#\"] = $0023;\n        this.at = at;\n        this.wait = wait;\n    }\n}\n\nexport function UserResult$reflection() {\n    return record_type(\"Fluke.UI.Frontend.Bindings.Gun.UserResult\", [], UserResult, () => [[\"err\", option_type(string_type)], [\"ok\", option_type(int32_type)], [\"pub\", option_type(string_type)], [\"#\", option_type(string_type)], [\"at\", option_type(string_type)], [\"wait\", bool_type]]);\n}\n\nexport class IGunUserPub extends Record {\n    constructor(alias, pub) {\n        super();\n        this.alias = alias;\n        this.pub = pub;\n    }\n}\n\nexport function IGunUserPub$reflection() {\n    return record_type(\"Fluke.UI.Frontend.Bindings.Gun.IGunUserPub\", [], IGunUserPub, () => [[\"alias\", option_type(string_type)], [\"pub\", option_type(string_type)]]);\n}\n\nexport class Types_PutAck extends Record {\n    constructor(err, ok, $0023, at) {\n        super();\n        this.err = err;\n        this.ok = ok;\n        this[\"#\"] = $0023;\n        this.at = at;\n    }\n}\n\nexport function Types_PutAck$reflection() {\n    return record_type(\"Fluke.UI.Frontend.Bindings.Gun.Types.PutAck\", [], Types_PutAck, () => [[\"err\", option_type(int32_type)], [\"ok\", option_type(int32_type)], [\"#\", option_type(string_type)], [\"at\", option_type(string_type)]]);\n}\n\nexport class Types_PutNode extends Record {\n    constructor(err, off) {\n        super();\n        this.err = err;\n        this.off = off;\n    }\n}\n\nexport function Types_PutNode$reflection() {\n    return record_type(\"Fluke.UI.Frontend.Bindings.Gun.Types.PutNode\", [], Types_PutNode, () => [[\"err\", option_type(int32_type)], [\"off\", option_type(lambda_type(unit_type, unit_type))]]);\n}\n\nexport class GunProps extends Record {\n    constructor(peers, radisk, localStorage, multicast) {\n        super();\n        this.peers = peers;\n        this.radisk = radisk;\n        this.localStorage = localStorage;\n        this.multicast = multicast;\n    }\n}\n\nexport function GunProps$reflection() {\n    return record_type(\"Fluke.UI.Frontend.Bindings.Gun.GunProps\", [], GunProps, () => [[\"peers\", option_type(array_type(string_type))], [\"radisk\", option_type(bool_type)], [\"localStorage\", option_type(bool_type)], [\"multicast\", option_type(bool_type)]]);\n}\n\nexport const gun = JS_deviceInfo.IsTesting ? gun_2 : (((((gun_3)))));\n\n\n\nexport function createUser(user, username, password) {\n    return new Promise(((res, err) => {\n        try {\n            user.create(username, password, res);\n        }\n        catch (ex) {\n            toConsole(interpolate(\"createUser error: %P()\", [ex]));\n            err(ex);\n        }\n    }));\n}\n\nexport function authUser(user, username, password) {\n    return new Promise(((res, err) => {\n        try {\n            user.auth(username, password, res);\n        }\n        catch (ex) {\n            toConsole(printf(\"authUser error: {ex}\"));\n            err(ex);\n        }\n    }));\n}\n\nexport function changeUserPassword(user, username, password, newPassword) {\n    return new Promise(((res, err) => {\n        try {\n            user.auth(username, password, res, {\n                change: newPassword,\n            });\n        }\n        catch (ex) {\n            toConsole(printf(\"changeUserPassword error: {ex}\"));\n            err(ex);\n        }\n    }));\n}\n\nexport function deleteUser(user, username, password) {\n    return new Promise(((res, err) => {\n        try {\n            user.delete(username, password, res);\n        }\n        catch (ex) {\n            toConsole(printf(\"deleteUser error: {ex}\"));\n            err(ex);\n        }\n    }));\n}\n\nexport const batchData = batcher((arg_1) => {\n    let pr_1;\n    const pr = map((item) => item.Fn([item.Timestamp, item.Data]), arg_1);\n    pr_1 = (Promise.all(pr));\n    pr_1.then();\n}, {\n    interval: 1000,\n});\n\nexport function subscribe(gun_1, fn) {\n    gun_1.on((data, _key) => {\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribe.on() data. batching...data=%P() key=%P()\", [data, _key]))]));\n        }\n        fn(data);\n    });\n}\n\nexport const batchSubscribe = batcher((arg_1) => {\n    let pr_1;\n    const pr = map((item) => PromiseBuilder__Run_212F1D4B(promise_1, PromiseBuilder__Delay_62FBFDE1(promise_1, () => {\n        subscribe(item.GunAtomNode, (data) => {\n            let copyOfStruct;\n            batchData({\n                Data: data,\n                Fn: item.Fn,\n                Timestamp: (copyOfStruct = now(), getTicks(copyOfStruct)),\n            });\n        });\n        return Promise.resolve();\n    })), arg_1);\n    pr_1 = (Promise.all(pr));\n    pr_1.then();\n}, {\n    interval: 1000,\n});\n\nexport function wrapAtomPath(atomPath) {\n    const header = toText(interpolate(\"%P()/\", [\"Fluke\"]));\n    return toText(interpolate(\"%P()%P()\", [(atomPath.indexOf(header) === 0) ? \"\" : header, atomPath]));\n}\n\nexport function getGunNodePath(atomPath, keyIdentifier) {\n    let outArg, keyIdentifier_2;\n    return wrapAtomPath(isEmpty(keyIdentifier) ? atomPath : (((outArg = \"00000000-0000-0000-0000-000000000000\", [tryParse(head(keyIdentifier), new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg]))[0] ? ((keyIdentifier_2 = keyIdentifier, join(\"/\", toList(delay(() => {\n        const matchValue = split(atomPath, [\"/\"], null, 0);\n        if ((!equalsWith((x, y) => comparePrimitives(x, y), matchValue, null)) ? (matchValue.length === 1) : false) {\n            return append(singleton(matchValue[0]), delay(() => keyIdentifier_2));\n        }\n        else {\n            const nodes = matchValue;\n            return append(take(nodes.length - 2, nodes), delay(() => {\n                let outArg_1;\n                const secondLast = nodes[nodes.length - 2];\n                return append(((outArg_1 = \"00000000-0000-0000-0000-000000000000\", [tryParse(secondLast, new FSharpRef(() => outArg_1, (v_1) => {\n                    outArg_1 = v_1;\n                })), outArg_1]))[0] ? append(keyIdentifier_2, delay(() => singleton(secondLast))) : append(singleton(secondLast), delay(() => keyIdentifier_2)), delay(() => singleton(nodes[nodes.length - 1])));\n            }));\n        }\n    }))))) : join(\"/\", append_1(singleton_1(atomPath), keyIdentifier))));\n}\n\n","import { JS_isDebug } from \"./JS.fs.js\";\nimport { toText, interpolate, toConsole } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { getGunNodePath } from \"./Gun.fs.js\";\nimport { FSharpRef, Union } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { union_type, string_type, class_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { tryGetValue } from \"../../.fable/fable-library.3.2.7/MapUtil.js\";\nimport { some } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport * as jotai from \"jotai\";\nimport * as utils from \"jotai/utils\";\n\nconst Jotai_atomPathMap = new Map([]);\n\nconst Jotai_atomIdMap = new Map([]);\n\nwindow.atomPathMap = Jotai_atomPathMap;\n\nwindow.atomIdMap = Jotai_atomIdMap;\n\nexport function Jotai_registerAtom(atomPath, keyIdentifier, atom) {\n    let atomPath_2, atom_1;\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"registerAtom atomPath=%P() keyIdentifier=%P() atom=%P()\", [atomPath, keyIdentifier, atom]))]));\n    }\n    if (keyIdentifier == null) {\n        return [atom, void 0];\n    }\n    else {\n        const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n        void ((atomPath_2 = gunNodePath, (Jotai_atomPathMap.set(atomPath_2, atom.toString()), atomPath_2)));\n        return [(atom_1 = atom, (Jotai_atomIdMap.set(atom_1.toString(), gunNodePath), atom_1)), gunNodePath];\n    }\n}\n\nexport class Jotai_AtomReference$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Atom\", \"Path\"];\n    }\n}\n\nexport function Jotai_AtomReference$1$reflection(gen0) {\n    return union_type(\"Fluke.UI.Frontend.Bindings.Jotai.AtomReference`1\", [gen0], Jotai_AtomReference$1, () => [[[\"Item\", class_type(\"Fluke.UI.Frontend.Bindings.Jotai.Atom`1\", [gen0])]], [[\"Item\", string_type]]]);\n}\n\nexport function Jotai_queryAtomPath(atomReference) {\n    if (atomReference.tag === 1) {\n        let matchValue_1;\n        let outArg_1 = null;\n        matchValue_1 = [tryGetValue(Jotai_atomPathMap, atomReference.fields[0], new FSharpRef(() => outArg_1, (v_1) => {\n            outArg_1 = v_1;\n        })), outArg_1];\n        if (matchValue_1[0]) {\n            return some(matchValue_1[1]);\n        }\n        else {\n            return void 0;\n        }\n    }\n    else {\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(Jotai_atomIdMap, atomReference.fields[0].toString(), new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return some(matchValue[1]);\n        }\n        else {\n            return void 0;\n        }\n    }\n}\n\nexport const Jotai_jotai = jotai;\n\nexport const Jotai_jotaiUtils = utils;\n\n","import { Record, Union, Attribute } from \"../../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Types.js\";\nimport { enum_type, list_type, int32_type, option_type, string_type, record_type, union_type, class_type } from \"../../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Reflection.js\";\n\nexport class Generator_DuCases extends Attribute {\n    constructor(_configGroup) {\n        super();\n    }\n}\n\nexport function Generator_DuCases$reflection() {\n    return class_type(\"Fluke.Shared.Domain.Model.Generator.DuCases\", void 0, Generator_DuCases, class_type(\"System.Attribute\"));\n}\n\nexport function Generator_DuCases_$ctor_Z721C83C5(_configGroup) {\n    return new Generator_DuCases(_configGroup);\n}\n\nexport class Generator_Fields extends Attribute {\n    constructor(_configGroup) {\n        super();\n    }\n}\n\nexport function Generator_Fields$reflection() {\n    return class_type(\"Fluke.Shared.Domain.Model.Generator.Fields\", void 0, Generator_Fields, class_type(\"System.Attribute\"));\n}\n\nexport function Generator_Fields_$ctor_Z721C83C5(_configGroup) {\n    return new Generator_Fields(_configGroup);\n}\n\nexport class Information extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Project\", \"Area\", \"Resource\", \"Archive\"];\n    }\n}\n\nexport function Information$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.Information\", [], Information, () => [[[\"project\", Project$reflection()]], [[\"area\", Area$reflection()]], [[\"resource\", Resource$reflection()]], [[\"information\", Information$reflection()]]]);\n}\n\nexport class Area extends Record {\n    constructor(Name) {\n        super();\n        this.Name = Name;\n    }\n}\n\nexport function Area$reflection() {\n    return record_type(\"Fluke.Shared.Domain.Model.Area\", [], Area, () => [[\"Name\", AreaName$reflection()]]);\n}\n\nexport class AreaName extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"AreaName\"];\n    }\n}\n\nexport function AreaName$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.AreaName\", [], AreaName, () => [[[\"name\", string_type]]]);\n}\n\nexport class Project extends Record {\n    constructor(Name, Area) {\n        super();\n        this.Name = Name;\n        this.Area = Area;\n    }\n}\n\nexport function Project$reflection() {\n    return record_type(\"Fluke.Shared.Domain.Model.Project\", [], Project, () => [[\"Name\", ProjectName$reflection()], [\"Area\", Area$reflection()]]);\n}\n\nexport class ProjectName extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ProjectName\"];\n    }\n}\n\nexport function ProjectName$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.ProjectName\", [], ProjectName, () => [[[\"name\", string_type]]]);\n}\n\nexport class Resource extends Record {\n    constructor(Name, Area) {\n        super();\n        this.Name = Name;\n        this.Area = Area;\n    }\n}\n\nexport function Resource$reflection() {\n    return record_type(\"Fluke.Shared.Domain.Model.Resource\", [], Resource, () => [[\"Name\", ResourceName$reflection()], [\"Area\", Area$reflection()]]);\n}\n\nexport class ResourceName extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ResourceName\"];\n    }\n}\n\nexport function ResourceName$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.ResourceName\", [], ResourceName, () => [[[\"name\", string_type]]]);\n}\n\nexport class InformationName extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Area\", \"Project\", \"Resource\"];\n    }\n}\n\nexport function InformationName$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.InformationName\", [], InformationName, () => [[[\"name\", AreaName$reflection()]], [[\"areaName\", AreaName$reflection()], [\"name\", ProjectName$reflection()]], [[\"name\", ResourceName$reflection()]]]);\n}\n\nexport class Task extends Record {\n    constructor(Id, Name, Information, Duration, PendingAfter, MissedAfter, Scheduling, Priority) {\n        super();\n        this.Id = Id;\n        this.Name = Name;\n        this.Information = Information;\n        this.Duration = Duration;\n        this.PendingAfter = PendingAfter;\n        this.MissedAfter = MissedAfter;\n        this.Scheduling = Scheduling;\n        this.Priority = Priority;\n    }\n}\n\nexport function Task$reflection() {\n    return record_type(\"Fluke.Shared.Domain.Model.Task\", [], Task, () => [[\"Id\", TaskId$reflection()], [\"Name\", TaskName$reflection()], [\"Information\", Information$reflection()], [\"Duration\", option_type(Minute$reflection())], [\"PendingAfter\", option_type(FlukeTime$reflection())], [\"MissedAfter\", option_type(FlukeTime$reflection())], [\"Scheduling\", Scheduling$reflection()], [\"Priority\", option_type(Priority$reflection())]]);\n}\n\nexport class TaskId extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"TaskId\"];\n    }\n}\n\nexport function TaskId$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.TaskId\", [], TaskId, () => [[[\"guid\", class_type(\"System.Guid\")]]]);\n}\n\nexport class TaskName extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"TaskName\"];\n    }\n}\n\nexport function TaskName$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.TaskName\", [], TaskName, () => [[[\"name\", string_type]]]);\n}\n\nexport class Minute extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Minute\"];\n    }\n}\n\nexport function Minute$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.Minute\", [], Minute, () => [[[\"Item\", int32_type]]]);\n}\n\nexport class FlukeTime extends Record {\n    constructor(Hour, Minute) {\n        super();\n        this.Hour = Hour;\n        this.Minute = Minute;\n    }\n}\n\nexport function FlukeTime$reflection() {\n    return record_type(\"Fluke.Shared.Domain.Model.FlukeTime\", [], FlukeTime, () => [[\"Hour\", Hour$reflection()], [\"Minute\", Minute$reflection()]]);\n}\n\nexport class Hour extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Hour\"];\n    }\n}\n\nexport function Hour$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.Hour\", [], Hour, () => [[[\"Item\", int32_type]]]);\n}\n\nexport class Scheduling extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Manual\", \"Recurrency\"];\n    }\n}\n\nexport function Scheduling$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.Scheduling\", [], Scheduling, () => [[[\"Item\", ManualScheduling$reflection()]], [[\"Item\", Recurrency$reflection()]]]);\n}\n\nexport class ManualScheduling extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"WithSuggestion\", \"WithoutSuggestion\"];\n    }\n}\n\nexport function ManualScheduling$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.ManualScheduling\", [], ManualScheduling, () => [[], []]);\n}\n\nexport class Recurrency extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Offset\", \"Fixed\"];\n    }\n}\n\nexport function Recurrency$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.Recurrency\", [], Recurrency, () => [[[\"Item\", RecurrencyOffset$reflection()]], [[\"Item\", list_type(FixedRecurrency$reflection())]]]);\n}\n\nexport class RecurrencyOffset extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Days\", \"Weeks\", \"Months\"];\n    }\n}\n\nexport function RecurrencyOffset$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.RecurrencyOffset\", [], RecurrencyOffset, () => [[[\"length\", int32_type]], [[\"length\", int32_type]], [[\"length\", int32_type]]]);\n}\n\nexport class FixedRecurrency extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Weekly\", \"Monthly\", \"Yearly\"];\n    }\n}\n\nexport function FixedRecurrency$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.FixedRecurrency\", [], FixedRecurrency, () => [[[\"dayOfWeek\", enum_type(\"System.DayOfWeek\", int32_type, [[\"Sunday\", 0], [\"Monday\", 1], [\"Tuesday\", 2], [\"Wednesday\", 3], [\"Thursday\", 4], [\"Friday\", 5], [\"Saturday\", 6]])]], [[\"day\", Day$reflection()]], [[\"day\", Day$reflection()], [\"month\", enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]])]]]);\n}\n\nexport class Day extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Day\"];\n    }\n}\n\nexport function Day$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.Day\", [], Day, () => [[[\"day\", int32_type]]]);\n}\n\nexport class Priority extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Low1\", \"Low2\", \"Low3\", \"Medium4\", \"Medium5\", \"Medium6\", \"High7\", \"High8\", \"High9\", \"Critical10\"];\n    }\n}\n\nexport function Priority$reflection() {\n    return union_type(\"Fluke.Shared.Domain.Model.Priority\", [], Priority, () => [[], [], [], [], [], [], [], [], [], []]);\n}\n\nexport function Information_Name_Z233FE4C2(information_mut) {\n    Information_Name_Z233FE4C2:\n    while (true) {\n        const information = information_mut;\n        switch (information.tag) {\n            case 1: {\n                return new InformationName(0, information.fields[0].Name);\n            }\n            case 2: {\n                return new InformationName(2, information.fields[0].Name);\n            }\n            case 3: {\n                information_mut = information.fields[0];\n                continue Information_Name_Z233FE4C2;\n            }\n            default: {\n                return new InformationName(1, information.fields[0].Area.Name, information.fields[0].Name);\n            }\n        }\n        break;\n    }\n}\n\n","import { Record, Union } from \"../../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Types.js\";\nimport { string_type, option_type, class_type, list_type, tuple_type, enum_type, int32_type, record_type, union_type } from \"../../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Reflection.js\";\nimport { Minute$reflection, TaskId$reflection, Information$reflection, Task$reflection, Day$reflection, FlukeTime$reflection } from \"./Model.fs.js\";\n\nexport class UserInteraction extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"UserInteraction\"];\n    }\n}\n\nexport function UserInteraction$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.UserInteraction\", [], UserInteraction, () => [[[\"moment\", FlukeDateTime$reflection()], [\"username\", Username$reflection()], [\"interaction\", Interaction$reflection()]]]);\n}\n\nexport class FlukeDateTime extends Record {\n    constructor(Date$, Time) {\n        super();\n        this.Date = Date$;\n        this.Time = Time;\n    }\n}\n\nexport function FlukeDateTime$reflection() {\n    return record_type(\"Fluke.Shared.Domain.UserInteraction.FlukeDateTime\", [], FlukeDateTime, () => [[\"Date\", FlukeDate$reflection()], [\"Time\", FlukeTime$reflection()]]);\n}\n\nexport class FlukeDate extends Record {\n    constructor(Year, Month, Day) {\n        super();\n        this.Year = Year;\n        this.Month = (Month | 0);\n        this.Day = Day;\n    }\n}\n\nexport function FlukeDate$reflection() {\n    return record_type(\"Fluke.Shared.Domain.UserInteraction.FlukeDate\", [], FlukeDate, () => [[\"Year\", Year$reflection()], [\"Month\", enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]])], [\"Day\", Day$reflection()]]);\n}\n\nexport class TempSchedule extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"TimeSchedule1\", \"TimeSchedule2\"];\n    }\n}\n\nexport function TempSchedule$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.TempSchedule\", [], TempSchedule, () => [[[\"date\", FlukeDate$reflection()], [\"Schedulings\", list_type(tuple_type(FlukeTime$reflection(), Task$reflection()))]], [[\"date\", FlukeDate$reflection()], [\"Schedulings\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [FlukeTime$reflection(), Task$reflection()])]]]);\n}\n\nexport class Year extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Year\"];\n    }\n}\n\nexport function Year$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.Year\", [], Year, () => [[[\"Item\", int32_type]]]);\n}\n\nexport class Interaction extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Information\", \"Task\", \"Cell\"];\n    }\n}\n\nexport function Interaction$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.Interaction\", [], Interaction, () => [[[\"information\", Information$reflection()], [\"interaction\", InformationInteraction$reflection()]], [[\"task\", TaskId$reflection()], [\"interaction\", TaskInteraction$reflection()]], [[\"taskId\", TaskId$reflection()], [\"dateId\", DateId$reflection()], [\"interaction\", CellInteraction$reflection()]]]);\n}\n\nexport class InformationInteraction extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Attachment\", \"Sort\"];\n    }\n}\n\nexport function InformationInteraction$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.InformationInteraction\", [], InformationInteraction, () => [[[\"attachment\", Attachment$reflection()]], [[\"top\", option_type(Information$reflection())], [\"bottom\", option_type(Information$reflection())]]]);\n}\n\nexport class Attachment extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Comment\", \"Link\", \"Video\", \"Image\", \"Attachment\"];\n    }\n}\n\nexport function Attachment$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.Attachment\", [], Attachment, () => [[[\"comment\", Comment$$reflection()]], [[\"url\", string_type]], [[\"url\", string_type]], [[\"url\", string_type]], [[\"username\", Username$reflection()], [\"Attachment\", Attachment$reflection()]]]);\n}\n\nexport class Comment$ extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Comment\"];\n    }\n}\n\nexport function Comment$$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.Comment\", [], Comment$, () => [[[\"comment\", string_type]]]);\n}\n\nexport class User extends Record {\n    constructor(Username, Color, WeekStart, DayStart, SessionDuration, SessionBreakDuration) {\n        super();\n        this.Username = Username;\n        this.Color = Color;\n        this.WeekStart = (WeekStart | 0);\n        this.DayStart = DayStart;\n        this.SessionDuration = SessionDuration;\n        this.SessionBreakDuration = SessionBreakDuration;\n    }\n}\n\nexport function User$reflection() {\n    return record_type(\"Fluke.Shared.Domain.UserInteraction.User\", [], User, () => [[\"Username\", Username$reflection()], [\"Color\", Color$reflection()], [\"WeekStart\", enum_type(\"System.DayOfWeek\", int32_type, [[\"Sunday\", 0], [\"Monday\", 1], [\"Tuesday\", 2], [\"Wednesday\", 3], [\"Thursday\", 4], [\"Friday\", 5], [\"Saturday\", 6]])], [\"DayStart\", FlukeTime$reflection()], [\"SessionDuration\", Minute$reflection()], [\"SessionBreakDuration\", Minute$reflection()]]);\n}\n\nexport class Username extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Username\"];\n    }\n}\n\nexport function Username$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.Username\", [], Username, () => [[[\"username\", string_type]]]);\n}\n\nexport class Color extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Color\"];\n    }\n}\n\nexport function Color$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.Color\", [], Color, () => [[[\"hex\", string_type]]]);\n}\n\nexport class Language extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"English\", \"Portuguese\"];\n    }\n}\n\nexport function Language$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.Language\", [], Language, () => [[], []]);\n}\n\nexport class TaskInteraction extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Attachment\", \"Archive\", \"Session\", \"Sort\"];\n    }\n}\n\nexport function TaskInteraction$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.TaskInteraction\", [], TaskInteraction, () => [[[\"attachment\", Attachment$reflection()]], [], [[\"session\", Session$reflection()]], [[\"top\", option_type(TaskId$reflection())], [\"bottom\", option_type(TaskId$reflection())]]]);\n}\n\nexport class Session extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Session\"];\n    }\n}\n\nexport function Session$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.Session\", [], Session, () => [[[\"start\", FlukeDateTime$reflection()]]]);\n}\n\nexport class DateId extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DateId\"];\n    }\n}\n\nexport function DateId$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.DateId\", [], DateId, () => [[[\"referenceDay\", FlukeDate$reflection()]]]);\n}\n\nexport class CellInteraction extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Attachment\", \"StatusChange\"];\n    }\n}\n\nexport function CellInteraction$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.CellInteraction\", [], CellInteraction, () => [[[\"attachment\", Attachment$reflection()]], [[\"cellStatusChange\", CellStatusChange$reflection()]]]);\n}\n\nexport class CellStatusChange extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Postpone\", \"Complete\", \"Dismiss\", \"Schedule\"];\n    }\n}\n\nexport function CellStatusChange$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.CellStatusChange\", [], CellStatusChange, () => [[[\"until\", option_type(FlukeTime$reflection())]], [], [], []]);\n}\n\nexport class AttachmentId extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"AttachmentId\"];\n    }\n}\n\nexport function AttachmentId$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.AttachmentId\", [], AttachmentId, () => [[[\"guid\", class_type(\"System.Guid\")]]]);\n}\n\nexport class Temp_AttachmentInteraction_ extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Pin_\"];\n    }\n}\n\nexport function Temp_AttachmentInteraction_$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.Temp.AttachmentInteraction_\", [], Temp_AttachmentInteraction_, () => [[]]);\n}\n\nexport class Temp_DayInteraction_ extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Holiday_\"];\n    }\n}\n\nexport function Temp_DayInteraction_$reflection() {\n    return union_type(\"Fluke.Shared.Domain.UserInteraction.Temp.DayInteraction_\", [], Temp_DayInteraction_, () => [[]]);\n}\n\n","import { Union, Record } from \"../../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Types.js\";\nimport { FlukeTime$reflection, TaskId$reflection, Information$reflection, Task$reflection } from \"./Model.fs.js\";\nimport { tuple_type, string_type, union_type, option_type, record_type, int32_type, class_type, list_type } from \"../../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Reflection.js\";\nimport { DateId$reflection, Session$reflection, Attachment$reflection, FlukeDateTime$reflection, Username$reflection } from \"./UserInteraction.fs.js\";\n\nexport class SessionData extends Record {\n    constructor(TaskList, InformationStateMap, TaskStateMap, UnfilteredTaskCount) {\n        super();\n        this.TaskList = TaskList;\n        this.InformationStateMap = InformationStateMap;\n        this.TaskStateMap = TaskStateMap;\n        this.UnfilteredTaskCount = (UnfilteredTaskCount | 0);\n    }\n}\n\nexport function SessionData$reflection() {\n    return record_type(\"Fluke.Shared.Domain.State.SessionData\", [], SessionData, () => [[\"TaskList\", list_type(Task$reflection())], [\"InformationStateMap\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [Information$reflection(), InformationState$reflection()])], [\"TaskStateMap\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [Task$reflection(), TaskState$reflection()])], [\"UnfilteredTaskCount\", int32_type]]);\n}\n\nexport class Database extends Record {\n    constructor(Id, Name, Owner, SharedWith, Position) {\n        super();\n        this.Id = Id;\n        this.Name = Name;\n        this.Owner = Owner;\n        this.SharedWith = SharedWith;\n        this.Position = Position;\n    }\n}\n\nexport function Database$reflection() {\n    return record_type(\"Fluke.Shared.Domain.State.Database\", [], Database, () => [[\"Id\", DatabaseId$reflection()], [\"Name\", DatabaseName$reflection()], [\"Owner\", Username$reflection()], [\"SharedWith\", DatabaseAccess$reflection()], [\"Position\", option_type(FlukeDateTime$reflection())]]);\n}\n\nexport class DatabaseId extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DatabaseId\"];\n    }\n}\n\nexport function DatabaseId$reflection() {\n    return union_type(\"Fluke.Shared.Domain.State.DatabaseId\", [], DatabaseId, () => [[[\"guid\", class_type(\"System.Guid\")]]]);\n}\n\nexport class DatabaseName extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DatabaseName\"];\n    }\n}\n\nexport function DatabaseName$reflection() {\n    return union_type(\"Fluke.Shared.Domain.State.DatabaseName\", [], DatabaseName, () => [[[\"name\", string_type]]]);\n}\n\nexport class DatabaseState extends Record {\n    constructor(Database, InformationStateMap, TaskStateMap) {\n        super();\n        this.Database = Database;\n        this.InformationStateMap = InformationStateMap;\n        this.TaskStateMap = TaskStateMap;\n    }\n}\n\nexport function DatabaseState$reflection() {\n    return record_type(\"Fluke.Shared.Domain.State.DatabaseState\", [], DatabaseState, () => [[\"Database\", Database$reflection()], [\"InformationStateMap\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [Information$reflection(), InformationState$reflection()])], [\"TaskStateMap\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [TaskId$reflection(), TaskState$reflection()])]]);\n}\n\nexport class DatabaseAccess extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Public\", \"Private\"];\n    }\n}\n\nexport function DatabaseAccess$reflection() {\n    return union_type(\"Fluke.Shared.Domain.State.DatabaseAccess\", [], DatabaseAccess, () => [[], [[\"accessList\", list_type(tuple_type(Username$reflection(), Access$reflection()))]]]);\n}\n\nexport class Access extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ReadWrite\", \"ReadOnly\"];\n    }\n}\n\nexport function Access$reflection() {\n    return union_type(\"Fluke.Shared.Domain.State.Access\", [], Access, () => [[], []]);\n}\n\nexport class InformationState extends Record {\n    constructor(Information, Attachments, SortList) {\n        super();\n        this.Information = Information;\n        this.Attachments = Attachments;\n        this.SortList = SortList;\n    }\n}\n\nexport function InformationState$reflection() {\n    return record_type(\"Fluke.Shared.Domain.State.InformationState\", [], InformationState, () => [[\"Information\", Information$reflection()], [\"Attachments\", list_type(tuple_type(FlukeDateTime$reflection(), Attachment$reflection()))], [\"SortList\", list_type(tuple_type(option_type(Information$reflection()), option_type(Information$reflection())))]]);\n}\n\nexport class TaskState extends Record {\n    constructor(Task, Sessions, Attachments, SortList, CellStateMap) {\n        super();\n        this.Task = Task;\n        this.Sessions = Sessions;\n        this.Attachments = Attachments;\n        this.SortList = SortList;\n        this.CellStateMap = CellStateMap;\n    }\n}\n\nexport function TaskState$reflection() {\n    return record_type(\"Fluke.Shared.Domain.State.TaskState\", [], TaskState, () => [[\"Task\", Task$reflection()], [\"Sessions\", list_type(Session$reflection())], [\"Attachments\", list_type(tuple_type(FlukeDateTime$reflection(), Attachment$reflection()))], [\"SortList\", list_type(tuple_type(option_type(TaskId$reflection()), option_type(TaskId$reflection())))], [\"CellStateMap\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [DateId$reflection(), CellState$reflection()])]]);\n}\n\nexport class CellState extends Record {\n    constructor(Status, Attachments, Sessions) {\n        super();\n        this.Status = Status;\n        this.Attachments = Attachments;\n        this.Sessions = Sessions;\n    }\n}\n\nexport function CellState$reflection() {\n    return record_type(\"Fluke.Shared.Domain.State.CellState\", [], CellState, () => [[\"Status\", CellStatus$reflection()], [\"Attachments\", list_type(tuple_type(FlukeDateTime$reflection(), Attachment$reflection()))], [\"Sessions\", list_type(Session$reflection())]]);\n}\n\nexport class CellStatus extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Disabled\", \"Suggested\", \"Pending\", \"Missed\", \"MissedToday\", \"UserStatus\"];\n    }\n}\n\nexport function CellStatus$reflection() {\n    return union_type(\"Fluke.Shared.Domain.State.CellStatus\", [], CellStatus, () => [[], [], [], [], [], [[\"username\", Username$reflection()], [\"status\", ManualCellStatus$reflection()]]]);\n}\n\nexport class ManualCellStatus extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Completed\", \"Postponed\", \"Dismissed\", \"Scheduled\"];\n    }\n}\n\nexport function ManualCellStatus$reflection() {\n    return union_type(\"Fluke.Shared.Domain.State.ManualCellStatus\", [], ManualCellStatus, () => [[], [[\"until\", option_type(FlukeTime$reflection())]], [], []]);\n}\n\n","import react from \"fast-deep-equal/react\";\nimport { compare as compare_1, equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\n\nconst fastDeepEqual = react;\n\nexport function compare(a, b) {\n    const matchValue = [a, b];\n    if ((!equals(matchValue[0], null)) ? (!equals(matchValue[1], null)) : false) {\n        return compare_1(matchValue[0], matchValue[1]) === 0;\n    }\n    else {\n        return fastDeepEqual(a, b);\n    }\n}\n\n","import { FSharpRef, Record, Union } from \"../fable-library.3.2.7/Types.js\";\nimport { record_type, class_type, tuple_type, lambda_type, union_type, list_type, obj_type, string_type } from \"../fable-library.3.2.7/Reflection.js\";\nimport { FSharpResult$2 } from \"../fable-library.3.2.7/Choice.js\";\nimport { addToDict, tryGetValue } from \"../fable-library.3.2.7/MapUtil.js\";\nimport { replace } from \"../fable-library.3.2.7/RegExp.js\";\n\nexport class ErrorReason extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"BadPrimitive\", \"BadPrimitiveExtra\", \"BadType\", \"BadField\", \"BadPath\", \"TooSmallArray\", \"FailMessage\", \"BadOneOf\"];\n    }\n}\n\nexport function ErrorReason$reflection() {\n    return union_type(\"Thoth.Json.ErrorReason\", [], ErrorReason, () => [[[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type], [\"Item3\", string_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type], [\"Item3\", string_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item\", string_type]], [[\"Item\", list_type(string_type)]]]);\n}\n\nexport class CaseStrategy extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"PascalCase\", \"CamelCase\", \"SnakeCase\"];\n    }\n}\n\nexport function CaseStrategy$reflection() {\n    return union_type(\"Thoth.Json.CaseStrategy\", [], CaseStrategy, () => [[], [], []]);\n}\n\nexport class ExtraCoders extends Record {\n    constructor(Hash, Coders) {\n        super();\n        this.Hash = Hash;\n        this.Coders = Coders;\n    }\n}\n\nexport function ExtraCoders$reflection() {\n    return record_type(\"Thoth.Json.ExtraCoders\", [], ExtraCoders, () => [[\"Hash\", string_type], [\"Coders\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, tuple_type(lambda_type(obj_type, obj_type), lambda_type(string_type, lambda_type(obj_type, union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [obj_type, tuple_type(string_type, ErrorReason$reflection())], FSharpResult$2, () => [[[\"ResultValue\", obj_type]], [[\"ErrorValue\", tuple_type(string_type, ErrorReason$reflection())]]]))))])]]);\n}\n\nexport class Util_Cache$1 {\n    constructor() {\n        this.cache = (new Map([]));\n    }\n}\n\nexport function Util_Cache$1$reflection(gen0) {\n    return class_type(\"Thoth.Json.Util.Cache`1\", [gen0], Util_Cache$1);\n}\n\nexport function Util_Cache$1_$ctor() {\n    return new Util_Cache$1();\n}\n\nexport function Util_Cache$1__GetOrAdd_43981464(__, key, factory) {\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(__.cache, key, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        const x_1 = factory();\n        addToDict(__.cache, key, x_1);\n        return x_1;\n    }\n}\n\nexport const Util_CachedEncoders = Util_Cache$1_$ctor();\n\nexport const Util_CachedDecoders = Util_Cache$1_$ctor();\n\nexport function Util_Casing_lowerFirst(str) {\n    return str.slice(void 0, 0 + 1).toLowerCase() + str.slice(1, str.length);\n}\n\nexport function Util_Casing_convert(caseStrategy, fieldName) {\n    switch (caseStrategy.tag) {\n        case 2: {\n            return replace(Util_Casing_lowerFirst(fieldName), \"[A-Z]\", \"_$0\").toLowerCase();\n        }\n        case 0: {\n            return fieldName;\n        }\n        default: {\n            return Util_Casing_lowerFirst(fieldName);\n        }\n    }\n}\n\n","import { Record } from \"../Types.js\";\r\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\r\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\r\nimport { copy, initialize, map, fill } from \"../Array.js\";\r\nimport { toArray, empty, head, tail, isEmpty, cons } from \"../List.js\";\r\nimport { int32ToString } from \"../Util.js\";\r\nimport { isNullOrEmpty, join } from \"../String.js\";\r\n\r\nexport class BigNat extends Record {\r\n    constructor(bound, digits) {\r\n        super();\r\n        this.bound = (bound | 0);\r\n        this.digits = digits;\r\n    }\r\n}\r\n\r\nexport function BigNat$reflection() {\r\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\r\n}\r\n\r\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\r\n    BigNatModule_FFT_pow32:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return 1;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (x * x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_FFT_pow32;\r\n        }\r\n        else {\r\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_leastBounding2Power(b) {\r\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\r\n        findBounding2Power:\r\n        while (true) {\r\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\r\n            if (b_1 <= tp) {\r\n                return [tp, i];\r\n            }\r\n            else {\r\n                b_1_mut = b_1;\r\n                tp_mut = (tp * 2);\r\n                i_mut = (i + 1);\r\n                continue findBounding2Power;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return findBounding2Power(b, 1, 0);\r\n}\r\n\r\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\r\n\r\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\r\n\r\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\r\n\r\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\r\n\r\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\r\n\r\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\r\n\r\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\r\n\r\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\r\n\r\nexport const BigNatModule_FFT_Fp_p = 2013265921;\r\n\r\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\r\n\r\nexport function BigNatModule_FFT_Fp_toInt(x) {\r\n    return ~(~x);\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\r\n    return x >>> 0;\r\n}\r\n\r\nexport const BigNatModule_FFT_Fp_mzero = 0;\r\n\r\nexport const BigNatModule_FFT_Fp_mone = 1;\r\n\r\nexport const BigNatModule_FFT_Fp_mtwo = 2;\r\n\r\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\r\n    BigNatModule_FFT_Fp_mpow:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return BigNatModule_FFT_Fp_mone;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_FFT_Fp_mpow;\r\n        }\r\n        else {\r\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\r\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\r\n    BigNatModule_FFT_Fp_mpowL:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (equals(n, fromBits(0, 0, false))) {\r\n            return BigNatModule_FFT_Fp_mone;\r\n        }\r\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\r\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\r\n            n_mut = op_Division(n, fromBits(2, 0, false));\r\n            continue BigNatModule_FFT_Fp_mpowL;\r\n        }\r\n        else {\r\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\r\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\r\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_minv(x) {\r\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\r\n}\r\n\r\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\r\n    let x_1, x_3, y_5;\r\n    if (n === 1) {\r\n        res[offset] = u[mu];\r\n    }\r\n    else {\r\n        const halfN = (~(~(n / 2))) | 0;\r\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        const offsetHalfN = (offset + halfN) | 0;\r\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\r\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\r\n        let wj = BigNatModule_FFT_Fp_mone;\r\n        for (let j = 0; j <= (halfN - 1); j++) {\r\n            const even = res[offset + j];\r\n            const odd = res[offsetHalfN + j];\r\n            res[offset + j] = ((even + ((x_1 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0))) % BigNatModule_FFT_Fp_p);\r\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - ((x_3 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0))) % BigNatModule_FFT_Fp_p);\r\n            wj = ((y_5 = wj, toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\r\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\r\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\r\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\r\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\r\n}\r\n\r\nexport const BigNatModule_FFT_maxTwoPower = 29;\r\n\r\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\r\n\r\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\r\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\r\n    const n = bigK | 0;\r\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\r\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\r\n    return BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\r\n        const x = uT[i];\r\n        const y = vT[i];\r\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n    }, Uint32Array));\r\n}\r\n\r\nexport function BigNatModule_FFT_padTo(n, u) {\r\n    const uBound = u.length | 0;\r\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\r\n}\r\n\r\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\r\n    const patternInput = BigNatModule_FFT_leastBounding2Power((degu + degv) + 1);\r\n    const bigK = patternInput[0] | 0;\r\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\r\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\r\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\r\n    const n = bigK | 0;\r\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\r\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\r\n    return map((x_1) => BigNatModule_FFT_Fp_toInt(x_1), BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\r\n        const x = uT[i];\r\n        const y = vT[i];\r\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n    }, Uint32Array)), Int32Array);\r\n}\r\n\r\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\r\n\r\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\r\n\r\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\r\n\r\nexport function BigNatModule_bound(n) {\r\n    return n.bound;\r\n}\r\n\r\nexport function BigNatModule_setBound(n, v) {\r\n    n.bound = (v | 0);\r\n}\r\n\r\nexport function BigNatModule_coeff(n, i) {\r\n    return n.digits[i];\r\n}\r\n\r\nexport function BigNatModule_coeff64(n, i) {\r\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\r\n}\r\n\r\nexport function BigNatModule_setCoeff(n, i, v) {\r\n    n.digits[i] = (v | 0);\r\n}\r\n\r\nexport function BigNatModule_pow64(x_mut, n_mut) {\r\n    BigNatModule_pow64:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return fromBits(1, 0, false);\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = op_Multiply(x, x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_pow64;\r\n        }\r\n        else {\r\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_pow32(x_mut, n_mut) {\r\n    BigNatModule_pow32:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return 1;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (x * x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_pow32;\r\n        }\r\n        else {\r\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_hash(n) {\r\n    let res = 0;\r\n    for (let i = 0; i <= (n.bound - 1); i++) {\r\n        res = ((n.digits[i] + (res << 3)) | 0);\r\n    }\r\n    return res | 0;\r\n}\r\n\r\nexport function BigNatModule_maxInt(a, b) {\r\n    if (a < b) {\r\n        return b | 0;\r\n    }\r\n    else {\r\n        return a | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_minInt(a, b) {\r\n    if (a < b) {\r\n        return a | 0;\r\n    }\r\n    else {\r\n        return b | 0;\r\n    }\r\n}\r\n\r\nexport const BigNatModule_baseBits = 24;\r\n\r\nexport const BigNatModule_baseN = 16777216;\r\n\r\nexport const BigNatModule_baseMask = 16777215;\r\n\r\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\r\n\r\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\r\n\r\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\r\n\r\nexport const BigNatModule_baseMask32A = 16777215;\r\n\r\nexport const BigNatModule_baseMask32B = 255;\r\n\r\nexport const BigNatModule_baseShift32B = 24;\r\n\r\nexport const BigNatModule_baseMask64A = 16777215;\r\n\r\nexport const BigNatModule_baseMask64B = 16777215;\r\n\r\nexport const BigNatModule_baseMask64C = 65535;\r\n\r\nexport const BigNatModule_baseShift64B = 24;\r\n\r\nexport const BigNatModule_baseShift64C = 48;\r\n\r\nexport function BigNatModule_divbase(x) {\r\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\r\n}\r\n\r\nexport function BigNatModule_modbase(x) {\r\n    return x & BigNatModule_baseMask;\r\n}\r\n\r\nexport function BigNatModule_createN(b) {\r\n    return new BigNat(b, new Int32Array(b));\r\n}\r\n\r\nexport function BigNatModule_copyN(x) {\r\n    return new BigNat(x.bound, copy(x.digits));\r\n}\r\n\r\nexport function BigNatModule_normN(n) {\r\n    const findLeastBound = (na_mut, i_mut) => {\r\n        findLeastBound:\r\n        while (true) {\r\n            const na = na_mut, i = i_mut;\r\n            if ((i === -1) ? true : (na[i] !== 0)) {\r\n                return (i + 1) | 0;\r\n            }\r\n            else {\r\n                na_mut = na;\r\n                i_mut = (i - 1);\r\n                continue findLeastBound;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\r\n    n.bound = (bound | 0);\r\n    return n;\r\n}\r\n\r\nexport const BigNatModule_boundInt = 2;\r\n\r\nexport const BigNatModule_boundInt64 = 3;\r\n\r\nexport const BigNatModule_boundBase = 1;\r\n\r\nexport function BigNatModule_embed(x) {\r\n    const x_1 = ((x < 0) ? 0 : x) | 0;\r\n    if (x_1 < BigNatModule_baseN) {\r\n        const r = BigNatModule_createN(1);\r\n        r.digits[0] = (x_1 | 0);\r\n        return BigNatModule_normN(r);\r\n    }\r\n    else {\r\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\r\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\r\n            r_1.digits[i] = (((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN) | 0);\r\n        }\r\n        return BigNatModule_normN(r_1);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_embed64(x) {\r\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\r\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\r\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\r\n        r.digits[i] = ((~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64)))) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_eval32(n) {\r\n    if (n.bound === 1) {\r\n        return n.digits[0] | 0;\r\n    }\r\n    else {\r\n        let acc = 0;\r\n        for (let i = n.bound - 1; i >= 0; i--) {\r\n            acc = ((n.digits[i] + (BigNatModule_baseN * acc)) | 0);\r\n        }\r\n        return acc | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_eval64(n) {\r\n    if (n.bound === 1) {\r\n        return fromInteger(n.digits[0], false, 2);\r\n    }\r\n    else {\r\n        let acc = fromBits(0, 0, false);\r\n        for (let i = n.bound - 1; i >= 0; i--) {\r\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\r\n        }\r\n        return acc;\r\n    }\r\n}\r\n\r\nexport const BigNatModule_one = BigNatModule_embed(1);\r\n\r\nexport const BigNatModule_zero = BigNatModule_embed(0);\r\n\r\nexport function BigNatModule_restrictTo(d, n) {\r\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\r\n}\r\n\r\nexport function BigNatModule_shiftUp(d, n) {\r\n    const m = BigNatModule_createN(n.bound + d);\r\n    for (let i = 0; i <= (n.bound - 1); i++) {\r\n        m.digits[i + d] = (n.digits[i] | 0);\r\n    }\r\n    return m;\r\n}\r\n\r\nexport function BigNatModule_shiftDown(d, n) {\r\n    if ((n.bound - d) <= 0) {\r\n        return BigNatModule_zero;\r\n    }\r\n    else {\r\n        const m = BigNatModule_createN(n.bound - d);\r\n        for (let i = 0; i <= (m.bound - 1); i++) {\r\n            m.digits[i] = (n.digits[i + d] | 0);\r\n        }\r\n        return m;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_degree(n) {\r\n    return n.bound - 1;\r\n}\r\n\r\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\r\n    let z, i_1, z_1, i_2;\r\n    BigNatModule_addP:\r\n    while (true) {\r\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\r\n        if (i < n) {\r\n            const x = ((((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0))) + ((z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0)))) + c) | 0;\r\n            r.digits[i] = (BigNatModule_modbase(x) | 0);\r\n            i_mut = (i + 1);\r\n            n_mut = n;\r\n            c_mut = BigNatModule_divbase(x);\r\n            p_mut = p;\r\n            q_mut = q;\r\n            r_mut = r;\r\n            continue BigNatModule_addP;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_add(p, q) {\r\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    BigNatModule_addP(0, rbound, 0, p, q, r);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\r\n    let z, i_1, z_1, i_2;\r\n    BigNatModule_subP:\r\n    while (true) {\r\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\r\n        if (i < n) {\r\n            const x = ((((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0))) - ((z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0)))) + c) | 0;\r\n            if (x > 0) {\r\n                r.digits[i] = (BigNatModule_modbase(x) | 0);\r\n                i_mut = (i + 1);\r\n                n_mut = n;\r\n                c_mut = BigNatModule_divbase(x);\r\n                p_mut = p;\r\n                q_mut = q;\r\n                r_mut = r;\r\n                continue BigNatModule_subP;\r\n            }\r\n            else {\r\n                const x_1 = (x + BigNatModule_baseN) | 0;\r\n                r.digits[i] = (BigNatModule_modbase(x_1) | 0);\r\n                i_mut = (i + 1);\r\n                n_mut = n;\r\n                c_mut = (BigNatModule_divbase(x_1) - 1);\r\n                p_mut = p;\r\n                q_mut = q;\r\n                r_mut = r;\r\n                continue BigNatModule_subP;\r\n            }\r\n        }\r\n        else {\r\n            return c !== 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_sub(p, q) {\r\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\r\n        return BigNatModule_embed(0);\r\n    }\r\n    else {\r\n        return BigNatModule_normN(r);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_isZero(p) {\r\n    return p.bound === 0;\r\n}\r\n\r\nexport function BigNatModule_IsZero(p) {\r\n    return BigNatModule_isZero(p);\r\n}\r\n\r\nexport function BigNatModule_isOne(p) {\r\n    if (p.bound === 1) {\r\n        return p.digits[0] === 1;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_equal(p, q) {\r\n    if (p.bound === q.bound) {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return true;\r\n                }\r\n                else if (pa[i] === qa[i]) {\r\n                    pa_mut = pa;\r\n                    qa_mut = qa;\r\n                    i_mut = (i - 1);\r\n                    continue check;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, p.bound - 1);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\r\n    if ((p.bound + pn) < (q.bound + qn)) {\r\n        return -1;\r\n    }\r\n    else if ((p.bound + pn) > (q.bound + pn)) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\r\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\r\n                    if (pai === qai) {\r\n                        pa_mut = pa;\r\n                        qa_mut = qa;\r\n                        i_mut = (i - 1);\r\n                        continue check;\r\n                    }\r\n                    else if (pai < qai) {\r\n                        return -1;\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_compare(p, q) {\r\n    if (p.bound < q.bound) {\r\n        return -1;\r\n    }\r\n    else if (p.bound > q.bound) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return 0;\r\n                }\r\n                else if (pa[i] === qa[i]) {\r\n                    pa_mut = pa;\r\n                    qa_mut = qa;\r\n                    i_mut = (i - 1);\r\n                    continue check;\r\n                }\r\n                else if (pa[i] < qa[i]) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, p.bound - 1) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_lt(p, q) {\r\n    return BigNatModule_compare(p, q) === -1;\r\n}\r\n\r\nexport function BigNatModule_gt(p, q) {\r\n    return BigNatModule_compare(p, q) === 1;\r\n}\r\n\r\nexport function BigNatModule_lte(p, q) {\r\n    return BigNatModule_compare(p, q) !== 1;\r\n}\r\n\r\nexport function BigNatModule_gte(p, q) {\r\n    return BigNatModule_compare(p, q) !== -1;\r\n}\r\n\r\nexport function BigNatModule_min(a, b) {\r\n    if (BigNatModule_lt(a, b)) {\r\n        return a;\r\n    }\r\n    else {\r\n        return b;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_max(a, b) {\r\n    if (BigNatModule_lt(a, b)) {\r\n        return b;\r\n    }\r\n    else {\r\n        return a;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\r\n    BigNatModule_contributeArr:\r\n    while (true) {\r\n        const a = a_mut, i = i_mut, c = c_mut;\r\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\r\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\r\n        const x_3 = (~(~toInt(op_BitwiseAnd(x, BigNatModule_baseMaski64)))) | 0;\r\n        a[i] = (x_3 | 0);\r\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\r\n            a_mut = a;\r\n            i_mut = (i + 1);\r\n            c_mut = c_1;\r\n            continue BigNatModule_contributeArr;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_scale(k, p) {\r\n    const r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\r\n    const k_1 = fromInteger(k, false, 2);\r\n    for (let i = 0; i <= (p.bound - 1); i++) {\r\n        BigNatModule_contributeArr(r.digits, i, op_Multiply(k_1, fromInteger(p.digits[i], false, 2)));\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\r\n    const r = BigNatModule_createN(2);\r\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\r\n    BigNatModule_setCoeff(r, 0, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\r\n    BigNatModule_mulSchoolBookCarry:\r\n    while (true) {\r\n        const r = r_mut, c = c_mut, k = k_mut;\r\n        if (compare(c, fromBits(0, 0, false)) > 0) {\r\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\r\n            BigNatModule_setCoeff(r, k, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n            r_mut = r;\r\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\r\n            k_mut = (k + 1);\r\n            continue BigNatModule_mulSchoolBookCarry;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\r\n    const bp = BigNatModule_bound(p) | 0;\r\n    const r = BigNatModule_createN(bp + 1);\r\n    const q_1 = fromInteger(q, false, 2);\r\n    let c = fromBits(0, 0, false);\r\n    for (let i = 0; i <= (bp - 1); i++) {\r\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\r\n        BigNatModule_setCoeff(r, i, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n        c = op_Division(rak, BigNatModule_baseNi64);\r\n    }\r\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\r\n    const r = BigNatModule_createN(p.bound + q.bound);\r\n    const ra = r.digits;\r\n    for (let i = 0; i <= (p.bound - 1); i++) {\r\n        const pai = fromInteger(p.digits[i], false, 2);\r\n        let c = fromBits(0, 0, false);\r\n        let k = i;\r\n        for (let j = 0; j <= (q.bound - 1); j++) {\r\n            const qaj = fromInteger(q.digits[j], false, 2);\r\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\r\n            ra[k] = ((~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64)))) | 0);\r\n            c = op_Division(rak, BigNatModule_baseNi64);\r\n            k = ((k + 1) | 0);\r\n        }\r\n        BigNatModule_mulSchoolBookCarry(r, c, k);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBook(p, q) {\r\n    const pSmall = BigNatModule_bound(p) === 1;\r\n    const qSmall = BigNatModule_bound(q) === 1;\r\n    if (pSmall ? qSmall : false) {\r\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\r\n    }\r\n    else if (pSmall) {\r\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\r\n    }\r\n    else if (qSmall) {\r\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\r\n    }\r\n    else {\r\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\r\n    }\r\n}\r\n\r\nexport class BigNatModule_encoding extends Record {\r\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\r\n        super();\r\n        this.bigL = (bigL | 0);\r\n        this.twoToBigL = (twoToBigL | 0);\r\n        this.k = (k | 0);\r\n        this.bigK = (bigK | 0);\r\n        this.bigN = (bigN | 0);\r\n        this.split = (split | 0);\r\n        this.splits = splits;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_encoding$reflection() {\r\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\r\n}\r\n\r\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\r\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\r\n}\r\n\r\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\r\n\r\nexport function BigNatModule_calculateTableTow(bigL) {\r\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\r\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\r\n    return [bigL, k, bigK, op_Multiply(bigK, fromInteger(bigL, false, 2))];\r\n}\r\n\r\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\r\n    const selectFrom = (i_mut) => {\r\n        selectFrom:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (((i + 1) < BigNatModule_table.length) ? (bitsRes < BigNatModule_table[i + 1].bigN) : false) {\r\n                i_mut = (i + 1);\r\n                continue selectFrom;\r\n            }\r\n            else {\r\n                return BigNatModule_table[i];\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (bitsRes >= BigNatModule_table[0].bigN) {\r\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\r\n    }\r\n    else {\r\n        return selectFrom(0);\r\n    }\r\n}\r\n\r\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\r\n\r\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\r\n\r\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\r\n\r\nexport function BigNatModule_wordBits(word) {\r\n    const hi = (k_mut) => {\r\n        hi:\r\n        while (true) {\r\n            const k = k_mut;\r\n            if (k === 0) {\r\n                return 0;\r\n            }\r\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\r\n                return k | 0;\r\n            }\r\n            else {\r\n                k_mut = (k - 1);\r\n                continue hi;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return hi(BigNatModule_baseBits) | 0;\r\n}\r\n\r\nexport function BigNatModule_bits(u) {\r\n    if (u.bound === 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_extractBits(n, enc, bi) {\r\n    let z, i, z_1, i_1, z_2, i_2;\r\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\r\n    const bjw = (~(~(((bi + enc.bigL) - 1) / BigNatModule_baseBits))) | 0;\r\n    if (biw !== bjw) {\r\n        const xbit = (bi % BigNatModule_baseBits) | 0;\r\n        return (((((z = n, (i = (biw | 0), (i < z.bound) ? z.digits[i] : 0))) >> xbit) | (((z_1 = n, (i_1 = (bjw | 0), (i_1 < z_1.bound) ? z_1.digits[i_1] : 0))) << (BigNatModule_baseBits - xbit))) & BigNatModule_bitmask[enc.bigL]) | 0;\r\n    }\r\n    else {\r\n        return ((((z_2 = n, (i_2 = (biw | 0), (i_2 < z_2.bound) ? z_2.digits[i_2] : 0))) >> (bi % BigNatModule_baseBits)) & BigNatModule_bitmask[enc.bigL]) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_encodePoly(enc, n) {\r\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\r\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\r\n    const encoder = (i_mut, bi_mut) => {\r\n        encoder:\r\n        while (true) {\r\n            const i = i_mut, bi = bi_mut;\r\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\r\n            }\r\n            else {\r\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\r\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\r\n                i_mut = (i + 1);\r\n                bi_mut = (bi + enc.bigL);\r\n                continue encoder;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    encoder(0, 0);\r\n    return poly;\r\n}\r\n\r\nexport function BigNatModule_decodeResultBits(enc, poly) {\r\n    let n = 0;\r\n    for (let i = 0; i <= (poly.length - 1); i++) {\r\n        if (poly[i] !== BigNatModule_FFT_mzero) {\r\n            n = (i | 0);\r\n        }\r\n    }\r\n    return (((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) + 1) | 0;\r\n}\r\n\r\nexport function BigNatModule_decodePoly(enc, poly) {\r\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    const evaluate = (i_mut, j_mut, d_mut) => {\r\n        evaluate:\r\n        while (true) {\r\n            const i = i_mut, j = j_mut, d = d_mut;\r\n            if (i === enc.bigK) {\r\n            }\r\n            else {\r\n                if (j >= rbound) {\r\n                }\r\n                else {\r\n                    BigNatModule_contributeArr(r.digits, j, op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\r\n                }\r\n                const d_1 = (d + enc.bigL) | 0;\r\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\r\n                i_mut = (i + 1);\r\n                j_mut = patternInput[0];\r\n                d_mut = patternInput[1];\r\n                continue evaluate;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    evaluate(0, 0, 0);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_quickMulUsingFft(u, v) {\r\n    const enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\r\n    return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\r\n}\r\n\r\nexport const BigNatModule_minDigitsKaratsuba = 16;\r\n\r\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\r\n    const bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\r\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\r\n        const k = (~(~(bmax / 2))) | 0;\r\n        const a0 = BigNatModule_restrictTo(k, p);\r\n        const a1 = BigNatModule_shiftDown(k, p);\r\n        const b0 = BigNatModule_restrictTo(k, q);\r\n        const b1 = BigNatModule_shiftDown(k, q);\r\n        const q0 = mul(a0, b0);\r\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\r\n        const q2 = mul(a1, b1);\r\n        return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\r\n    }\r\n    else {\r\n        return BigNatModule_mulSchoolBook(p, q);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_mulKaratsuba(x, y) {\r\n    return BigNatModule_recMulKaratsuba((x_1, y_1) => BigNatModule_mulKaratsuba(x_1, y_1), x, y);\r\n}\r\n\r\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\r\n\r\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\r\n\r\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\r\n\r\nexport function BigNatModule_mul(p, q) {\r\n    return BigNatModule_mulSchoolBook(p, q);\r\n}\r\n\r\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\r\n    const patternInput = [x.digits, BigNatModule_degree(x)];\r\n    const x_1 = patternInput[0];\r\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\r\n    const ad = patternInput_1[1] | 0;\r\n    const a_1 = patternInput_1[0];\r\n    const f_1 = fromInteger(f, false, 2);\r\n    let j = 0;\r\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\r\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\r\n        if (j > patternInput[1]) {\r\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\r\n        }\r\n        let zLo = ~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)));\r\n        let zHi = op_Division(z, BigNatModule_baseNi64);\r\n        if (zLo <= x_1[j + n]) {\r\n            x_1[j + n] = ((x_1[j + n] - zLo) | 0);\r\n        }\r\n        else {\r\n            x_1[j + n] = ((x_1[j + n] + (BigNatModule_baseN - zLo)) | 0);\r\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\r\n        }\r\n        if (j < ad) {\r\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\r\n        }\r\n        else {\r\n            z = zHi;\r\n        }\r\n        j = ((j + 1) | 0);\r\n    }\r\n    void BigNatModule_normN(x);\r\n}\r\n\r\nexport function BigNatModule_scaleSub(x, f, a, n) {\r\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\r\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\r\n    return BigNatModule_normN(freshx);\r\n}\r\n\r\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\r\n    const patternInput = [x.digits, BigNatModule_degree(x)];\r\n    const x_1 = patternInput[0];\r\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\r\n    const ad = patternInput_1[1] | 0;\r\n    const a_1 = patternInput_1[0];\r\n    const f_1 = fromInteger(f, false, 2);\r\n    let j = 0;\r\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\r\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\r\n        if (j > patternInput[1]) {\r\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\r\n        }\r\n        let zLo = ~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)));\r\n        let zHi = op_Division(z, BigNatModule_baseNi64);\r\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\r\n            x_1[j + n] = ((x_1[j + n] + zLo) | 0);\r\n        }\r\n        else {\r\n            x_1[j + n] = ((zLo - (BigNatModule_baseN - x_1[j + n])) | 0);\r\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\r\n        }\r\n        if (j < ad) {\r\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\r\n        }\r\n        else {\r\n            z = zHi;\r\n        }\r\n        j = ((j + 1) | 0);\r\n    }\r\n    void BigNatModule_normN(x);\r\n}\r\n\r\nexport function BigNatModule_scaleAdd(x, f, a, n) {\r\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\r\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\r\n    return BigNatModule_normN(freshx);\r\n}\r\n\r\nexport function BigNatModule_removeFactor(x, a, n) {\r\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\r\n    const degx = patternInput[1] | 0;\r\n    const dega = patternInput[0] | 0;\r\n    if (degx < (dega + n)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        const patternInput_1 = [a.digits, x.digits];\r\n        const xa = patternInput_1[1];\r\n        const aa = patternInput_1[0];\r\n        const f = ((dega === 0) ? ((degx === n) ? (~(~(xa[n] / aa[0]))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2)))))) : ((degx === (dega + n)) ? (~(~(xa[degx] / (aa[dega] + 1)))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)))))))) | 0;\r\n        if (f === 0) {\r\n            if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n        else {\r\n            return f | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_divmod(b, a) {\r\n    if (BigNatModule_isZero(a)) {\r\n        throw (new Error());\r\n    }\r\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\r\n        return [BigNatModule_zero, b];\r\n    }\r\n    else {\r\n        const x = BigNatModule_copyN(b);\r\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\r\n        let p = BigNatModule_degree(b);\r\n        const m = BigNatModule_degree(a) | 0;\r\n        let n = p - m;\r\n        const Invariant = (tupledArg) => {\r\n        };\r\n        let finished = false;\r\n        while (!finished) {\r\n            Invariant([d, x, n, p]);\r\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\r\n            if (f > 0) {\r\n                BigNatModule_scaleSubInPlace(x, f, a, n);\r\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\r\n                Invariant([d, x, n, p]);\r\n            }\r\n            else {\r\n                finished = ((f === 0) ? (n === 0) : false);\r\n                if (!finished) {\r\n                    if (p === (m + n)) {\r\n                        Invariant([d, x, n - 1, p]);\r\n                        n = ((n - 1) | 0);\r\n                    }\r\n                    else {\r\n                        Invariant([d, x, n - 1, p - 1]);\r\n                        n = ((n - 1) | 0);\r\n                        p = ((p - 1) | 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\r\n    }\r\n}\r\n\r\nexport function BigNatModule_div(b, a) {\r\n    return BigNatModule_divmod(b, a)[0];\r\n}\r\n\r\nexport function BigNatModule_rem(b, a) {\r\n    return BigNatModule_divmod(b, a)[1];\r\n}\r\n\r\nexport function BigNatModule_bitAnd(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (r.bound - 1); i++) {\r\n        r.digits[i] = ((a.digits[i] & b.digits[i]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_bitOr(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (a.bound - 1); i++) {\r\n        r.digits[i] = ((r.digits[i] | a.digits[i]) | 0);\r\n    }\r\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\r\n        r.digits[i_1] = ((r.digits[i_1] | b.digits[i_1]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_bitXor(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (a.bound - 1); i++) {\r\n        r.digits[i] = ((r.digits[i] ^ a.digits[i]) | 0);\r\n    }\r\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\r\n        r.digits[i_1] = ((r.digits[i_1] ^ b.digits[i_1]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_hcf(a, b) {\r\n    const hcfloop = (a_1_mut, b_1_mut) => {\r\n        hcfloop:\r\n        while (true) {\r\n            const a_1 = a_1_mut, b_1 = b_1_mut;\r\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\r\n                return b_1;\r\n            }\r\n            else {\r\n                a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\r\n                b_1_mut = a_1;\r\n                continue hcfloop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (BigNatModule_lt(a, b)) {\r\n        return hcfloop(a, b);\r\n    }\r\n    else {\r\n        return hcfloop(b, a);\r\n    }\r\n}\r\n\r\nexport const BigNatModule_two = BigNatModule_embed(2);\r\n\r\nexport function BigNatModule_powi(x, n) {\r\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\r\n        power:\r\n        while (true) {\r\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\r\n            if (n_1 === 0) {\r\n                return acc;\r\n            }\r\n            else if ((n_1 % 2) === 0) {\r\n                acc_mut = acc;\r\n                x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                n_1_mut = (~(~(n_1 / 2)));\r\n                continue power;\r\n            }\r\n            else {\r\n                acc_mut = BigNatModule_mul(x_1, acc);\r\n                x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                n_1_mut = (~(~(n_1 / 2)));\r\n                continue power;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return power(BigNatModule_one, x, n);\r\n}\r\n\r\nexport function BigNatModule_pow(x, n) {\r\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\r\n        power:\r\n        while (true) {\r\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\r\n            if (BigNatModule_isZero(n_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\r\n                const ndiv2 = patternInput[0];\r\n                if (BigNatModule_isZero(patternInput[1])) {\r\n                    acc_mut = acc;\r\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                    n_1_mut = ndiv2;\r\n                    continue power;\r\n                }\r\n                else {\r\n                    acc_mut = BigNatModule_mul(x_1, acc);\r\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                    n_1_mut = ndiv2;\r\n                    continue power;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return power(BigNatModule_one, x, n);\r\n}\r\n\r\nexport function BigNatModule_toFloat(n) {\r\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\r\n        evalFloat:\r\n        while (true) {\r\n            const acc = acc_mut, k = k_mut, i = i_mut;\r\n            if (i === n.bound) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = (acc + (k * n.digits[i]));\r\n                k_mut = (k * BigNatModule_baseN);\r\n                i_mut = (i + 1);\r\n                continue evalFloat;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return evalFloat(0, 1, 0);\r\n}\r\n\r\nexport function BigNatModule_ofInt32(n) {\r\n    return BigNatModule_embed(n);\r\n}\r\n\r\nexport function BigNatModule_ofInt64(n) {\r\n    return BigNatModule_embed64(n);\r\n}\r\n\r\nexport function BigNatModule_toUInt32(n) {\r\n    const matchValue = n.bound | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return 0;\r\n        }\r\n        case 1: {\r\n            const value = n.digits[0] | 0;\r\n            return value >>> 0;\r\n        }\r\n        case 2: {\r\n            const patternInput = [n.digits[0], n.digits[1]];\r\n            const xB = patternInput[1] | 0;\r\n            if (xB > BigNatModule_baseMask32B) {\r\n                throw (new Error());\r\n            }\r\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\r\n        }\r\n        default: {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_toUInt64(n) {\r\n    const matchValue = n.bound | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return fromBits(0, 0, true);\r\n        }\r\n        case 1: {\r\n            return fromInteger(n.digits[0], true, 2);\r\n        }\r\n        case 2: {\r\n            const patternInput = [n.digits[0], n.digits[1]];\r\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\r\n        }\r\n        case 3: {\r\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\r\n            const xC = patternInput_1[2] | 0;\r\n            if (xC > BigNatModule_baseMask64C) {\r\n                throw (new Error());\r\n            }\r\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\r\n        }\r\n        default: {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_toString(n) {\r\n    const degn = BigNatModule_degree(n) | 0;\r\n    const route = (prior_mut, k_mut, ten2k_mut) => {\r\n        route:\r\n        while (true) {\r\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\r\n            if (BigNatModule_degree(ten2k) > degn) {\r\n                return cons([k, ten2k], prior);\r\n            }\r\n            else {\r\n                prior_mut = cons([k, ten2k], prior);\r\n                k_mut = (k + 1);\r\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\r\n                continue route;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const collect = (isLeading_mut, digits_mut, n_1_mut, _arg1_mut) => {\r\n        collect:\r\n        while (true) {\r\n            const isLeading = isLeading_mut, digits = digits_mut, n_1 = n_1_mut, _arg1 = _arg1_mut;\r\n            if (!isEmpty(_arg1)) {\r\n                const prior_1 = tail(_arg1);\r\n                const patternInput = BigNatModule_divmod(n_1, head(_arg1)[1]);\r\n                const nL = patternInput[1];\r\n                const nH = patternInput[0];\r\n                if (isLeading ? BigNatModule_isZero(nH) : false) {\r\n                    isLeading_mut = isLeading;\r\n                    digits_mut = digits;\r\n                    n_1_mut = nL;\r\n                    _arg1_mut = prior_1;\r\n                    continue collect;\r\n                }\r\n                else {\r\n                    isLeading_mut = isLeading;\r\n                    digits_mut = collect(false, digits, nL, prior_1);\r\n                    n_1_mut = nH;\r\n                    _arg1_mut = prior_1;\r\n                    continue collect;\r\n                }\r\n            }\r\n            else {\r\n                const n_2 = BigNatModule_eval32(n_1) | 0;\r\n                if (isLeading ? (n_2 === 0) : false) {\r\n                    return digits;\r\n                }\r\n                else {\r\n                    return cons(int32ToString(n_2), digits);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const digits_4 = collect(true, empty(), n, route(empty(), 0, BigNatModule_embed(10)));\r\n    if (isEmpty(digits_4)) {\r\n        return \"0\";\r\n    }\r\n    else {\r\n        return join(\"\", toArray(digits_4));\r\n    }\r\n}\r\n\r\nexport function BigNatModule_ofString(str) {\r\n    const len = str.length | 0;\r\n    if (isNullOrEmpty(str)) {\r\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\r\n    }\r\n    const ten = BigNatModule_embed(10);\r\n    const build = (acc_mut, i_mut) => {\r\n        build:\r\n        while (true) {\r\n            const acc = acc_mut, i = i_mut;\r\n            if (i === len) {\r\n                return acc;\r\n            }\r\n            else {\r\n                const d = (str[i].charCodeAt(0) - \"0\".charCodeAt(0)) | 0;\r\n                if ((0 <= d) ? (d <= 9) : false) {\r\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\r\n                    i_mut = (i + 1);\r\n                    continue build;\r\n                }\r\n                else {\r\n                    throw (new Error());\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return build(BigNatModule_embed(0), 0);\r\n}\r\n\r\nexport function BigNatModule_isSmall(n) {\r\n    return n.bound <= 1;\r\n}\r\n\r\nexport function BigNatModule_getSmall(n) {\r\n    const z = n;\r\n    const i = 0;\r\n    if (i < z.bound) {\r\n        return z.digits[i] | 0;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_factorial(n) {\r\n    const productR = (a, b) => {\r\n        if (BigNatModule_equal(a, b)) {\r\n            return a;\r\n        }\r\n        else {\r\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\r\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\r\n        }\r\n    };\r\n    return productR(BigNatModule_one, n);\r\n}\r\n\r\n","// Adapted from https://github.com/MikeMcl/big.js/blob/0f94dc9110d55c4f324a47ba6a2e832ce23ac589/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v6.0.3\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2020 Michael Mclaughlin\n *  https://github.com/MikeMcl/big.js/LICENCE.md\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\n */\nPE = 29, // 0 to 1000000\n/*\n * When true, an error will be thrown if a primitive number is passed to the Big constructor,\n * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\n * primitive number without a loss of precision.\n */\nSTRICT = false, // true or false\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            if (typeof n !== 'string') {\n                if (Big.strict === true) {\n                    throw TypeError(INVALID + 'number');\n                }\n                // Minus zero?\n                n = n === 0 && 1 / n < 0 ? '-0' : String(n);\n            }\n            parse(x, n);\n        }\n        // Retain a reference to this Big constructor.\n        // Shadow Big.prototype.constructor which points to Object.\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.strict = STRICT;\n    return Big;\n}\nfunction normalize(x) {\n    // x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    if (!NUMERIC.test(n)) {\n        throw Error(INVALID + 'number');\n    }\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // original version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP + 1, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\n *\n * x {Big} The Big to round.\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, sd, rm, more) {\n    var xc = x.c;\n    if (rm === UNDEFINED)\n        rm = Big.RM;\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\n        throw Error(INVALID_RM);\n    }\n    if (sd < 1) {\n        more =\n            rm === 3 && (more || !!xc[0]) || sd === 0 && (rm === 1 && xc[0] >= 5 ||\n                rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED)));\n        xc.length = 1;\n        if (more) {\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n            x.e = x.e - sd + 1;\n            xc[0] = 1;\n        }\n        else {\n            // Zero.\n            xc[0] = x.e = 0;\n        }\n    }\n    else if (sd < xc.length) {\n        // xc[sd] is the digit after the digit that may be rounded up.\n        const isZero = xc.findIndex((xci, idx) => idx >= sd && xci > 0) < 0;\n        more =\n            rm === 1 && xc[sd] >= 5 ||\n                rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\n                    (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\n                rm === 3 && (more || !isZero);\n        // Remove any digits after the required precision.\n        xc.length = sd--;\n        // Round up?\n        if (more) {\n            // Rounding up may mean the previous digit has to be rounded up.\n            for (; ++xc[sd] > 9;) {\n                xc[sd] = 0;\n                if (!sd--) {\n                    ++x.e;\n                    xc.unshift(1);\n                }\n            }\n        }\n        // Remove trailing zeros.\n        for (sd = xc.length; !xc[--sd];)\n            xc.pop();\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n */\nfunction stringify(x, doExponential, isNonzero) {\n    var e = x.e, s = x.c.join(''), n = s.length;\n    // Exponential notation?\n    if (doExponential) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n) {\n            for (e -= n; e--;)\n                s += '0';\n        }\n        else if (e < n) {\n            s = s.slice(0, e) + '.' + s.slice(e);\n        }\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && isNonzero ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n */\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // original version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    // Divisor is zero?\n    if (!b[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    // Dividend is 0? Return +-0.\n    if (!a[0]) {\n        y.s = k;\n        y.c = [y.e = 0];\n        return y;\n    }\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, p = dp + (q.e = x.e - y.e) + 1; // precision of the result\n    q.s = k;\n    k = p < 0 ? 0 : p;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n        p--;\n    }\n    // Round?\n    if (qi > p)\n        round(q, p, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return this.cmp(y) === 0;\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (yc[0]) {\n            y.s = -b;\n        }\n        else if (xc[0]) {\n            y = new Big(x);\n        }\n        else {\n            y.s = 1;\n        }\n        return y;\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var e, k, t, Big = this.constructor, x = new Big(this), y = new Big(y);\n    // Signs differ?\n    if (x.s != y.s) {\n        y.s = -y.s;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (!yc[0]) {\n            if (xc[0]) {\n                y = new Big(x);\n            }\n            else {\n                y.s = x.s;\n            }\n        }\n        return y;\n    }\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (e = xe - ye) {\n        if (e > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            e = -e;\n            t = xc;\n        }\n        t.reverse();\n        for (; e--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    e = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (k = 0; e; xc[e] %= 10)\n        k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (k) {\n        xc.unshift(k);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (e = xc.length; xc[--e] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big('1'), one = new Big('1'), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\n        throw Error(INVALID + 'exponent');\n    }\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.prec = function (sd, rm) {\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n        throw Error(INVALID + 'precision');\n    }\n    return round(new this.constructor(this), sd, rm);\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\n * using rounding mode rm, or Big.RM if rm is not specified.\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.round = function (dp, rm) {\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    return round(new this.constructor(this), dp + this.e + 1, rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big('0.5');\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0) {\n        throw Error(NAME + 'No square root');\n    }\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s + '');\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0]) {\n        y.c = [y.e = 0];\n        return y;\n    }\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = b;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toExponential = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), ++dp, rm);\n        for (; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, true, !!n);\n};\n/*\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), dp + x.e + 1, rm);\n        // x.e may have changed if the value is rounded up.\n        for (dp = dp + x.e + 1; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, false, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toJSON = P.toString = function () {\n    var x = this, Big = x.constructor;\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\n};\n/*\n * Return the value of this Big as a primitve number.\n */\nP.toNumber = function () {\n    var n = Number(stringify(this, true, true));\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\n        throw Error(NAME + 'Imprecise conversion');\n    }\n    return n;\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * rounding mode rm, or Big.RM if rm is not specified.\n * Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toPrecision = function (sd, rm) {\n    var x = this, Big = x.constructor, n = x.c[0];\n    if (sd !== UNDEFINED) {\n        if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n            throw Error(INVALID + 'precision');\n        }\n        x = round(new Big(x), sd, rm);\n        for (; x.c.length < sd;)\n            x.c.push(0);\n    }\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = function () {\n    var x = this, Big = x.constructor;\n    if (Big.strict === true) {\n        throw Error(NAME + 'valueOf disallowed');\n    }\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\n};\n// Export\nexport var Big = _Big_();\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n// export function makeRangeStepFunction(step: Decimal, last: Decimal) {\n//   const stepComparedWithZero = step.cmp(get_Zero);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Decimal) => {\n//     const comparedWithLast = x.cmp(last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\r\nimport { Record, toString } from \"../Types.js\";\r\nimport { class_type } from \"../Reflection.js\";\r\nimport { initialize } from \"../Array.js\";\r\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\r\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\r\nimport Decimal from \"../Decimal.js\";\r\n\r\nexport class BigInteger extends Record {\r\n    constructor(signInt, v) {\r\n        super();\r\n        this.signInt = (signInt | 0);\r\n        this.v = v;\r\n    }\r\n    toString() {\r\n        const x = this;\r\n        const matchValue = BigInteger__get_SignInt(x) | 0;\r\n        switch (matchValue) {\r\n            case -1: {\r\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\r\n            }\r\n            case 0: {\r\n                return \"0\";\r\n            }\r\n            case 1: {\r\n                return BigNatModule_toString(BigInteger__get_V(x));\r\n            }\r\n            default: {\r\n                throw (new Error(\"signs should be +/- 1 or 0\"));\r\n            }\r\n        }\r\n    }\r\n    Equals(obj) {\r\n        const this$ = this;\r\n        return (obj instanceof BigInteger) ? BigInteger_op_Equality_56F059C0(this$, obj) : false;\r\n    }\r\n    GetHashCode() {\r\n        const x = this;\r\n        return BigInteger_hash_Z665282C2(x) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return toString(this$);\r\n    }\r\n    CompareTo(obj) {\r\n        const this$ = this;\r\n        if (obj instanceof BigInteger) {\r\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\r\n        }\r\n        else {\r\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger$reflection() {\r\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\r\n}\r\n\r\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\r\n    return new BigInteger(signInt, v);\r\n}\r\n\r\n(() => {\r\n    BigInteger.smallLim = 4096;\r\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, (n) => BigNatModule_ofInt32(n));\r\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\r\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\r\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\r\n})();\r\n\r\nexport function BigInteger_nat_Z67CCE57D(n) {\r\n    if (BigNatModule_isSmall(n) ? (BigNatModule_getSmall(n) < BigInteger.smallLim) : false) {\r\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\r\n    }\r\n    else {\r\n        return n;\r\n    }\r\n}\r\n\r\nexport function BigInteger_create_Z2BE94A1(s, n) {\r\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger_posn_Z67CCE57D(n) {\r\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger_negn_Z67CCE57D(n) {\r\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger__get_Sign(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return x.signInt | 0;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_SignInt(x) {\r\n    return x.signInt;\r\n}\r\n\r\nexport function BigInteger__get_V(x) {\r\n    return x.v;\r\n}\r\n\r\nexport function BigInteger_op_Equality_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 2: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 3: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 6: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 7: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 8: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\r\n    return !BigInteger_op_Equality_56F059C0(x, y);\r\n}\r\n\r\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            return false;\r\n        }\r\n        case 3: {\r\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return true;\r\n            }\r\n            else {\r\n                return !BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n        }\r\n        case 4: {\r\n            return false;\r\n        }\r\n        case 5: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 6: {\r\n            return false;\r\n        }\r\n        case 7: {\r\n            return false;\r\n        }\r\n        case 8: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return true;\r\n            }\r\n            else {\r\n                return !BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n        }\r\n        case 3: {\r\n            return false;\r\n        }\r\n        case 4: {\r\n            return false;\r\n        }\r\n        case 5: {\r\n            return false;\r\n        }\r\n        case 6: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 7: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 8: {\r\n            return false;\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_compare_56F059C0(n, nn) {\r\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\r\n        return -1;\r\n    }\r\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nexport function BigInteger_hash_Z665282C2(z) {\r\n    if (BigInteger__get_SignInt(z) === 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_StructuredDisplayString(x) {\r\n    return toString(x);\r\n}\r\n\r\nexport function BigInteger_$ctor_Z524259A4(n) {\r\n    if (n >= 0) {\r\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\r\n    }\r\n    else if (n === -2147483648) {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\r\n    }\r\n}\r\n\r\nexport function BigInteger_$ctor_Z524259C1(n) {\r\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\r\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\r\n    }\r\n    else if (equals(n, fromBits(0, 2147483648, false))) {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\r\n    }\r\n}\r\n\r\nexport function BigInteger_get_One() {\r\n    return BigInteger.one;\r\n}\r\n\r\nexport function BigInteger_get_Two() {\r\n    return BigInteger.two;\r\n}\r\n\r\nexport function BigInteger_get_Zero() {\r\n    return BigInteger.zero;\r\n}\r\n\r\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\r\n    const matchValue = BigInteger__get_SignInt(z) | 0;\r\n    if (matchValue === 0) {\r\n        return BigInteger_get_Zero();\r\n    }\r\n    else {\r\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\r\n    }\r\n}\r\n\r\nexport function BigInteger_Scale_Z320F31E(k, z) {\r\n    if (BigInteger__get_SignInt(z) === 0) {\r\n        return BigInteger_get_Zero();\r\n    }\r\n    else if (k < 0) {\r\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\r\n    }\r\n    else {\r\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\r\n    }\r\n}\r\n\r\nexport function BigInteger_subnn_6A57060(nx, ny) {\r\n    if (BigNatModule_gte(nx, ny)) {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\r\n    }\r\n    else {\r\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\r\n    }\r\n}\r\n\r\nexport function BigInteger_addnn_6A57060(nx, ny) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\r\n}\r\n\r\nexport function BigInteger__get_IsZero(x) {\r\n    if (BigInteger__get_SignInt(x) === 0) {\r\n        return true;\r\n    }\r\n    else {\r\n        return BigNatModule_isZero(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsOne(x) {\r\n    if (BigInteger__get_SignInt(x) === 1) {\r\n        return BigNatModule_isOne(BigInteger__get_V(x));\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Addition_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(x)) {\r\n        return y;\r\n    }\r\n    else {\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 1: {\r\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n            }\r\n            case 2: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 3: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(x)) {\r\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\r\n    }\r\n    else {\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 1: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\r\n            }\r\n            case 2: {\r\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 3: {\r\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(y)) {\r\n        return y;\r\n    }\r\n    else if (BigInteger__get_IsOne(x)) {\r\n        return y;\r\n    }\r\n    else if (BigInteger__get_IsOne(y)) {\r\n        return x;\r\n    }\r\n    else {\r\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\r\n    }\r\n}\r\n\r\nexport function BigInteger_DivRem_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        throw (new Error());\r\n    }\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\r\n    }\r\n    else {\r\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        const r = patternInput[1];\r\n        const d = patternInput[0];\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\r\n            }\r\n            case 1: {\r\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\r\n            }\r\n            case 2: {\r\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\r\n            }\r\n            case 3: {\r\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Division_56F059C0(x, y) {\r\n    return BigInteger_DivRem_56F059C0(x, y)[0];\r\n}\r\n\r\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\r\n    return BigInteger_DivRem_56F059C0(x, y)[1];\r\n}\r\n\r\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\r\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\r\n}\r\n\r\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\r\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\r\n}\r\n\r\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    if (matchValue[0] === 0) {\r\n        if (matchValue[1] === 0) {\r\n            return BigInteger_get_Zero();\r\n        }\r\n        else {\r\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\r\n        }\r\n    }\r\n    else if (matchValue[1] === 0) {\r\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\r\n    }\r\n    else {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsNegative(x) {\r\n    if (BigInteger__get_SignInt(x) === -1) {\r\n        return !BigInteger__get_IsZero(x);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsPositive(x) {\r\n    if (BigInteger__get_SignInt(x) === 1) {\r\n        return !BigInteger__get_IsZero(x);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger_Abs_Z665282C2(x) {\r\n    if (BigInteger__get_SignInt(x) === -1) {\r\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\r\n    }\r\n    else {\r\n        return x;\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 3: {\r\n            return true;\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 6: {\r\n            return true;\r\n        }\r\n        case 7: {\r\n            return true;\r\n        }\r\n        case 8: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            return true;\r\n        }\r\n        case 3: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return true;\r\n        }\r\n        case 6: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 7: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 8: {\r\n            return true;\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_Pow_62E082A2(x, y) {\r\n    if (y < 0) {\r\n        throw (new Error(\"y\"));\r\n    }\r\n    const matchValue = [BigInteger__get_IsZero(x), y];\r\n    if (matchValue[0]) {\r\n        if (matchValue[1] === 0) {\r\n            return BigInteger_get_One();\r\n        }\r\n        else {\r\n            return BigInteger_get_Zero();\r\n        }\r\n    }\r\n    else {\r\n        const yval = BigInteger_$ctor_Z524259A4(y);\r\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToInt32(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\r\n        if (u <= (2147483647 >>> 0)) {\r\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\r\n        }\r\n        else if ((BigInteger__get_SignInt(x) === -1) ? (u === ((2147483647 + 1) >>> 0)) : false) {\r\n            return -2147483648;\r\n        }\r\n        else {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToUInt32(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToInt64(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return fromBits(0, 0, false);\r\n    }\r\n    else {\r\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\r\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\r\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\r\n        }\r\n        else if ((BigInteger__get_SignInt(x) === -1) ? equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\r\n            return fromBits(0, 2147483648, false);\r\n        }\r\n        else {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToUInt64(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return fromBits(0, 0, true);\r\n    }\r\n    else {\r\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToDouble(x) {\r\n    const matchValue = BigInteger__get_SignInt(x) | 0;\r\n    switch (matchValue) {\r\n        case -1: {\r\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\r\n        }\r\n        case 0: {\r\n            return 0;\r\n        }\r\n        case 1: {\r\n            return BigNatModule_toFloat(BigInteger__get_V(x));\r\n        }\r\n        default: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToSByte(x) {\r\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\r\n}\r\n\r\nexport function BigInteger__get_ToByte(x) {\r\n    return BigInteger__get_ToUInt32(x) & 0xFF;\r\n}\r\n\r\nexport function BigInteger__get_ToInt16(x) {\r\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\r\n}\r\n\r\nexport function BigInteger__get_ToUInt16(x) {\r\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\r\n}\r\n\r\nexport function BigInteger__get_ToSingle(x) {\r\n    return BigInteger__get_ToDouble(x);\r\n}\r\n\r\nexport function BigInteger__get_ToDecimal(x) {\r\n    return new Decimal(BigInteger__get_ToDouble(x));\r\n}\r\n\r\nexport function BigInteger_Parse_Z721C83C5(text) {\r\n    if (text == null) {\r\n        throw (new Error(\"text\"));\r\n    }\r\n    const text_1 = text.trim();\r\n    const len = text_1.length | 0;\r\n    if (len === 0) {\r\n        throw (new Error());\r\n    }\r\n    const matchValue = [text_1[0], len];\r\n    if (matchValue[0] === \"+\") {\r\n        if (matchValue[1] === 1) {\r\n            throw (new Error());\r\n        }\r\n        else {\r\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\r\n        }\r\n    }\r\n    else if (matchValue[0] === \"-\") {\r\n        if (matchValue[1] === 1) {\r\n            throw (new Error());\r\n        }\r\n        else {\r\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\r\n        }\r\n    }\r\n    else {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsSmall(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return true;\r\n    }\r\n    else {\r\n        return BigNatModule_isSmall(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger_Factorial_Z665282C2(x) {\r\n    if (BigInteger__get_IsNegative(x)) {\r\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\r\n    }\r\n    if (BigInteger__get_IsPositive(x)) {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\r\n    }\r\n    else {\r\n        return BigInteger_get_One();\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\r\n    return n1;\r\n}\r\n\r\nexport function BigInteger_FromInt64_Z524259C1(x) {\r\n    return BigInteger_$ctor_Z524259C1(x);\r\n}\r\n\r\nexport function BigInteger_FromInt32_Z524259A4(x) {\r\n    return BigInteger_$ctor_Z524259A4(x);\r\n}\r\n\r\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\r\nimport { fromInteger } from \"./Long.js\";\r\nimport { comparePrimitives, min, compare as compare_1, equals as equals_1, safeHash } from \"./Util.js\";\r\nimport { toString as toString_1 } from \"./Types.js\";\r\nimport { fold, empty, ofArrayWithTail, cons, toArray, head, skipWhile } from \"./List.js\";\r\nimport { fill, reverse } from \"./Array.js\";\r\n\r\nexport function isBigInt(x) {\r\n    return x instanceof BigInteger;\r\n}\r\n\r\nexport function tryParse(str, res) {\r\n    try {\r\n        res.contents = BigInteger_Parse_Z721C83C5(str);\r\n        return true;\r\n    }\r\n    catch (matchValue) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function divRem(x, y, remainder) {\r\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\r\n    remainder.contents = patternInput[1];\r\n    return patternInput[0];\r\n}\r\n\r\nexport function parse(arg00) {\r\n    return BigInteger_Parse_Z721C83C5(arg00);\r\n}\r\n\r\nexport function greatestCommonDivisor(arg00, arg01) {\r\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function pow(arg00, arg01) {\r\n    return BigInteger_Pow_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function abs(arg00) {\r\n    return BigInteger_Abs_Z665282C2(arg00);\r\n}\r\n\r\nexport const zero = BigInteger_get_Zero();\r\n\r\nexport const one = BigInteger_get_One();\r\n\r\nexport const two = BigInteger_get_Two();\r\n\r\nexport function fromString(s) {\r\n    return BigInteger_Parse_Z721C83C5(s);\r\n}\r\n\r\nexport function fromZero() {\r\n    return BigInteger_get_Zero();\r\n}\r\n\r\nexport function fromOne() {\r\n    return BigInteger_get_One();\r\n}\r\n\r\nexport function fromInt64(i) {\r\n    return BigInteger_$ctor_Z524259C1(i);\r\n}\r\n\r\nexport function fromInt32(i) {\r\n    if (i > 2147483647) {\r\n        return BigInteger_$ctor_Z524259C1(fromInteger(i, false, 6));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z524259A4(i);\r\n    }\r\n}\r\n\r\nexport function toSByte(x) {\r\n    return BigInteger__get_ToSByte(x);\r\n}\r\n\r\nexport function toByte(x) {\r\n    return BigInteger__get_ToByte(x);\r\n}\r\n\r\nexport function toInt16(x) {\r\n    return BigInteger__get_ToInt16(x);\r\n}\r\n\r\nexport function toUInt16(x) {\r\n    return BigInteger__get_ToUInt16(x);\r\n}\r\n\r\nexport function toInt32(x) {\r\n    return BigInteger__get_ToInt32(x);\r\n}\r\n\r\nexport function toUInt32(x) {\r\n    return BigInteger__get_ToUInt32(x);\r\n}\r\n\r\nexport function toInt64(x) {\r\n    return BigInteger__get_ToInt64(x);\r\n}\r\n\r\nexport function toUInt64(x) {\r\n    return BigInteger__get_ToUInt64(x);\r\n}\r\n\r\nexport function toSingle(x) {\r\n    return BigInteger__get_ToSingle(x);\r\n}\r\n\r\nexport function toDouble(x) {\r\n    return BigInteger__get_ToDouble(x);\r\n}\r\n\r\nexport function toDecimal(x) {\r\n    return BigInteger__get_ToDecimal(x);\r\n}\r\n\r\nexport function sign(x) {\r\n    return BigInteger__get_Sign(x);\r\n}\r\n\r\nexport function isZero(x) {\r\n    return BigInteger__get_IsZero(x);\r\n}\r\n\r\nexport function isOne(x) {\r\n    return BigInteger__get_IsOne(x);\r\n}\r\n\r\nexport function hash(x) {\r\n    return safeHash(x);\r\n}\r\n\r\nexport function compare(x, y) {\r\n    return x.CompareTo(y);\r\n}\r\n\r\nexport function equals(x, y) {\r\n    return equals_1(x, y);\r\n}\r\n\r\nexport function toString(x) {\r\n    return toString_1(x);\r\n}\r\n\r\nexport const get_Zero = BigInteger_get_Zero();\r\n\r\nexport const get_One = BigInteger_get_One();\r\n\r\nexport function op_Addition(arg00, arg01) {\r\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Subtraction(arg00, arg01) {\r\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Multiply(arg00, arg01) {\r\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Division(arg00, arg01) {\r\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Modulus(arg00, arg01) {\r\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_UnaryNegation(arg00) {\r\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\r\n}\r\n\r\nexport function op_UnaryPlus(arg00) {\r\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\r\n}\r\n\r\nexport function op_RightShift(arg00, arg01) {\r\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function op_LeftShift(arg00, arg01) {\r\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function op_BitwiseAnd(arg00, arg01) {\r\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_BitwiseOr(arg00, arg01) {\r\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_ExclusiveOr(arg00, arg01) {\r\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_LessThan(arg00, arg01) {\r\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_LessThanOrEqual(arg00, arg01) {\r\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_GreaterThan(arg00, arg01) {\r\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_GreaterThanOrEqual(arg00, arg01) {\r\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Equality(arg00, arg01) {\r\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Inequality(arg00, arg01) {\r\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\r\n}\r\n\r\nfunction flipTwosComplement(currByte, lowBitFound) {\r\n    const matchValue = [currByte, lowBitFound];\r\n    if (matchValue[1]) {\r\n        return [(currByte ^ 255) & 255, true];\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        return [0, false];\r\n    }\r\n    else {\r\n        return [(currByte ^ (254 << (new Int32Array([0, 1, 2, 3, 4, 5, 6, 7])).find((i) => ((currByte & (1 << i)) > 0)))) & 255, true];\r\n    }\r\n}\r\n\r\nexport function toByteArray(value) {\r\n    if (equals_1(value, zero)) {\r\n        return new Uint8Array([0]);\r\n    }\r\n    else {\r\n        const isPositive = compare_1(value, zero) > 0;\r\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\r\n        const mask32 = fromInt64(fromInteger(4294967295, false, 6));\r\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\r\n            let value_6, value_8, value_9, value_10;\r\n            loop:\r\n            while (true) {\r\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\r\n                if (compare_1(consumeValue, zero) <= 0) {\r\n                    const accumBytes_1 = isPositive ? skipWhile((b) => (b === 0), accumBytes) : skipWhile((b_1) => (b_1 === 255), accumBytes);\r\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\r\n                    return reverse(toArray((isPositive ? isHighBitOne : false) ? cons(0, accumBytes_1) : (((!isPositive) ? (!isHighBitOne) : false) ? cons(255, accumBytes_1) : accumBytes_1)));\r\n                }\r\n                else {\r\n                    const currValue = toUInt32(BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32));\r\n                    if (isPositive) {\r\n                        const b0 = currValue & 0xFF;\r\n                        let b1;\r\n                        const value_4 = currValue >>> 8;\r\n                        b1 = (value_4 & 0xFF);\r\n                        let b2;\r\n                        const value_5 = currValue >>> 16;\r\n                        b2 = (value_5 & 0xFF);\r\n                        accumBytes_mut = ofArrayWithTail([(value_6 = (currValue >>> 24), value_6 & 0xFF), b2, b1, b0], accumBytes);\r\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\r\n                        lowBitFound_mut = false;\r\n                        continue loop;\r\n                    }\r\n                    else {\r\n                        const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\r\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), value_8 & 0xFF), patternInput[1]);\r\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), value_9 & 0xFF), patternInput_1[1]);\r\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), value_10 & 0xFF), patternInput_2[1]);\r\n                        accumBytes_mut = ofArrayWithTail([patternInput_3[0], patternInput_2[0], patternInput_1[0], patternInput[0]], accumBytes);\r\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\r\n                        lowBitFound_mut = patternInput_3[1];\r\n                        continue loop;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(empty(), value_1, false);\r\n    }\r\n}\r\n\r\nexport function fromByteArray(bytes) {\r\n    if (bytes == null) {\r\n        throw (new Error(\"bytes\"));\r\n    }\r\n    if (bytes.length === 0) {\r\n        return zero;\r\n    }\r\n    else {\r\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\r\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\r\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\r\n                if (bytesRemaining === 0) {\r\n                    const value_2 = fold((acc, value) => BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), fromInt64(fromInteger(value, false, 6))), zero, accumUInt32);\r\n                    if (isPositive) {\r\n                        return value_2;\r\n                    }\r\n                    else {\r\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\r\n                    }\r\n                }\r\n                else {\r\n                    const bytesToProcess = min((x, y) => comparePrimitives(x, y), bytesRemaining, 4) | 0;\r\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\r\n                        buffer[i_1] = bytes[currIndex + i_1];\r\n                    }\r\n                    if (isPositive) {\r\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\r\n                        accumUInt32_mut = cons((((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0, accumUInt32);\r\n                        currIndex_mut = (currIndex + bytesToProcess);\r\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\r\n                        lowBitFound_mut = false;\r\n                        continue loop;\r\n                    }\r\n                    else {\r\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\r\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\r\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\r\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\r\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\r\n                        accumUInt32_mut = cons((((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0, accumUInt32);\r\n                        currIndex_mut = (currIndex + bytesToProcess);\r\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\r\n                        lowBitFound_mut = patternInput_3[1];\r\n                        continue loop;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(empty(), 0, bytes.length, false);\r\n    }\r\n}\r\n\r\n","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date.js\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, padWithZeros } from \"./Util.js\";\nexport default function DateTimeOffset(value, offset) {\n    checkOffsetInRange(offset);\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nfunction checkOffsetInRange(offset) {\n    if (offset != null && offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes.\");\n        }\n        if (Math.abs(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hours.\");\n        }\n    }\n}\nexport function fromDate(date, offset) {\n    let offset2 = 0;\n    switch (date.kind) {\n        case 1 /* UTC */:\n            if (offset != null && offset !== 0) {\n                throw new Error(\"The UTC Offset for Utc DateTime instances must be 0.\");\n            }\n            offset2 = 0;\n            break;\n        case 2 /* Local */:\n            offset2 = date.getTimezoneOffset() * -60000;\n            if (offset != null && offset !== offset2) {\n                throw new Error(\"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n            }\n            break;\n        case 0 /* Unspecified */:\n        default:\n            if (offset == null) {\n                offset2 = date.getTimezoneOffset() * -60000;\n            }\n            else {\n                offset2 = offset;\n            }\n            break;\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    checkOffsetInRange(offset);\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDate();\n}\nexport function hour(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCHours();\n}\nexport function millisecond(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMilliseconds();\n}\nexport function minute(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMinutes();\n}\nexport function month(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMonth() + 1;\n}\nexport function second(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCSeconds();\n}\nexport function year(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDay();\n}\nexport function dayOfYear(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    var _a;\n    return DateTimeOffset(d.getTime() + ts, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addDays(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 86400000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addHours(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 3600000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMinutes(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 60000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addSeconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 1000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMilliseconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addYears(d, v) {\n    var _a;\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMonths(d, v) {\n    var _a, _b;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), ((_b = d.offset) !== null && _b !== void 0 ? _b : 0));\n}\nexport function subtract(d, that) {\n    var _a;\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0))\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function toOffset(d, offset) {\n    return DateTimeOffset(d.getTime(), offset);\n}\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { singleton, ofArrayWithTail, head, tail, isEmpty as isEmpty_1, FSharpList, fold as fold_1, empty as empty_1, cons } from \"./List.js\";\r\nimport { fill } from \"./Array.js\";\r\nimport { structuralHash, compare, toIterator, equals, getEnumerator, isArrayLike } from \"./Util.js\";\r\nimport { Record } from \"./Types.js\";\r\nimport { tryPick as tryPick_1, pick as pick_1, iterate as iterate_1, compareWith, map as map_1, unfold } from \"./Seq.js\";\r\nimport { format, join } from \"./String.js\";\r\nimport { LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\r\n\r\nexport class MapTreeLeaf$2 {\r\n    constructor(k, v) {\r\n        this.k = k;\r\n        this.v = v;\r\n    }\r\n}\r\n\r\nexport function MapTreeLeaf$2$reflection(gen0, gen1) {\r\n    return class_type(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\r\n}\r\n\r\nexport function MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\r\n    return new MapTreeLeaf$2(k, v);\r\n}\r\n\r\nexport function MapTreeLeaf$2__get_Key(_) {\r\n    return _.k;\r\n}\r\n\r\nexport function MapTreeLeaf$2__get_Value(_) {\r\n    return _.v;\r\n}\r\n\r\nexport class MapTreeNode$2 extends MapTreeLeaf$2 {\r\n    constructor(k, v, left, right, h) {\r\n        super(k, v);\r\n        this.left = left;\r\n        this.right = right;\r\n        this.h = (h | 0);\r\n    }\r\n}\r\n\r\nexport function MapTreeNode$2$reflection(gen0, gen1) {\r\n    return class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\r\n}\r\n\r\nexport function MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\r\n    return new MapTreeNode$2(k, v, left, right, h);\r\n}\r\n\r\nexport function MapTreeNode$2__get_Left(_) {\r\n    return _.left;\r\n}\r\n\r\nexport function MapTreeNode$2__get_Right(_) {\r\n    return _.right;\r\n}\r\n\r\nexport function MapTreeNode$2__get_Height(_) {\r\n    return _.h;\r\n}\r\n\r\nexport function MapTreeModule_empty() {\r\n    return void 0;\r\n}\r\n\r\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\r\n    MapTreeModule_sizeAux:\r\n    while (true) {\r\n        const acc = acc_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                continue MapTreeModule_sizeAux;\r\n            }\r\n            else {\r\n                return (acc + 1) | 0;\r\n            }\r\n        }\r\n        else {\r\n            return acc | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_size(x) {\r\n    return MapTreeModule_sizeAux(0, x);\r\n}\r\n\r\nexport function MapTreeModule_mk(l, k, v, r) {\r\n    let hl;\r\n    const m = l;\r\n    if (m != null) {\r\n        const m2 = m;\r\n        hl = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\r\n    }\r\n    else {\r\n        hl = 0;\r\n    }\r\n    let hr;\r\n    const m_1 = r;\r\n    if (m_1 != null) {\r\n        const m2_1 = m_1;\r\n        hr = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\r\n    }\r\n    else {\r\n        hr = 0;\r\n    }\r\n    const m_2 = ((hl < hr) ? hr : hl) | 0;\r\n    if (m_2 === 0) {\r\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\r\n    }\r\n    else {\r\n        return MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\r\n    let m_2, m2_2, m_3, m2_3;\r\n    let t1h;\r\n    const m = t1;\r\n    if (m != null) {\r\n        const m2 = m;\r\n        t1h = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\r\n    }\r\n    else {\r\n        t1h = 0;\r\n    }\r\n    let t2h;\r\n    const m_1 = t2;\r\n    if (m_1 != null) {\r\n        const m2_1 = m_1;\r\n        t2h = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\r\n    }\r\n    else {\r\n        t2h = 0;\r\n    }\r\n    if (t2h > (t1h + 2)) {\r\n        const matchValue = value_1(t2);\r\n        if (matchValue instanceof MapTreeNode$2) {\r\n            if (((m_2 = MapTreeNode$2__get_Left(matchValue), (m_2 != null) ? ((m2_2 = m_2, (m2_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_2) : 1)) : 0)) > (t1h + 1)) {\r\n                const matchValue_1 = value_1(MapTreeNode$2__get_Left(matchValue));\r\n                if (matchValue_1 instanceof MapTreeNode$2) {\r\n                    return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Map.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Map.rebalance\"));\r\n        }\r\n    }\r\n    else if (t1h > (t2h + 2)) {\r\n        const matchValue_2 = value_1(t1);\r\n        if (matchValue_2 instanceof MapTreeNode$2) {\r\n            if (((m_3 = MapTreeNode$2__get_Right(matchValue_2), (m_3 != null) ? ((m2_3 = m_3, (m2_3 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_3) : 1)) : 0)) > (t2h + 1)) {\r\n                const matchValue_3 = value_1(MapTreeNode$2__get_Right(matchValue_2));\r\n                if (matchValue_3 instanceof MapTreeNode$2) {\r\n                    return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Map.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Map.rebalance\"));\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_mk(t1, k, v, t2);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_add(comparer, k, v, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            if (c < 0) {\r\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\r\n            }\r\n            else if (c === 0) {\r\n                return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\r\n            }\r\n            else {\r\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\r\n            }\r\n        }\r\n        else if (c < 0) {\r\n            return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\r\n        }\r\n        else if (c === 0) {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\r\n        }\r\n        else {\r\n            return MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\r\n    MapTreeModule_tryFind:\r\n    while (true) {\r\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (c === 0) {\r\n                return some(MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n            else if (m2 instanceof MapTreeNode$2) {\r\n                comparer_mut = comparer;\r\n                k_mut = k;\r\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2));\r\n                continue MapTreeModule_tryFind;\r\n            }\r\n            else {\r\n                return void 0;\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_find(comparer, k, m) {\r\n    const matchValue = MapTreeModule_tryFind(comparer, k, m);\r\n    if (matchValue == null) {\r\n        throw (new Error());\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\r\n    if (f(k, v)) {\r\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\r\n    }\r\n    else {\r\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\r\n    MapTreeModule_partitionAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\r\n        const acc = [acc_0, acc_1];\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const acc_2 = MapTreeModule_partitionAux(comparer, f, MapTreeNode$2__get_Right(m2), acc[0], acc[1]);\r\n                const acc_3 = MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_2[0], acc_2[1]);\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Left(m2);\r\n                acc_0_mut = acc_3[0];\r\n                acc_1_mut = acc_3[1];\r\n                continue MapTreeModule_partitionAux;\r\n            }\r\n            else {\r\n                return MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc[0], acc[1]);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_partition(comparer, f, m) {\r\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\r\n}\r\n\r\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\r\n    if (f(k, v)) {\r\n        return MapTreeModule_add(comparer, k, v, acc);\r\n    }\r\n    else {\r\n        return acc;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\r\n    MapTreeModule_filterAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\r\n                const acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                acc_mut = acc_2;\r\n                continue MapTreeModule_filterAux;\r\n            }\r\n            else {\r\n                return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_filter(comparer, f, m) {\r\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\r\n}\r\n\r\nexport function MapTreeModule_spliceOutSuccessor(m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            if (MapTreeNode$2__get_Left(m2) == null) {\r\n                return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\r\n            }\r\n            else {\r\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\r\n                return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\r\n            }\r\n        }\r\n        else {\r\n            return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\r\n        }\r\n    }\r\n    else {\r\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_remove(comparer, k, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            if (c < 0) {\r\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\r\n            }\r\n            else if (c === 0) {\r\n                if (MapTreeNode$2__get_Left(m2) == null) {\r\n                    return MapTreeNode$2__get_Right(m2);\r\n                }\r\n                else if (MapTreeNode$2__get_Right(m2) == null) {\r\n                    return MapTreeNode$2__get_Left(m2);\r\n                }\r\n                else {\r\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\r\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\r\n            }\r\n        }\r\n        else if (c === 0) {\r\n            return MapTreeModule_empty();\r\n        }\r\n        else {\r\n            return m;\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_empty();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_change(comparer, k, u, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (c < 0) {\r\n                return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\r\n            }\r\n            else if (c === 0) {\r\n                const matchValue_1 = u(some(MapTreeLeaf$2__get_Value(m2)));\r\n                if (matchValue_1 != null) {\r\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_1), MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\r\n                }\r\n                else if (MapTreeNode$2__get_Left(m2) == null) {\r\n                    return MapTreeNode$2__get_Right(m2);\r\n                }\r\n                else if (MapTreeNode$2__get_Right(m2) == null) {\r\n                    return MapTreeNode$2__get_Left(m2);\r\n                }\r\n                else {\r\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\r\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\r\n            }\r\n        }\r\n        else {\r\n            const c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (c_1 < 0) {\r\n                const matchValue_2 = u(void 0);\r\n                if (matchValue_2 != null) {\r\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_2), MapTreeModule_empty(), m, 2);\r\n                }\r\n                else {\r\n                    return m;\r\n                }\r\n            }\r\n            else if (c_1 === 0) {\r\n                const matchValue_3 = u(some(MapTreeLeaf$2__get_Value(m2)));\r\n                if (matchValue_3 != null) {\r\n                    return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue_3));\r\n                }\r\n                else {\r\n                    return MapTreeModule_empty();\r\n                }\r\n            }\r\n            else {\r\n                const matchValue_4 = u(void 0);\r\n                if (matchValue_4 != null) {\r\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_4), m, MapTreeModule_empty(), 2);\r\n                }\r\n                else {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const matchValue = u(void 0);\r\n        if (matchValue != null) {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue));\r\n        }\r\n        else {\r\n            return m;\r\n        }\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\r\n    MapTreeModule_mem:\r\n    while (true) {\r\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                if (c < 0) {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    m_mut = MapTreeNode$2__get_Left(m2);\r\n                    continue MapTreeModule_mem;\r\n                }\r\n                else if (c === 0) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    m_mut = MapTreeNode$2__get_Right(m2);\r\n                    continue MapTreeModule_mem;\r\n                }\r\n            }\r\n            else {\r\n                return c === 0;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\r\n    MapTreeModule_iterOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\r\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                continue MapTreeModule_iterOpt;\r\n            }\r\n            else {\r\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_iter(f, m) {\r\n    MapTreeModule_iterOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\r\n    MapTreeModule_tryPickOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\r\n                if (matchValue == null) {\r\n                    const matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n                    if (matchValue_1 == null) {\r\n                        f_mut = f;\r\n                        m_mut = MapTreeNode$2__get_Right(m2);\r\n                        continue MapTreeModule_tryPickOpt;\r\n                    }\r\n                    else {\r\n                        return matchValue_1;\r\n                    }\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_tryPick(f, m) {\r\n    return MapTreeModule_tryPickOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\r\n    MapTreeModule_existsOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    m_mut = MapTreeNode$2__get_Right(m2);\r\n                    continue MapTreeModule_existsOpt;\r\n                }\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_exists(f, m) {\r\n    return MapTreeModule_existsOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\r\n    MapTreeModule_forallOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) ? f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)) : false) {\r\n                    f_mut = f;\r\n                    m_mut = MapTreeNode$2__get_Right(m2);\r\n                    continue MapTreeModule_forallOpt;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_forall(f, m) {\r\n    return MapTreeModule_forallOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_map(f, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\r\n            const v2 = f(MapTreeLeaf$2__get_Value(m2));\r\n            const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\r\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\r\n        }\r\n        else {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_empty();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mapiOpt(f, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\r\n            const v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\r\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\r\n        }\r\n        else {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_empty();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mapi(f, m) {\r\n    return MapTreeModule_mapiOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\r\n    MapTreeModule_foldBackOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut, x = x_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\r\n                const x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Left(m2);\r\n                x_mut = x_2;\r\n                continue MapTreeModule_foldBackOpt;\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_foldBack(f, m, x) {\r\n    return MapTreeModule_foldBackOpt(f, m, x);\r\n}\r\n\r\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\r\n    MapTreeModule_foldOpt:\r\n    while (true) {\r\n        const f = f_mut, x = x_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                f_mut = f;\r\n                x_mut = f(MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                continue MapTreeModule_foldOpt;\r\n            }\r\n            else {\r\n                return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_fold(f, x, m) {\r\n    return MapTreeModule_foldOpt(f, x, m);\r\n}\r\n\r\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\r\n    const foldFromTo = (f_1_mut, m_1_mut, x_1_mut) => {\r\n        foldFromTo:\r\n        while (true) {\r\n            const f_1 = f_1_mut, m_1 = m_1_mut, x_1 = x_1_mut;\r\n            if (m_1 != null) {\r\n                const m2 = m_1;\r\n                if (m2 instanceof MapTreeNode$2) {\r\n                    const cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n                    const cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\r\n                    const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\r\n                    const x_3 = ((cLoKey <= 0) ? (cKeyHi <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\r\n                    if (cKeyHi < 0) {\r\n                        f_1_mut = f_1;\r\n                        m_1_mut = MapTreeNode$2__get_Right(m2);\r\n                        x_1_mut = x_3;\r\n                        continue foldFromTo;\r\n                    }\r\n                    else {\r\n                        return x_3;\r\n                    }\r\n                }\r\n                else if ((comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) <= 0) ? (comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) <= 0) : false) {\r\n                    return f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\r\n                }\r\n                else {\r\n                    return x_1;\r\n                }\r\n            }\r\n            else {\r\n                return x_1;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (comparer.Compare(lo, hi) === 1) {\r\n        return x;\r\n    }\r\n    else {\r\n        return foldFromTo(f, m, x);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\r\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\r\n}\r\n\r\nexport function MapTreeModule_toList(m) {\r\n    const loop = (m_1_mut, acc_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const m_1 = m_1_mut, acc = acc_mut;\r\n            if (m_1 != null) {\r\n                const m2 = m_1;\r\n                if (m2 instanceof MapTreeNode$2) {\r\n                    m_1_mut = MapTreeNode$2__get_Left(m2);\r\n                    acc_mut = cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc));\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(m, empty_1());\r\n}\r\n\r\nexport function MapTreeModule_copyToArray(m, arr, i) {\r\n    let j = i;\r\n    MapTreeModule_iter((x, y) => {\r\n        arr[j] = [x, y];\r\n        j = ((j + 1) | 0);\r\n    }, m);\r\n}\r\n\r\nexport function MapTreeModule_toArray(m) {\r\n    const n = MapTreeModule_size(m) | 0;\r\n    const res = fill(new Array(n), 0, n, [null, null]);\r\n    MapTreeModule_copyToArray(m, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function MapTreeModule_ofList(comparer, l) {\r\n    return fold_1((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\r\n}\r\n\r\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\r\n    MapTreeModule_mkFromEnumerator:\r\n    while (true) {\r\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            comparer_mut = comparer;\r\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\r\n            e_mut = e;\r\n            continue MapTreeModule_mkFromEnumerator;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_ofArray(comparer, arr) {\r\n    let res = MapTreeModule_empty();\r\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\r\n        const forLoopVar = arr[idx];\r\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function MapTreeModule_ofSeq(comparer, c) {\r\n    if (isArrayLike(c)) {\r\n        return MapTreeModule_ofArray(comparer, c);\r\n    }\r\n    else if (c instanceof FSharpList) {\r\n        return MapTreeModule_ofList(comparer, c);\r\n    }\r\n    else {\r\n        const ie = getEnumerator(c);\r\n        try {\r\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\r\n        }\r\n        finally {\r\n            ie.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport class MapTreeModule_MapIterator$2 extends Record {\r\n    constructor(stack, started) {\r\n        super();\r\n        this.stack = stack;\r\n        this.started = started;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\r\n    return record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", list_type(option_type(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", bool_type]]);\r\n}\r\n\r\nexport function MapTreeModule_collapseLHS(stack_mut) {\r\n    MapTreeModule_collapseLHS:\r\n    while (true) {\r\n        const stack = stack_mut;\r\n        if (!isEmpty_1(stack)) {\r\n            const rest = tail(stack);\r\n            const m = head(stack);\r\n            if (m != null) {\r\n                const m2 = m;\r\n                if (m2 instanceof MapTreeNode$2) {\r\n                    stack_mut = ofArrayWithTail([MapTreeNode$2__get_Left(m2), MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), MapTreeNode$2__get_Right(m2)], rest);\r\n                    continue MapTreeModule_collapseLHS;\r\n                }\r\n                else {\r\n                    return stack;\r\n                }\r\n            }\r\n            else {\r\n                stack_mut = rest;\r\n                continue MapTreeModule_collapseLHS;\r\n            }\r\n        }\r\n        else {\r\n            return empty_1();\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mkIterator(m) {\r\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(singleton(m)), false);\r\n}\r\n\r\nexport function MapTreeModule_notStarted() {\r\n    throw (new Error(\"enumeration not started\"));\r\n}\r\n\r\nexport function MapTreeModule_alreadyFinished() {\r\n    throw (new Error(\"enumeration already finished\"));\r\n}\r\n\r\nexport function MapTreeModule_current(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (!isEmpty_1(matchValue)) {\r\n            if (head(matchValue) != null) {\r\n                const m = head(matchValue);\r\n                if (m instanceof MapTreeNode$2) {\r\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\r\n                }\r\n                else {\r\n                    return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\r\n            }\r\n        }\r\n        else {\r\n            return MapTreeModule_alreadyFinished();\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_notStarted();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_moveNext(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (!isEmpty_1(matchValue)) {\r\n            if (head(matchValue) != null) {\r\n                const m = head(matchValue);\r\n                if (m instanceof MapTreeNode$2) {\r\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\r\n                }\r\n                else {\r\n                    i.stack = MapTreeModule_collapseLHS(tail(matchValue));\r\n                    return !isEmpty_1(i.stack);\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        i.started = true;\r\n        return !isEmpty_1(i.stack);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mkIEnumerator(m) {\r\n    let i = MapTreeModule_mkIterator(m);\r\n    return {\r\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n            return MapTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.get_Current\"]() {\r\n            return MapTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n            return MapTreeModule_moveNext(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.Reset\"]() {\r\n            i = MapTreeModule_mkIterator(m);\r\n        },\r\n        Dispose() {\r\n        },\r\n    };\r\n}\r\n\r\nexport function MapTreeModule_toSeq(s) {\r\n    return unfold((en_1) => {\r\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, MapTreeModule_mkIEnumerator(s));\r\n}\r\n\r\nexport class FSharpMap {\r\n    constructor(comparer, tree) {\r\n        this.comparer = comparer;\r\n        this.tree = tree;\r\n    }\r\n    GetHashCode() {\r\n        const this$ = this;\r\n        return FSharpMap__ComputeHashCode(this$) | 0;\r\n    }\r\n    Equals(that) {\r\n        const this$ = this;\r\n        if (that instanceof FSharpMap) {\r\n            const e1 = getEnumerator(this$);\r\n            try {\r\n                const e2 = getEnumerator(that);\r\n                try {\r\n                    const loop = () => {\r\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                        if (m1 === e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            if (!m1) {\r\n                                return true;\r\n                            }\r\n                            else {\r\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                if (equals(e1c[0], e2c[0]) ? equals(e1c[1], e2c[1]) : false) {\r\n                                    return loop();\r\n                                }\r\n                                else {\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    };\r\n                    return loop();\r\n                }\r\n                finally {\r\n                    e2.Dispose();\r\n                }\r\n            }\r\n            finally {\r\n                e1.Dispose();\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    toString() {\r\n        const this$ = this;\r\n        return (\"map [\" + join(\"; \", map_1((kv) => format(\"({0}, {1})\", kv[0], kv[1]), this$))) + \"]\";\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return \"FSharpMap\";\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    GetEnumerator() {\r\n        const __ = this;\r\n        return MapTreeModule_mkIEnumerator(__.tree);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const __ = this;\r\n        return MapTreeModule_mkIEnumerator(__.tree);\r\n    }\r\n    CompareTo(obj) {\r\n        const m = this;\r\n        if (obj instanceof FSharpMap) {\r\n            return compareWith((kvp1, kvp2) => {\r\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\r\n                return ((c !== 0) ? c : compare(kvp1[1], kvp2[1])) | 0;\r\n            }, m, obj) | 0;\r\n        }\r\n        else {\r\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\r\n        }\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\r\n        const m = this;\r\n        return FSharpMap__ContainsKey(m, x[0]) ? equals(FSharpMap__get_Item(m, x[0]), x[1]) : false;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\r\n        const m = this;\r\n        MapTreeModule_copyToArray(m.tree, arr, i);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\r\n        return true;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\r\n        const m = this;\r\n        return FSharpMap__get_Count(m) | 0;\r\n    }\r\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\r\n        const m = this;\r\n        return FSharpMap__get_Count(m) | 0;\r\n    }\r\n    get size() {\r\n        const m = this;\r\n        return FSharpMap__get_Count(m) | 0;\r\n    }\r\n    clear() {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    delete(_arg1) {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n        return false;\r\n    }\r\n    entries() {\r\n        const m = this;\r\n        return map_1((p) => [p[0], p[1]], m);\r\n    }\r\n    get(k) {\r\n        const m = this;\r\n        return FSharpMap__get_Item(m, k);\r\n    }\r\n    has(k) {\r\n        const m = this;\r\n        return FSharpMap__ContainsKey(m, k);\r\n    }\r\n    keys() {\r\n        const m = this;\r\n        return map_1((p) => p[0], m);\r\n    }\r\n    set(k, v) {\r\n        const m = this;\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n        return m;\r\n    }\r\n    values() {\r\n        const m = this;\r\n        return map_1((p) => p[1], m);\r\n    }\r\n    forEach(f, thisArg) {\r\n        const m = this;\r\n        iterate_1((p) => {\r\n            f(p[1], p[0], m);\r\n        }, m);\r\n    }\r\n}\r\n\r\nexport function FSharpMap$reflection(gen0, gen1) {\r\n    return class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\r\n}\r\n\r\nexport function FSharpMap_$ctor(comparer, tree) {\r\n    return new FSharpMap(comparer, tree);\r\n}\r\n\r\n(() => {\r\n    FSharpMap.empty = FSharpMap_$ctor(LanguagePrimitives_FastGenericComparer(), MapTreeModule_empty());\r\n})();\r\n\r\nexport function FSharpMap_get_Empty() {\r\n    return FSharpMap.empty;\r\n}\r\n\r\nexport function FSharpMap_Create(ie) {\r\n    const comparer = LanguagePrimitives_FastGenericComparer();\r\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\r\n}\r\n\r\nexport function FSharpMap__get_Comparer(m) {\r\n    return m.comparer;\r\n}\r\n\r\nexport function FSharpMap__get_Tree(m) {\r\n    return m.tree;\r\n}\r\n\r\nexport function FSharpMap__Add(m, key, value) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\r\n}\r\n\r\nexport function FSharpMap__Change(m, key, f) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\r\n}\r\n\r\nexport function FSharpMap__get_IsEmpty(m) {\r\n    return m.tree == null;\r\n}\r\n\r\nexport function FSharpMap__get_Item(m, key) {\r\n    return MapTreeModule_find(m.comparer, key, m.tree);\r\n}\r\n\r\nexport function FSharpMap__TryPick(m, f) {\r\n    return MapTreeModule_tryPick(f, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Exists(m, predicate) {\r\n    return MapTreeModule_exists(predicate, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Filter(m, predicate) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\r\n}\r\n\r\nexport function FSharpMap__ForAll(m, predicate) {\r\n    return MapTreeModule_forall(predicate, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Fold(m, f, acc) {\r\n    return MapTreeModule_foldBack(f, m.tree, acc);\r\n}\r\n\r\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\r\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\r\n}\r\n\r\nexport function FSharpMap__Iterate(m, f) {\r\n    MapTreeModule_iter(f, m.tree);\r\n}\r\n\r\nexport function FSharpMap__MapRange(m, f) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\r\n}\r\n\r\nexport function FSharpMap__Map(m, f) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\r\n}\r\n\r\nexport function FSharpMap__Partition(m, predicate) {\r\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\r\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\r\n}\r\n\r\nexport function FSharpMap__get_Count(m) {\r\n    return MapTreeModule_size(m.tree);\r\n}\r\n\r\nexport function FSharpMap__ContainsKey(m, key) {\r\n    return MapTreeModule_mem(m.comparer, key, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Remove(m, key) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\r\n}\r\n\r\nexport function FSharpMap__TryGetValue(__, key, value) {\r\n    const matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\r\n    if (matchValue == null) {\r\n        return false;\r\n    }\r\n    else {\r\n        const v = value_1(matchValue);\r\n        value.contents = v;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function FSharpMap__TryFind(m, key) {\r\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\r\n}\r\n\r\nexport function FSharpMap__ToList(m) {\r\n    return MapTreeModule_toList(m.tree);\r\n}\r\n\r\nexport function FSharpMap__ToArray(m) {\r\n    return MapTreeModule_toArray(m.tree);\r\n}\r\n\r\nexport function FSharpMap__ComputeHashCode(this$) {\r\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\r\n    let res = 0;\r\n    const enumerator = getEnumerator(this$);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const activePatternResult5329 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            res = (combineHash(res, structuralHash(activePatternResult5329[0])) | 0);\r\n            res = (combineHash(res, structuralHash(activePatternResult5329[1])) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return res | 0;\r\n}\r\n\r\nexport function isEmpty(table) {\r\n    return FSharpMap__get_IsEmpty(table);\r\n}\r\n\r\nexport function add(key, value, table) {\r\n    return FSharpMap__Add(table, key, value);\r\n}\r\n\r\nexport function change(key, f, table) {\r\n    return FSharpMap__Change(table, key, f);\r\n}\r\n\r\nexport function find(key, table) {\r\n    return FSharpMap__get_Item(table, key);\r\n}\r\n\r\nexport function tryFind(key, table) {\r\n    return FSharpMap__TryFind(table, key);\r\n}\r\n\r\nexport function remove(key, table) {\r\n    return FSharpMap__Remove(table, key);\r\n}\r\n\r\nexport function containsKey(key, table) {\r\n    return FSharpMap__ContainsKey(table, key);\r\n}\r\n\r\nexport function iterate(action, table) {\r\n    FSharpMap__Iterate(table, action);\r\n}\r\n\r\nexport function tryPick(chooser, table) {\r\n    return FSharpMap__TryPick(table, chooser);\r\n}\r\n\r\nexport function pick(chooser, table) {\r\n    const matchValue = tryPick(chooser, table);\r\n    if (matchValue != null) {\r\n        return value_1(matchValue);\r\n    }\r\n    else {\r\n        throw (new Error());\r\n    }\r\n}\r\n\r\nexport function exists(predicate, table) {\r\n    return FSharpMap__Exists(table, predicate);\r\n}\r\n\r\nexport function filter(predicate, table) {\r\n    return FSharpMap__Filter(table, predicate);\r\n}\r\n\r\nexport function partition(predicate, table) {\r\n    return FSharpMap__Partition(table, predicate);\r\n}\r\n\r\nexport function forAll(predicate, table) {\r\n    return FSharpMap__ForAll(table, predicate);\r\n}\r\n\r\nexport function map(mapping, table) {\r\n    return FSharpMap__Map(table, mapping);\r\n}\r\n\r\nexport function fold(folder, state, table) {\r\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\r\n}\r\n\r\nexport function foldBack(folder, table, state) {\r\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\r\n}\r\n\r\nexport function toSeq(table) {\r\n    return map_1((kvp) => [kvp[0], kvp[1]], table);\r\n}\r\n\r\nexport function findKey(predicate, table) {\r\n    return pick_1((kvp) => {\r\n        const k = kvp[0];\r\n        if (predicate(k, kvp[1])) {\r\n            return some(k);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, table);\r\n}\r\n\r\nexport function tryFindKey(predicate, table) {\r\n    return tryPick_1((kvp) => {\r\n        const k = kvp[0];\r\n        if (predicate(k, kvp[1])) {\r\n            return some(k);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, table);\r\n}\r\n\r\nexport function ofList(elements) {\r\n    return FSharpMap_Create(elements);\r\n}\r\n\r\nexport function ofSeq(elements) {\r\n    return FSharpMap_Create(elements);\r\n}\r\n\r\nexport function ofArray(elements) {\r\n    const comparer = LanguagePrimitives_FastGenericComparer();\r\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\r\n}\r\n\r\nexport function toList(table) {\r\n    return FSharpMap__ToList(table);\r\n}\r\n\r\nexport function toArray(table) {\r\n    return FSharpMap__ToArray(table);\r\n}\r\n\r\nexport function empty() {\r\n    return FSharpMap_get_Empty();\r\n}\r\n\r\nexport function count(table) {\r\n    return FSharpMap__get_Count(table);\r\n}\r\n\r\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { toString, Record } from \"./Types.js\";\r\nimport { FSharpList, fold as fold_2, cons, singleton as singleton_1, empty as empty_1, ofArrayWithTail, tail, head, isEmpty as isEmpty_1 } from \"./List.js\";\r\nimport { fold as fold_1, fill } from \"./Array.js\";\r\nimport { structuralHash, toIterator, getEnumerator, isArrayLike } from \"./Util.js\";\r\nimport { join } from \"./String.js\";\r\nimport { fold as fold_3, reduce, iterate as iterate_1, map as map_1 } from \"./Seq.js\";\r\n\r\nexport class SetTreeLeaf$1 {\r\n    constructor(k) {\r\n        this.k = k;\r\n    }\r\n}\r\n\r\nexport function SetTreeLeaf$1$reflection(gen0) {\r\n    return class_type(\"Set.SetTreeLeaf`1\", [gen0], SetTreeLeaf$1);\r\n}\r\n\r\nexport function SetTreeLeaf$1_$ctor_2B595(k) {\r\n    return new SetTreeLeaf$1(k);\r\n}\r\n\r\nexport function SetTreeLeaf$1__get_Key(_) {\r\n    return _.k;\r\n}\r\n\r\nexport class SetTreeNode$1 extends SetTreeLeaf$1 {\r\n    constructor(v, left, right, h) {\r\n        super(v);\r\n        this.left = left;\r\n        this.right = right;\r\n        this.h = (h | 0);\r\n    }\r\n}\r\n\r\nexport function SetTreeNode$1$reflection(gen0) {\r\n    return class_type(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTreeLeaf$1$reflection(gen0));\r\n}\r\n\r\nexport function SetTreeNode$1_$ctor_Z6E7BE5F7(v, left, right, h) {\r\n    return new SetTreeNode$1(v, left, right, h);\r\n}\r\n\r\nexport function SetTreeNode$1__get_Left(_) {\r\n    return _.left;\r\n}\r\n\r\nexport function SetTreeNode$1__get_Right(_) {\r\n    return _.right;\r\n}\r\n\r\nexport function SetTreeNode$1__get_Height(_) {\r\n    return _.h;\r\n}\r\n\r\nexport function SetTreeModule_empty() {\r\n    return void 0;\r\n}\r\n\r\nexport function SetTreeModule_countAux(t_mut, acc_mut) {\r\n    SetTreeModule_countAux:\r\n    while (true) {\r\n        const t = t_mut, acc = acc_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t2), acc + 1);\r\n                continue SetTreeModule_countAux;\r\n            }\r\n            else {\r\n                return (acc + 1) | 0;\r\n            }\r\n        }\r\n        else {\r\n            return acc | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_count(s) {\r\n    return SetTreeModule_countAux(s, 0);\r\n}\r\n\r\nexport function SetTreeModule_mk(l, k, r) {\r\n    let hl;\r\n    const t = l;\r\n    if (t != null) {\r\n        const t2 = t;\r\n        hl = ((t2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2) : 1);\r\n    }\r\n    else {\r\n        hl = 0;\r\n    }\r\n    let hr;\r\n    const t_1 = r;\r\n    if (t_1 != null) {\r\n        const t2_1 = t_1;\r\n        hr = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\r\n    }\r\n    else {\r\n        hr = 0;\r\n    }\r\n    const m = ((hl < hr) ? hr : hl) | 0;\r\n    if (m === 0) {\r\n        return SetTreeLeaf$1_$ctor_2B595(k);\r\n    }\r\n    else {\r\n        return SetTreeNode$1_$ctor_Z6E7BE5F7(k, l, r, m + 1);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_rebalance(t1, v, t2) {\r\n    let t_2, t2_3, t_3, t2_4;\r\n    let t1h;\r\n    const t = t1;\r\n    if (t != null) {\r\n        const t2_1 = t;\r\n        t1h = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\r\n    }\r\n    else {\r\n        t1h = 0;\r\n    }\r\n    let t2h;\r\n    const t_1 = t2;\r\n    if (t_1 != null) {\r\n        const t2_2 = t_1;\r\n        t2h = ((t2_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_2) : 1);\r\n    }\r\n    else {\r\n        t2h = 0;\r\n    }\r\n    if (t2h > (t1h + 2)) {\r\n        const matchValue = value_1(t2);\r\n        if (matchValue instanceof SetTreeNode$1) {\r\n            if (((t_2 = SetTreeNode$1__get_Left(matchValue), (t_2 != null) ? ((t2_3 = t_2, (t2_3 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_3) : 1)) : 0)) > (t1h + 1)) {\r\n                const matchValue_1 = value_1(SetTreeNode$1__get_Left(matchValue));\r\n                if (matchValue_1 instanceof SetTreeNode$1) {\r\n                    return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue_1)), SetTreeLeaf$1__get_Key(matchValue_1), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_1), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue)));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Set.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue)), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Set.rebalance\"));\r\n        }\r\n    }\r\n    else if (t1h > (t2h + 2)) {\r\n        const matchValue_2 = value_1(t1);\r\n        if (matchValue_2 instanceof SetTreeNode$1) {\r\n            if (((t_3 = SetTreeNode$1__get_Right(matchValue_2), (t_3 != null) ? ((t2_4 = t_3, (t2_4 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_4) : 1)) : 0)) > (t2h + 1)) {\r\n                const matchValue_3 = value_1(SetTreeNode$1__get_Right(matchValue_2));\r\n                if (matchValue_3 instanceof SetTreeNode$1) {\r\n                    return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeNode$1__get_Left(matchValue_3)), SetTreeLeaf$1__get_Key(matchValue_3), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_3), v, t2));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Set.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_2), v, t2));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Set.rebalance\"));\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeModule_mk(t1, v, t2);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_add(comparer, k, t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            if (c < 0) {\r\n                return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\r\n            }\r\n            else if (c === 0) {\r\n                return t;\r\n            }\r\n            else {\r\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t2)));\r\n            }\r\n        }\r\n        else {\r\n            const c_1 = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n            if (c_1 < 0) {\r\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, SetTreeModule_empty(), t, 2);\r\n            }\r\n            else if (c_1 === 0) {\r\n                return t;\r\n            }\r\n            else {\r\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, t, SetTreeModule_empty(), 2);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeLeaf$1_$ctor_2B595(k);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_balance(comparer, t1, k, t2) {\r\n    if (t1 != null) {\r\n        const t1$0027 = t1;\r\n        if (t2 != null) {\r\n            const t2$0027 = t2;\r\n            if (t1$0027 instanceof SetTreeNode$1) {\r\n                if (t2$0027 instanceof SetTreeNode$1) {\r\n                    if ((SetTreeNode$1__get_Height(t1$0027) + 2) < SetTreeNode$1__get_Height(t2$0027)) {\r\n                        return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2$0027)), SetTreeLeaf$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027));\r\n                    }\r\n                    else if ((SetTreeNode$1__get_Height(t2$0027) + 2) < SetTreeNode$1__get_Height(t1$0027)) {\r\n                        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1$0027), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1$0027), k, t2));\r\n                    }\r\n                    else {\r\n                        return SetTreeModule_mk(t1, k, t2);\r\n                    }\r\n                }\r\n                else {\r\n                    return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1));\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2));\r\n            }\r\n        }\r\n        else {\r\n            return SetTreeModule_add(comparer, k, t1);\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeModule_add(comparer, k, t2);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_split(comparer, pivot, t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            const c = comparer.Compare(pivot, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n            if (c < 0) {\r\n                const patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t2));\r\n                return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\r\n            }\r\n            else if (c === 0) {\r\n                return [SetTreeNode$1__get_Left(t2), true, SetTreeNode$1__get_Right(t2)];\r\n            }\r\n            else {\r\n                const patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t2));\r\n                return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\r\n            }\r\n        }\r\n        else {\r\n            const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(t2), pivot) | 0;\r\n            if (c_1 < 0) {\r\n                return [t, false, SetTreeModule_empty()];\r\n            }\r\n            else if (c_1 === 0) {\r\n                return [SetTreeModule_empty(), true, SetTreeModule_empty()];\r\n            }\r\n            else {\r\n                return [SetTreeModule_empty(), false, t];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return [SetTreeModule_empty(), false, SetTreeModule_empty()];\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_spliceOutSuccessor(t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            if (SetTreeNode$1__get_Left(t2) == null) {\r\n                return [SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2)];\r\n            }\r\n            else {\r\n                const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t2));\r\n                return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\r\n            }\r\n        }\r\n        else {\r\n            return [SetTreeLeaf$1__get_Key(t2), SetTreeModule_empty()];\r\n        }\r\n    }\r\n    else {\r\n        throw (new Error(\"internal error: Set.spliceOutSuccessor\"));\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_remove(comparer, k, t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            if (c < 0) {\r\n                return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\r\n            }\r\n            else if (c === 0) {\r\n                if (SetTreeNode$1__get_Left(t2) == null) {\r\n                    return SetTreeNode$1__get_Right(t2);\r\n                }\r\n                else if (SetTreeNode$1__get_Right(t2) == null) {\r\n                    return SetTreeNode$1__get_Left(t2);\r\n                }\r\n                else {\r\n                    const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t2));\r\n                    return SetTreeModule_mk(SetTreeNode$1__get_Left(t2), patternInput[0], patternInput[1]);\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t2)));\r\n            }\r\n        }\r\n        else if (c === 0) {\r\n            return SetTreeModule_empty();\r\n        }\r\n        else {\r\n            return t;\r\n        }\r\n    }\r\n    else {\r\n        return t;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\r\n    SetTreeModule_mem:\r\n    while (true) {\r\n        const comparer = comparer_mut, k = k_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                if (c < 0) {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    t_mut = SetTreeNode$1__get_Left(t2);\r\n                    continue SetTreeModule_mem;\r\n                }\r\n                else if (c === 0) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    t_mut = SetTreeNode$1__get_Right(t2);\r\n                    continue SetTreeModule_mem;\r\n                }\r\n            }\r\n            else {\r\n                return c === 0;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_iter(f_mut, t_mut) {\r\n    SetTreeModule_iter:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                SetTreeModule_iter(f, SetTreeNode$1__get_Left(t2));\r\n                f(SetTreeLeaf$1__get_Key(t2));\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Right(t2);\r\n                continue SetTreeModule_iter;\r\n            }\r\n            else {\r\n                f(SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\r\n    SetTreeModule_foldBackOpt:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut, x = x_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                x_mut = f(SetTreeLeaf$1__get_Key(t2), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t2), x));\r\n                continue SetTreeModule_foldBackOpt;\r\n            }\r\n            else {\r\n                return f(SetTreeLeaf$1__get_Key(t2), x);\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_foldBack(f, m, x) {\r\n    return SetTreeModule_foldBackOpt(f, m, x);\r\n}\r\n\r\nexport function SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\r\n    SetTreeModule_foldOpt:\r\n    while (true) {\r\n        const f = f_mut, x = x_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                f_mut = f;\r\n                x_mut = f(SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2));\r\n                t_mut = SetTreeNode$1__get_Right(t2);\r\n                continue SetTreeModule_foldOpt;\r\n            }\r\n            else {\r\n                return f(x, SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_fold(f, x, m) {\r\n    return SetTreeModule_foldOpt(f, x, m);\r\n}\r\n\r\nexport function SetTreeModule_forall(f_mut, t_mut) {\r\n    SetTreeModule_forall:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_forall(f, SetTreeNode$1__get_Left(t2)) : false) {\r\n                    f_mut = f;\r\n                    t_mut = SetTreeNode$1__get_Right(t2);\r\n                    continue SetTreeModule_forall;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return f(SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_exists(f_mut, t_mut) {\r\n    SetTreeModule_exists:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t2))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    t_mut = SetTreeNode$1__get_Right(t2);\r\n                    continue SetTreeModule_exists;\r\n                }\r\n            }\r\n            else {\r\n                return f(SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_subset(comparer, a, b) {\r\n    return SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a);\r\n}\r\n\r\nexport function SetTreeModule_properSubset(comparer, a, b) {\r\n    if (SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a)) {\r\n        return SetTreeModule_exists((x_1) => (!SetTreeModule_mem(comparer, x_1, a)), b);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\r\n    SetTreeModule_filterAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc = acc_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                const acc_1 = f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc) : acc;\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t2), acc_1);\r\n                continue SetTreeModule_filterAux;\r\n            }\r\n            else if (f(SetTreeLeaf$1__get_Key(t2))) {\r\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_filter(comparer, f, s) {\r\n    return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\r\n}\r\n\r\nexport function SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\r\n    SetTreeModule_diffAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, t = t_mut, acc = acc_mut;\r\n        if (acc == null) {\r\n            return acc;\r\n        }\r\n        else if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                comparer_mut = comparer;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t2), SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc));\r\n                continue SetTreeModule_diffAux;\r\n            }\r\n            else {\r\n                return SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_diff(comparer, a, b) {\r\n    return SetTreeModule_diffAux(comparer, b, a);\r\n}\r\n\r\nexport function SetTreeModule_union(comparer, t1, t2) {\r\n    if (t1 != null) {\r\n        const t1$0027 = t1;\r\n        if (t2 != null) {\r\n            const t2$0027 = t2;\r\n            if (t1$0027 instanceof SetTreeNode$1) {\r\n                if (t2$0027 instanceof SetTreeNode$1) {\r\n                    if (SetTreeNode$1__get_Height(t1$0027) > SetTreeNode$1__get_Height(t2$0027)) {\r\n                        const patternInput = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\r\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1$0027), patternInput[0]), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1$0027), patternInput[2]));\r\n                    }\r\n                    else {\r\n                        const patternInput_1 = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\r\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2$0027), patternInput_1[0]), SetTreeLeaf$1__get_Key(t2$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2$0027), patternInput_1[2]));\r\n                    }\r\n                }\r\n                else {\r\n                    return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\r\n            }\r\n        }\r\n        else {\r\n            return t1;\r\n        }\r\n    }\r\n    else {\r\n        return t2;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\r\n    SetTreeModule_intersectionAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, b = b_mut, t = t_mut, acc = acc_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                const acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t2), acc);\r\n                const acc_2 = SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc_1) : acc_1;\r\n                comparer_mut = comparer;\r\n                b_mut = b;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = acc_2;\r\n                continue SetTreeModule_intersectionAux;\r\n            }\r\n            else if (SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b)) {\r\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_intersection(comparer, a, b) {\r\n    return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\r\n}\r\n\r\nexport function SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\r\n    if (f(k)) {\r\n        return [SetTreeModule_add(comparer, k, acc1), acc2];\r\n    }\r\n    else {\r\n        return [acc1, SetTreeModule_add(comparer, k, acc2)];\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\r\n    SetTreeModule_partitionAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\r\n        const acc = [acc_0, acc_1];\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                const acc_2 = SetTreeModule_partitionAux(comparer, f, SetTreeNode$1__get_Right(t2), acc[0], acc[1]);\r\n                const acc_3 = SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc_2[0], acc_2[1]);\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_0_mut = acc_3[0];\r\n                acc_1_mut = acc_3[1];\r\n                continue SetTreeModule_partitionAux;\r\n            }\r\n            else {\r\n                return SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc[0], acc[1]);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_partition(comparer, f, s) {\r\n    return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\r\n}\r\n\r\nexport function SetTreeModule_minimumElementAux(t_mut, n_mut) {\r\n    SetTreeModule_minimumElementAux:\r\n    while (true) {\r\n        const t = t_mut, n = n_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                n_mut = SetTreeLeaf$1__get_Key(t2);\r\n                continue SetTreeModule_minimumElementAux;\r\n            }\r\n            else {\r\n                return SetTreeLeaf$1__get_Key(t2);\r\n            }\r\n        }\r\n        else {\r\n            return n;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_minimumElementOpt(t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            return some(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2)));\r\n        }\r\n        else {\r\n            return some(SetTreeLeaf$1__get_Key(t2));\r\n        }\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_maximumElementAux(t_mut, n_mut) {\r\n    SetTreeModule_maximumElementAux:\r\n    while (true) {\r\n        const t = t_mut, n = n_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                t_mut = SetTreeNode$1__get_Right(t2);\r\n                n_mut = SetTreeLeaf$1__get_Key(t2);\r\n                continue SetTreeModule_maximumElementAux;\r\n            }\r\n            else {\r\n                return SetTreeLeaf$1__get_Key(t2);\r\n            }\r\n        }\r\n        else {\r\n            return n;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_maximumElementOpt(t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            return some(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t2), SetTreeLeaf$1__get_Key(t2)));\r\n        }\r\n        else {\r\n            return some(SetTreeLeaf$1__get_Key(t2));\r\n        }\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_minimumElement(s) {\r\n    const matchValue = SetTreeModule_minimumElementOpt(s);\r\n    if (matchValue == null) {\r\n        throw (new Error(\"Set contains no elements\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_maximumElement(s) {\r\n    const matchValue = SetTreeModule_maximumElementOpt(s);\r\n    if (matchValue == null) {\r\n        throw (new Error(\"Set contains no elements\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport class SetTreeModule_SetIterator$1 extends Record {\r\n    constructor(stack, started) {\r\n        super();\r\n        this.stack = stack;\r\n        this.started = started;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_SetIterator$1$reflection(gen0) {\r\n    return record_type(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, () => [[\"stack\", list_type(option_type(SetTreeLeaf$1$reflection(gen0)))], [\"started\", bool_type]]);\r\n}\r\n\r\nexport function SetTreeModule_collapseLHS(stack_mut) {\r\n    SetTreeModule_collapseLHS:\r\n    while (true) {\r\n        const stack = stack_mut;\r\n        if (!isEmpty_1(stack)) {\r\n            const x = head(stack);\r\n            const rest = tail(stack);\r\n            if (x != null) {\r\n                const x2 = x;\r\n                if (x2 instanceof SetTreeNode$1) {\r\n                    stack_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2)), SetTreeNode$1__get_Right(x2)], rest);\r\n                    continue SetTreeModule_collapseLHS;\r\n                }\r\n                else {\r\n                    return stack;\r\n                }\r\n            }\r\n            else {\r\n                stack_mut = rest;\r\n                continue SetTreeModule_collapseLHS;\r\n            }\r\n        }\r\n        else {\r\n            return empty_1();\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_mkIterator(s) {\r\n    return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS(singleton_1(s)), false);\r\n}\r\n\r\nexport function SetTreeModule_notStarted() {\r\n    throw (new Error(\"Enumeration not started\"));\r\n}\r\n\r\nexport function SetTreeModule_alreadyFinished() {\r\n    throw (new Error(\"Enumeration already started\"));\r\n}\r\n\r\nexport function SetTreeModule_current(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (isEmpty_1(matchValue)) {\r\n            return SetTreeModule_alreadyFinished();\r\n        }\r\n        else if (head(matchValue) != null) {\r\n            const t = head(matchValue);\r\n            return SetTreeLeaf$1__get_Key(t);\r\n        }\r\n        else {\r\n            throw (new Error(\"Please report error: Set iterator, unexpected stack for current\"));\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeModule_notStarted();\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_moveNext(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (!isEmpty_1(matchValue)) {\r\n            if (head(matchValue) != null) {\r\n                const t = head(matchValue);\r\n                if (t instanceof SetTreeNode$1) {\r\n                    throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\r\n                }\r\n                else {\r\n                    i.stack = SetTreeModule_collapseLHS(tail(matchValue));\r\n                    return !isEmpty_1(i.stack);\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        i.started = true;\r\n        return !isEmpty_1(i.stack);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_mkIEnumerator(s) {\r\n    let i = SetTreeModule_mkIterator(s);\r\n    return {\r\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n            return SetTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.get_Current\"]() {\r\n            return SetTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n            return SetTreeModule_moveNext(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.Reset\"]() {\r\n            i = SetTreeModule_mkIterator(s);\r\n        },\r\n        Dispose() {\r\n        },\r\n    };\r\n}\r\n\r\nexport function SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\r\n    SetTreeModule_compareStacks:\r\n    while (true) {\r\n        const comparer = comparer_mut, l1 = l1_mut, l2 = l2_mut;\r\n        const matchValue = [l1, l2];\r\n        if (!isEmpty_1(matchValue[0])) {\r\n            if (!isEmpty_1(matchValue[1])) {\r\n                if (head(matchValue[1]) != null) {\r\n                    if (head(matchValue[0]) != null) {\r\n                        const x1_3 = head(matchValue[0]);\r\n                        const x2_3 = head(matchValue[1]);\r\n                        if (x1_3 instanceof SetTreeNode$1) {\r\n                            if (SetTreeNode$1__get_Left(x1_3) == null) {\r\n                                if (x2_3 instanceof SetTreeNode$1) {\r\n                                    if (SetTreeNode$1__get_Left(x2_3) == null) {\r\n                                        const c = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                                        if (c !== 0) {\r\n                                            return c | 0;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\r\n                                            l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        const matchValue_3 = [l1, l2];\r\n                                        let pattern_matching_result, t1_6, x1_4, t2_6, x2_4;\r\n                                        if (!isEmpty_1(matchValue_3[0])) {\r\n                                            if (head(matchValue_3[0]) != null) {\r\n                                                pattern_matching_result = 0;\r\n                                                t1_6 = tail(matchValue_3[0]);\r\n                                                x1_4 = head(matchValue_3[0]);\r\n                                            }\r\n                                            else if (!isEmpty_1(matchValue_3[1])) {\r\n                                                if (head(matchValue_3[1]) != null) {\r\n                                                    pattern_matching_result = 1;\r\n                                                    t2_6 = tail(matchValue_3[1]);\r\n                                                    x2_4 = head(matchValue_3[1]);\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result = 2;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result = 2;\r\n                                            }\r\n                                        }\r\n                                        else if (!isEmpty_1(matchValue_3[1])) {\r\n                                            if (head(matchValue_3[1]) != null) {\r\n                                                pattern_matching_result = 1;\r\n                                                t2_6 = tail(matchValue_3[1]);\r\n                                                x2_4 = head(matchValue_3[1]);\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result = 2;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result = 2;\r\n                                        }\r\n                                        switch (pattern_matching_result) {\r\n                                            case 0: {\r\n                                                if (x1_4 instanceof SetTreeNode$1) {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0)], t1_6);\r\n                                                    l2_mut = l2;\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                                else {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_4))], t1_6);\r\n                                                    l2_mut = l2;\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                            }\r\n                                            case 1: {\r\n                                                if (x2_4 instanceof SetTreeNode$1) {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = l1;\r\n                                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0)], t2_6);\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                                else {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = l1;\r\n                                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_4))], t2_6);\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                            }\r\n                                            case 2: {\r\n                                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                                    if (c_1 !== 0) {\r\n                                        return c_1 | 0;\r\n                                    }\r\n                                    else {\r\n                                        comparer_mut = comparer;\r\n                                        l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\r\n                                        l2_mut = cons(SetTreeModule_empty(), tail(matchValue[1]));\r\n                                        continue SetTreeModule_compareStacks;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                const matchValue_4 = [l1, l2];\r\n                                let pattern_matching_result_1, t1_7, x1_5, t2_7, x2_5;\r\n                                if (!isEmpty_1(matchValue_4[0])) {\r\n                                    if (head(matchValue_4[0]) != null) {\r\n                                        pattern_matching_result_1 = 0;\r\n                                        t1_7 = tail(matchValue_4[0]);\r\n                                        x1_5 = head(matchValue_4[0]);\r\n                                    }\r\n                                    else if (!isEmpty_1(matchValue_4[1])) {\r\n                                        if (head(matchValue_4[1]) != null) {\r\n                                            pattern_matching_result_1 = 1;\r\n                                            t2_7 = tail(matchValue_4[1]);\r\n                                            x2_5 = head(matchValue_4[1]);\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_1 = 2;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_1 = 2;\r\n                                    }\r\n                                }\r\n                                else if (!isEmpty_1(matchValue_4[1])) {\r\n                                    if (head(matchValue_4[1]) != null) {\r\n                                        pattern_matching_result_1 = 1;\r\n                                        t2_7 = tail(matchValue_4[1]);\r\n                                        x2_5 = head(matchValue_4[1]);\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_1 = 2;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_1 = 2;\r\n                                }\r\n                                switch (pattern_matching_result_1) {\r\n                                    case 0: {\r\n                                        if (x1_5 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_5), 0)], t1_7);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_5))], t1_7);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 1: {\r\n                                        if (x2_5 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_5), 0)], t2_7);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_5))], t2_7);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 2: {\r\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (x2_3 instanceof SetTreeNode$1) {\r\n                            if (SetTreeNode$1__get_Left(x2_3) == null) {\r\n                                const c_2 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                                if (c_2 !== 0) {\r\n                                    return c_2 | 0;\r\n                                }\r\n                                else {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = cons(SetTreeModule_empty(), tail(matchValue[0]));\r\n                                    l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                            }\r\n                            else {\r\n                                const matchValue_5 = [l1, l2];\r\n                                let pattern_matching_result_2, t1_8, x1_6, t2_8, x2_6;\r\n                                if (!isEmpty_1(matchValue_5[0])) {\r\n                                    if (head(matchValue_5[0]) != null) {\r\n                                        pattern_matching_result_2 = 0;\r\n                                        t1_8 = tail(matchValue_5[0]);\r\n                                        x1_6 = head(matchValue_5[0]);\r\n                                    }\r\n                                    else if (!isEmpty_1(matchValue_5[1])) {\r\n                                        if (head(matchValue_5[1]) != null) {\r\n                                            pattern_matching_result_2 = 1;\r\n                                            t2_8 = tail(matchValue_5[1]);\r\n                                            x2_6 = head(matchValue_5[1]);\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_2 = 2;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_2 = 2;\r\n                                    }\r\n                                }\r\n                                else if (!isEmpty_1(matchValue_5[1])) {\r\n                                    if (head(matchValue_5[1]) != null) {\r\n                                        pattern_matching_result_2 = 1;\r\n                                        t2_8 = tail(matchValue_5[1]);\r\n                                        x2_6 = head(matchValue_5[1]);\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_2 = 2;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_2 = 2;\r\n                                }\r\n                                switch (pattern_matching_result_2) {\r\n                                    case 0: {\r\n                                        if (x1_6 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0)], t1_8);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_6))], t1_8);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 1: {\r\n                                        if (x2_6 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0)], t2_8);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_6))], t2_8);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 2: {\r\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const c_3 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                            if (c_3 !== 0) {\r\n                                return c_3 | 0;\r\n                            }\r\n                            else {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = tail(matchValue[0]);\r\n                                l2_mut = tail(matchValue[1]);\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        const x2 = head(matchValue[1]);\r\n                        const matchValue_1 = [l1, l2];\r\n                        let pattern_matching_result_3, t1_2, x1, t2_2, x2_1;\r\n                        if (!isEmpty_1(matchValue_1[0])) {\r\n                            if (head(matchValue_1[0]) != null) {\r\n                                pattern_matching_result_3 = 0;\r\n                                t1_2 = tail(matchValue_1[0]);\r\n                                x1 = head(matchValue_1[0]);\r\n                            }\r\n                            else if (!isEmpty_1(matchValue_1[1])) {\r\n                                if (head(matchValue_1[1]) != null) {\r\n                                    pattern_matching_result_3 = 1;\r\n                                    t2_2 = tail(matchValue_1[1]);\r\n                                    x2_1 = head(matchValue_1[1]);\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_3 = 2;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_3 = 2;\r\n                            }\r\n                        }\r\n                        else if (!isEmpty_1(matchValue_1[1])) {\r\n                            if (head(matchValue_1[1]) != null) {\r\n                                pattern_matching_result_3 = 1;\r\n                                t2_2 = tail(matchValue_1[1]);\r\n                                x2_1 = head(matchValue_1[1]);\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_3 = 2;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_3 = 2;\r\n                        }\r\n                        switch (pattern_matching_result_3) {\r\n                            case 0: {\r\n                                if (x1 instanceof SetTreeNode$1) {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1), 0)], t1_2);\r\n                                    l2_mut = l2;\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                                else {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1))], t1_2);\r\n                                    l2_mut = l2;\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                            }\r\n                            case 1: {\r\n                                if (x2_1 instanceof SetTreeNode$1) {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = l1;\r\n                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_1), 0)], t2_2);\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                                else {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = l1;\r\n                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_1))], t2_2);\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                            }\r\n                            case 2: {\r\n                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (head(matchValue[0]) != null) {\r\n                    const x1_1 = head(matchValue[0]);\r\n                    const matchValue_2 = [l1, l2];\r\n                    let pattern_matching_result_4, t1_4, x1_2, t2_4, x2_2;\r\n                    if (!isEmpty_1(matchValue_2[0])) {\r\n                        if (head(matchValue_2[0]) != null) {\r\n                            pattern_matching_result_4 = 0;\r\n                            t1_4 = tail(matchValue_2[0]);\r\n                            x1_2 = head(matchValue_2[0]);\r\n                        }\r\n                        else if (!isEmpty_1(matchValue_2[1])) {\r\n                            if (head(matchValue_2[1]) != null) {\r\n                                pattern_matching_result_4 = 1;\r\n                                t2_4 = tail(matchValue_2[1]);\r\n                                x2_2 = head(matchValue_2[1]);\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_4 = 2;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_4 = 2;\r\n                        }\r\n                    }\r\n                    else if (!isEmpty_1(matchValue_2[1])) {\r\n                        if (head(matchValue_2[1]) != null) {\r\n                            pattern_matching_result_4 = 1;\r\n                            t2_4 = tail(matchValue_2[1]);\r\n                            x2_2 = head(matchValue_2[1]);\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_4 = 2;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_4 = 2;\r\n                    }\r\n                    switch (pattern_matching_result_4) {\r\n                        case 0: {\r\n                            if (x1_2 instanceof SetTreeNode$1) {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0)], t1_4);\r\n                                l2_mut = l2;\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                            else {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_2))], t1_4);\r\n                                l2_mut = l2;\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                        }\r\n                        case 1: {\r\n                            if (x2_2 instanceof SetTreeNode$1) {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = l1;\r\n                                l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0)], t2_4);\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                            else {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = l1;\r\n                                l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_2))], t2_4);\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                        }\r\n                        case 2: {\r\n                            throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    comparer_mut = comparer;\r\n                    l1_mut = tail(matchValue[0]);\r\n                    l2_mut = tail(matchValue[1]);\r\n                    continue SetTreeModule_compareStacks;\r\n                }\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        }\r\n        else if (isEmpty_1(matchValue[1])) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_compare(comparer, t1, t2) {\r\n    if (t1 == null) {\r\n        if (t2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (t2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return SetTreeModule_compareStacks(comparer, singleton_1(t1), singleton_1(t2)) | 0;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_choose(s) {\r\n    return SetTreeModule_minimumElement(s);\r\n}\r\n\r\nexport function SetTreeModule_toList(t) {\r\n    const loop = (t$0027_mut, acc_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const t$0027 = t$0027_mut, acc = acc_mut;\r\n            if (t$0027 != null) {\r\n                const t2 = t$0027;\r\n                if (t2 instanceof SetTreeNode$1) {\r\n                    t$0027_mut = SetTreeNode$1__get_Left(t2);\r\n                    acc_mut = cons(SetTreeLeaf$1__get_Key(t2), loop(SetTreeNode$1__get_Right(t2), acc));\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return cons(SetTreeLeaf$1__get_Key(t2), acc);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(t, empty_1());\r\n}\r\n\r\nexport function SetTreeModule_copyToArray(s, arr, i) {\r\n    let j = i;\r\n    SetTreeModule_iter((x) => {\r\n        arr[j] = x;\r\n        j = ((j + 1) | 0);\r\n    }, s);\r\n}\r\n\r\nexport function SetTreeModule_toArray(s) {\r\n    const n = SetTreeModule_count(s) | 0;\r\n    const res = fill(new Array(n), 0, n, null);\r\n    SetTreeModule_copyToArray(s, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\r\n    SetTreeModule_mkFromEnumerator:\r\n    while (true) {\r\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            comparer_mut = comparer;\r\n            acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\r\n            e_mut = e;\r\n            continue SetTreeModule_mkFromEnumerator;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_ofArray(comparer, l) {\r\n    return fold_1((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\r\n}\r\n\r\nexport function SetTreeModule_ofList(comparer, l) {\r\n    return fold_2((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\r\n}\r\n\r\nexport function SetTreeModule_ofSeq(comparer, c) {\r\n    if (isArrayLike(c)) {\r\n        return SetTreeModule_ofArray(comparer, c);\r\n    }\r\n    else if (c instanceof FSharpList) {\r\n        return SetTreeModule_ofList(comparer, c);\r\n    }\r\n    else {\r\n        const ie = getEnumerator(c);\r\n        try {\r\n            return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\r\n        }\r\n        finally {\r\n            ie.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport class FSharpSet {\r\n    constructor(comparer, tree) {\r\n        this.comparer = comparer;\r\n        this.tree = tree;\r\n    }\r\n    GetHashCode() {\r\n        const this$ = this;\r\n        return FSharpSet__ComputeHashCode(this$) | 0;\r\n    }\r\n    Equals(that) {\r\n        const this$ = this;\r\n        return (that instanceof FSharpSet) ? (SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0) : false;\r\n    }\r\n    toString() {\r\n        const this$ = this;\r\n        return (\"set [\" + join(\"; \", map_1((x) => {\r\n            let copyOfStruct = x;\r\n            return toString(copyOfStruct);\r\n        }, this$))) + \"]\";\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return \"FSharpSet\";\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    CompareTo(that) {\r\n        const s = this;\r\n        return SetTreeModule_compare(FSharpSet__get_Comparer(s), FSharpSet__get_Tree(s), FSharpSet__get_Tree(that)) | 0;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\r\n        throw (new Error(\"ReadOnlyCollection\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\r\n        throw (new Error(\"ReadOnlyCollection\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\r\n        throw (new Error(\"ReadOnlyCollection\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\r\n        const s = this;\r\n        return SetTreeModule_mem(FSharpSet__get_Comparer(s), x, FSharpSet__get_Tree(s));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\r\n        const s = this;\r\n        SetTreeModule_copyToArray(FSharpSet__get_Tree(s), arr, i);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\r\n        return true;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\r\n        const s = this;\r\n        return FSharpSet__get_Count(s) | 0;\r\n    }\r\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\r\n        const s = this;\r\n        return FSharpSet__get_Count(s) | 0;\r\n    }\r\n    GetEnumerator() {\r\n        const s = this;\r\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const s = this;\r\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\r\n    }\r\n    get size() {\r\n        const s = this;\r\n        return FSharpSet__get_Count(s) | 0;\r\n    }\r\n    add(k) {\r\n        const s = this;\r\n        throw (new Error(\"Set cannot be mutated\"));\r\n        return s;\r\n    }\r\n    clear() {\r\n        throw (new Error(\"Set cannot be mutated\"));\r\n    }\r\n    delete(k) {\r\n        throw (new Error(\"Set cannot be mutated\"));\r\n        return false;\r\n    }\r\n    has(k) {\r\n        const s = this;\r\n        return FSharpSet__Contains(s, k);\r\n    }\r\n    keys() {\r\n        const s = this;\r\n        return map_1((x) => x, s);\r\n    }\r\n    values() {\r\n        const s = this;\r\n        return map_1((x) => x, s);\r\n    }\r\n    entries() {\r\n        const s = this;\r\n        return map_1((v) => [v, v], s);\r\n    }\r\n    forEach(f, thisArg) {\r\n        const s = this;\r\n        iterate_1((x) => {\r\n            f(x, x, s);\r\n        }, s);\r\n    }\r\n}\r\n\r\nexport function FSharpSet$reflection(gen0) {\r\n    return class_type(\"Set.FSharpSet\", [gen0], FSharpSet);\r\n}\r\n\r\nexport function FSharpSet_$ctor(comparer, tree) {\r\n    return new FSharpSet(comparer, tree);\r\n}\r\n\r\nexport function FSharpSet__get_Comparer(set$) {\r\n    return set$.comparer;\r\n}\r\n\r\nexport function FSharpSet__get_Tree(set$) {\r\n    return set$.tree;\r\n}\r\n\r\nexport function FSharpSet_Empty(comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_empty());\r\n}\r\n\r\nexport function FSharpSet__Add(s, value) {\r\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\r\n}\r\n\r\nexport function FSharpSet__Remove(s, value) {\r\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\r\n}\r\n\r\nexport function FSharpSet__get_Count(s) {\r\n    return SetTreeModule_count(FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__Contains(s, value) {\r\n    return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__Iterate(s, x) {\r\n    SetTreeModule_iter(x, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__Fold(s, f, z) {\r\n    const f_1 = f;\r\n    return SetTreeModule_fold((x, z_1) => f_1(z_1, x), z, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__get_IsEmpty(s) {\r\n    return FSharpSet__get_Tree(s) == null;\r\n}\r\n\r\nexport function FSharpSet__Partition(s, f) {\r\n    if (FSharpSet__get_Tree(s) == null) {\r\n        return [s, s];\r\n    }\r\n    else {\r\n        const patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\r\n        return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\r\n    }\r\n}\r\n\r\nexport function FSharpSet__Filter(s, f) {\r\n    if (FSharpSet__get_Tree(s) == null) {\r\n        return s;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet__Map(s, f, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_fold((acc, k) => SetTreeModule_add(comparer, f(k), acc), SetTreeModule_empty(), FSharpSet__get_Tree(s)));\r\n}\r\n\r\nexport function FSharpSet__Exists(s, f) {\r\n    return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__ForAll(s, f) {\r\n    return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet_op_Subtraction(set1, set2) {\r\n    if (FSharpSet__get_Tree(set1) == null) {\r\n        return set1;\r\n    }\r\n    else if (FSharpSet__get_Tree(set2) == null) {\r\n        return set1;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet_op_Addition(set1, set2) {\r\n    if (FSharpSet__get_Tree(set2) == null) {\r\n        return set1;\r\n    }\r\n    else if (FSharpSet__get_Tree(set1) == null) {\r\n        return set2;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet_Intersection(a, b) {\r\n    if (FSharpSet__get_Tree(b) == null) {\r\n        return b;\r\n    }\r\n    else if (FSharpSet__get_Tree(a) == null) {\r\n        return a;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet_IntersectionMany(sets) {\r\n    return reduce((s1, s2) => FSharpSet_Intersection(s1, s2), sets);\r\n}\r\n\r\nexport function FSharpSet_Equality(a, b) {\r\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\r\n}\r\n\r\nexport function FSharpSet_Compare(a, b) {\r\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\r\n}\r\n\r\nexport function FSharpSet__get_Choose(x) {\r\n    return SetTreeModule_choose(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__get_MinimumElement(x) {\r\n    return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__get_MaximumElement(x) {\r\n    return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__IsSubsetOf(x, otherSet) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\r\n}\r\n\r\nexport function FSharpSet__IsSupersetOf(x, otherSet) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__IsProperSubsetOf(x, otherSet) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\r\n}\r\n\r\nexport function FSharpSet__IsProperSupersetOf(x, otherSet) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__ToList(x) {\r\n    return SetTreeModule_toList(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__ToArray(x) {\r\n    return SetTreeModule_toArray(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__ComputeHashCode(this$) {\r\n    let y;\r\n    let res = 0;\r\n    const enumerator = getEnumerator(this$);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            res = (((y = (structuralHash(x_1) | 0), ((res << 1) + y) + 631)) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return Math.abs(res) | 0;\r\n}\r\n\r\nexport function isEmpty(set$) {\r\n    return FSharpSet__get_IsEmpty(set$);\r\n}\r\n\r\nexport function contains(element, set$) {\r\n    return FSharpSet__Contains(set$, element);\r\n}\r\n\r\nexport function add(value, set$) {\r\n    return FSharpSet__Add(set$, value);\r\n}\r\n\r\nexport function singleton(value, comparer) {\r\n    return FSharpSet__Add(FSharpSet_Empty(comparer), value);\r\n}\r\n\r\nexport function remove(value, set$) {\r\n    return FSharpSet__Remove(set$, value);\r\n}\r\n\r\nexport function union(set1, set2) {\r\n    return FSharpSet_op_Addition(set1, set2);\r\n}\r\n\r\nexport function unionMany(sets, comparer) {\r\n    return fold_3((s1, s2) => FSharpSet_op_Addition(s1, s2), FSharpSet_Empty(comparer), sets);\r\n}\r\n\r\nexport function intersect(set1, set2) {\r\n    return FSharpSet_Intersection(set1, set2);\r\n}\r\n\r\nexport function intersectMany(sets) {\r\n    return FSharpSet_IntersectionMany(sets);\r\n}\r\n\r\nexport function iterate(action, set$) {\r\n    FSharpSet__Iterate(set$, action);\r\n}\r\n\r\nexport function empty(comparer) {\r\n    return FSharpSet_Empty(comparer);\r\n}\r\n\r\nexport function forAll(predicate, set$) {\r\n    return FSharpSet__ForAll(set$, predicate);\r\n}\r\n\r\nexport function exists(predicate, set$) {\r\n    return FSharpSet__Exists(set$, predicate);\r\n}\r\n\r\nexport function filter(predicate, set$) {\r\n    return FSharpSet__Filter(set$, predicate);\r\n}\r\n\r\nexport function partition(predicate, set$) {\r\n    return FSharpSet__Partition(set$, predicate);\r\n}\r\n\r\nexport function fold(folder, state, set$) {\r\n    return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\r\n}\r\n\r\nexport function foldBack(folder, set$, state) {\r\n    return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\r\n}\r\n\r\nexport function map(mapping, set$, comparer) {\r\n    return FSharpSet__Map(set$, mapping, comparer);\r\n}\r\n\r\nexport function count(set$) {\r\n    return FSharpSet__get_Count(set$);\r\n}\r\n\r\nexport function ofList(elements, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\r\n}\r\n\r\nexport function ofArray(array, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\r\n}\r\n\r\nexport function toList(set$) {\r\n    return FSharpSet__ToList(set$);\r\n}\r\n\r\nexport function toArray(set$) {\r\n    return FSharpSet__ToArray(set$);\r\n}\r\n\r\nexport function toSeq(set$) {\r\n    return map_1((x) => x, set$);\r\n}\r\n\r\nexport function ofSeq(elements, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\r\n}\r\n\r\nexport function difference(set1, set2) {\r\n    return FSharpSet_op_Subtraction(set1, set2);\r\n}\r\n\r\nexport function isSubset(set1, set2) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\r\n}\r\n\r\nexport function isSuperset(set1, set2) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\r\n}\r\n\r\nexport function isProperSubset(set1, set2) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\r\n}\r\n\r\nexport function isProperSuperset(set1, set2) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\r\n}\r\n\r\nexport function minElement(set$) {\r\n    return FSharpSet__get_MinimumElement(set$);\r\n}\r\n\r\nexport function maxElement(set$) {\r\n    return FSharpSet__get_MaximumElement(set$);\r\n}\r\n\r\nexport function unionWith(s1, s2) {\r\n    return fold_3((acc, x) => acc.add(x), s1, s2);\r\n}\r\n\r\nexport function intersectWith(s1, s2, comparer) {\r\n    const s2_1 = ofSeq(s2, comparer);\r\n    const enumerator = getEnumerator(s1.keys());\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (!FSharpSet__Contains(s2_1, x)) {\r\n                void s1.delete(x);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function exceptWith(s1, s2) {\r\n    const enumerator = getEnumerator(s2);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            void s1.delete(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function isSubsetOf(s1, s2, comparer) {\r\n    return isSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\r\n}\r\n\r\nexport function isSupersetOf(s1, s2, comparer) {\r\n    return isSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\r\n}\r\n\r\nexport function isProperSubsetOf(s1, s2, comparer) {\r\n    return isProperSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\r\n}\r\n\r\nexport function isProperSupersetOf(s1, s2, comparer) {\r\n    return isProperSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\r\n}\r\n\r\n","import { toFail, printf, toText, join } from \"../fable-library.3.2.7/String.js\";\nimport { Result_Map, FSharpResult$2 } from \"../fable-library.3.2.7/Choice.js\";\nimport { Util_CachedDecoders, Util_Cache$1__GetOrAdd_43981464, CaseStrategy, Util_Casing_convert, ErrorReason } from \"./Types.fs.js\";\nimport { tryParse as tryParse_2 } from \"../fable-library.3.2.7/Guid.js\";\nimport { toString as toString_12, FSharpRef } from \"../fable-library.3.2.7/Types.js\";\nimport { tryParse as tryParse_3 } from \"../fable-library.3.2.7/Int32.js\";\nimport { tryParse as tryParse_4, fromInt, fromNumber, fromBits, toNumber } from \"../fable-library.3.2.7/Long.js\";\nimport { parse, fromInt32 } from \"../fable-library.3.2.7/BigInt.js\";\nimport { tryParse as tryParse_5 } from \"../fable-library.3.2.7/Decimal.js\";\nimport Decimal from \"../fable-library.3.2.7/Decimal.js\";\nimport { toUniversalTime, tryParse as tryParse_6, minValue } from \"../fable-library.3.2.7/Date.js\";\nimport { tryParse as tryParse_7, minValue as minValue_1 } from \"../fable-library.3.2.7/DateOffset.js\";\nimport { tryParse as tryParse_8 } from \"../fable-library.3.2.7/TimeSpan.js\";\nimport { map as map_4, value as value_40, defaultArg, some } from \"../fable-library.3.2.7/Option.js\";\nimport { ofArray, toArray, map as map_1, length, singleton, append as append_1, tail as tail_1, head as head_1, isEmpty, ofSeq, empty, reverse, fold, tryLast, cons } from \"../fable-library.3.2.7/List.js\";\nimport { int16ToString, numberHash, mapCurriedArgs, compare, int32ToString, uncurry } from \"../fable-library.3.2.7/Util.js\";\nimport { map as map_2, tryFind, foldBack2, foldBack, fill, fold as fold_1 } from \"../fable-library.3.2.7/Array.js\";\nimport { contains, fold as fold_2, toList, append, reverse as reverse_1 } from \"../fable-library.3.2.7/Seq.js\";\nimport { empty as empty_1, map as map_3, tryFind as tryFind_1, add, ofSeq as ofSeq_1, ofList } from \"../fable-library.3.2.7/Map.js\";\nimport { getGenerics, getGenericTypeDefinition, makeTuple, getTupleElements, isTuple, isGenericType, parseEnum, getEnumValues, getEnumUnderlyingType, isEnum, getElementType, isArray, isUnion, makeRecord, getRecordElements, isRecord, fullName, getUnionCaseFields, makeUnion as makeUnion_1, getUnionCases, name as name_3, class_type } from \"../fable-library.3.2.7/Reflection.js\";\nimport { ofSeq as ofSeq_2 } from \"../fable-library.3.2.7/Set.js\";\n\nexport function Helpers_isUndefined(o) {\n    return (typeof o) === \"undefined\";\n}\n\nfunction genericMsg(msg, value_1, newLine) {\n    try {\n        return (((\"Expecting \" + msg) + \" but instead got:\") + (newLine ? \"\\n\" : \" \")) + (JSON.stringify(value_1, null, 4) + '');\n    }\n    catch (matchValue) {\n        return ((\"Expecting \" + msg) + \" but decoder failed. Couldn\\u0027t report given value due to circular structure.\") + (newLine ? \"\\n\" : \" \");\n    }\n}\n\nfunction errorToString(path, error) {\n    const reason_1 = (error.tag === 2) ? genericMsg(error.fields[0], error.fields[1], true) : ((error.tag === 1) ? ((genericMsg(error.fields[0], error.fields[1], false) + \"\\nReason: \") + error.fields[2]) : ((error.tag === 3) ? genericMsg(error.fields[0], error.fields[1], true) : ((error.tag === 4) ? (genericMsg(error.fields[0], error.fields[1], true) + ((\"\\nNode `\" + error.fields[2]) + \"` is unkown.\")) : ((error.tag === 5) ? (((\"Expecting \" + error.fields[0]) + \".\\n\") + (JSON.stringify(error.fields[1], null, 4) + '')) : ((error.tag === 7) ? (\"The following errors were found:\\n\\n\" + join(\"\\n\\n\", error.fields[0])) : ((error.tag === 6) ? (\"The following `failure` occurred with the decoder: \" + error.fields[0]) : genericMsg(error.fields[0], error.fields[1], false)))))));\n    if (error.tag === 7) {\n        return reason_1;\n    }\n    else {\n        return ((\"Error at: `\" + path) + \"`\\n\") + reason_1;\n    }\n}\n\nexport function fromValue(path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        const error = matchValue.fields[0];\n        return new FSharpResult$2(1, errorToString(error[0], error[1]));\n    }\n    else {\n        return new FSharpResult$2(0, matchValue.fields[0]);\n    }\n}\n\nexport function fromString(decoder, value_1) {\n    try {\n        return fromValue(\"$\", decoder, JSON.parse(value_1));\n    }\n    catch (matchValue) {\n        if (matchValue instanceof SyntaxError) {\n            return new FSharpResult$2(1, \"Given an invalid JSON: \" + matchValue.message);\n        }\n        else {\n            throw matchValue;\n        }\n    }\n}\n\nexport function unsafeFromString(decoder, value_1) {\n    const matchValue = fromString(decoder, value_1);\n    if (matchValue.tag === 1) {\n        throw (new Error(matchValue.fields[0]));\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\nexport function decodeValue(path, decoder) {\n    const decoder_1 = decoder;\n    return (value_1) => fromValue(path, decoder_1, value_1);\n}\n\nexport function decodeString(decoder) {\n    const decoder_1 = decoder;\n    return (value_1) => fromString(decoder_1, value_1);\n}\n\nexport function string(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a string\", value_1)]);\n    }\n}\n\nexport function guid(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = \"00000000-0000-0000-0000-000000000000\";\n        matchValue = [tryParse_2(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a guid\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a guid\", value_1)]);\n    }\n}\n\nexport function unit(path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"null\", value_1)]);\n    }\n}\n\nexport const sbyte = (path) => ((value_2) => {\n    const name_1 = \"a sbyte\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-128 <= value_4) ? (value_4 <= 127) : false) ? (new FSharpResult$2(0, (value_4 + 0x80 & 0xFF) - 0x80)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 8, new FSharpRef(() => outArg, (v) => {\n            outArg = (v | 0);\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const byte = (path) => ((value_2) => {\n    const name_1 = \"a byte\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 255) : false) ? (new FSharpResult$2(0, value_4 & 0xFF)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 8, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int16 = (path) => ((value_2) => {\n    const name_1 = \"an int16\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-32768 <= value_4) ? (value_4 <= 32767) : false) ? (new FSharpResult$2(0, (value_4 + 0x8000 & 0xFFFF) - 0x8000)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 16, new FSharpRef(() => outArg, (v) => {\n            outArg = (v | 0);\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint16 = (path) => ((value_2) => {\n    const name_1 = \"an uint16\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 65535) : false) ? (new FSharpResult$2(0, value_4 & 0xFFFF)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 16, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int = (path) => ((value_2) => {\n    const name_1 = \"an int\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-2147483648 <= value_4) ? (value_4 <= 2147483647) : false) ? (new FSharpResult$2(0, ~(~value_4))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n            outArg = (v | 0);\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint32 = (path) => ((value_2) => {\n    const name_1 = \"an uint32\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 4294967295) : false) ? (new FSharpResult$2(0, value_4 >>> 0)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 32, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int64 = (path) => ((value_2) => {\n    const name_1 = \"an int64\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((toNumber(fromBits(0, 2147483648, false)) <= value_4) ? (value_4 <= toNumber(fromBits(4294967295, 2147483647, false))) : false) ? (new FSharpResult$2(0, fromNumber(value_4, false))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = fromInt(0);\n        matchValue = [tryParse_4(value_3, 511, false, 64, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint64 = (path) => ((value_2) => {\n    const name_1 = \"an uint64\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((toNumber(fromBits(0, 0, true)) <= value_4) ? (value_4 <= toNumber(fromBits(4294967295, 4294967295, true))) : false) ? (new FSharpResult$2(0, fromNumber(value_4, true))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = fromInt(0);\n        matchValue = [tryParse_4(value_3, 511, true, 64, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport function bigint(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, fromInt32(value_1));\n    }\n    else if ((typeof value_1) === \"string\") {\n        try {\n            return new FSharpResult$2(0, parse(value_1));\n        }\n        catch (matchValue) {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a bigint\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a bigint\", value_1)]);\n    }\n}\n\nexport function bool(path, value_1) {\n    if ((typeof value_1) === \"boolean\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a boolean\", value_1)]);\n    }\n}\n\nexport function float(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a float\", value_1)]);\n    }\n}\n\nexport function float32(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a float32\", value_1)]);\n    }\n}\n\nexport function decimal(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, new Decimal(value_1));\n    }\n    else if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = new Decimal(0);\n        matchValue = [tryParse_5(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a decimal\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a decimal\", value_1)]);\n    }\n}\n\nexport function datetime(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = minValue();\n        matchValue = [tryParse_6(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, toUniversalTime(matchValue[1]));\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n    }\n}\n\nexport function datetimeOffset(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = minValue_1();\n        matchValue = [tryParse_7(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetimeoffset\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n    }\n}\n\nexport function timespan(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_8(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a timespan\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a timespan\", value_1)]);\n    }\n}\n\nfunction decodeMaybeNull(path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        if (value_1 == null) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else if (matchValue.tag === 1) {\n            return new FSharpResult$2(1, matchValue.fields[0]);\n        }\n        else {\n            throw (new Error(\"Match failure\"));\n        }\n    }\n    else {\n        return new FSharpResult$2(0, some(matchValue.fields[0]));\n    }\n}\n\nexport function optional(fieldName, decoder, path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        const fieldValue = value_1[fieldName];\n        if (Helpers_isUndefined(fieldValue)) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else {\n            return decodeMaybeNull((path + \".\") + fieldName, decoder, fieldValue);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(2, \"an object\", value_1)]);\n    }\n}\n\nfunction badPathError(fieldNames, currentPath, value_1) {\n    return new FSharpResult$2(1, [defaultArg(currentPath, join(\".\", cons(\"$\", fieldNames))), new ErrorReason(4, (\"an object with path `\" + join(\".\", fieldNames)) + \"`\", value_1, defaultArg(tryLast(fieldNames), \"\"))]);\n}\n\nexport function optionalAt(fieldNames, decoder, firstPath, firstValue) {\n    const _arg1 = fold(uncurry(2, (tupledArg) => {\n        const curPath = tupledArg[0];\n        const curValue = tupledArg[1];\n        const res = tupledArg[2];\n        return (field_1) => ((res == null) ? ((curValue == null) ? [curPath, curValue, new FSharpResult$2(0, void 0)] : ((curValue === null ? false : (Object.getPrototypeOf(curValue || false) === Object.prototype)) ? [(curPath + \".\") + field_1, curValue[field_1], void 0] : [curPath, curValue, new FSharpResult$2(1, [curPath, new ErrorReason(2, \"an object\", curValue)])])) : [curPath, curValue, res]);\n    }), [firstPath, firstValue, void 0], fieldNames);\n    if (_arg1[2] == null) {\n        const lastValue = _arg1[1];\n        if (Helpers_isUndefined(lastValue)) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else {\n            return decodeMaybeNull(_arg1[0], decoder, lastValue);\n        }\n    }\n    else {\n        return _arg1[2];\n    }\n}\n\nexport function field(fieldName, decoder, path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        const fieldValue = value_1[fieldName];\n        if (Helpers_isUndefined(fieldValue)) {\n            return new FSharpResult$2(1, [path, new ErrorReason(3, (\"an object with a field named `\" + fieldName) + \"`\", value_1)]);\n        }\n        else {\n            return decoder((path + \".\") + fieldName, fieldValue);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(2, \"an object\", value_1)]);\n    }\n}\n\nexport function at(fieldNames, decoder, firstPath, firstValue) {\n    const _arg1 = fold(uncurry(2, (tupledArg) => {\n        const curPath = tupledArg[0];\n        const curValue = tupledArg[1];\n        const res = tupledArg[2];\n        return (field_1) => {\n            if (res == null) {\n                if (curValue == null) {\n                    return [curPath, curValue, badPathError(fieldNames, curPath, firstValue)];\n                }\n                else if (curValue === null ? false : (Object.getPrototypeOf(curValue || false) === Object.prototype)) {\n                    const curValue_1 = curValue[field_1];\n                    return Helpers_isUndefined(curValue_1) ? [curPath, curValue_1, badPathError(fieldNames, void 0, firstValue)] : [(curPath + \".\") + field_1, curValue_1, void 0];\n                }\n                else {\n                    return [curPath, curValue, new FSharpResult$2(1, [curPath, new ErrorReason(2, \"an object\", curValue)])];\n                }\n            }\n            else {\n                return [curPath, curValue, res];\n            }\n        };\n    }), [firstPath, firstValue, void 0], fieldNames);\n    if (_arg1[2] == null) {\n        return decoder(_arg1[0], _arg1[1]);\n    }\n    else {\n        return _arg1[2];\n    }\n}\n\nexport function index(requestedIndex, decoder, path, value_1) {\n    let copyOfStruct;\n    const currentPath = ((path + \".[\") + int32ToString(requestedIndex)) + \"]\";\n    if (Array.isArray(value_1)) {\n        const vArray = value_1;\n        if (requestedIndex < vArray.length) {\n            return decoder(currentPath, vArray[requestedIndex]);\n        }\n        else {\n            return new FSharpResult$2(1, [currentPath, new ErrorReason(5, (((\"a longer array. Need index `\" + int32ToString(requestedIndex)) + \"` but there are only `\") + ((copyOfStruct = vArray.length, int32ToString(copyOfStruct)))) + \"` entries\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [currentPath, new ErrorReason(0, \"an array\", value_1)]);\n    }\n}\n\nexport function option(decoder, path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return Result_Map((arg0) => some(arg0), decoder(path, value_1));\n    }\n}\n\nexport function list(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        return Result_Map((list_1) => reverse(list_1), fold_1((acc, value_2) => {\n            i = ((i + 1) | 0);\n            if (acc.tag === 0) {\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    return new FSharpResult$2(0, cons(matchValue.fields[0], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), value_1));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a list\", value_1)]);\n    }\n}\n\nexport function seq(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        return Result_Map((source) => reverse_1(source), fold_1((acc, value_2) => {\n            i = ((i + 1) | 0);\n            if (acc.tag === 0) {\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    return new FSharpResult$2(0, append([matchValue.fields[0]], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, []), value_1));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a seq\", value_1)]);\n    }\n}\n\nexport function array(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        const tokens = value_1;\n        return fold_1((acc, value_2) => {\n            i = ((i + 1) | 0);\n            if (acc.tag === 0) {\n                const acc_1 = acc.fields[0];\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    acc_1[i] = matchValue.fields[0];\n                    return new FSharpResult$2(0, acc_1);\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, fill(new Array(tokens.length), 0, tokens.length, null)), tokens);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an array\", value_1)]);\n    }\n}\n\nexport function keys(path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        return new FSharpResult$2(0, ofSeq(Object.keys(value_1)));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n}\n\nexport function keyValuePairs(decoder, path, value_1) {\n    const matchValue = keys(path, value_1);\n    if (matchValue.tag === 1) {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n    else {\n        return Result_Map((list_2) => reverse(list_2), fold((acc, prop) => {\n            if (acc.tag === 0) {\n                const matchValue_1 = decoder(path, value_1[prop]);\n                if (matchValue_1.tag === 0) {\n                    return new FSharpResult$2(0, cons([prop, matchValue_1.fields[0]], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue_1.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), matchValue.fields[0]));\n    }\n}\n\nexport function oneOf(decoders, path, value_1) {\n    const runner = (decoders_1_mut, errors_mut) => {\n        runner:\n        while (true) {\n            const decoders_1 = decoders_1_mut, errors = errors_mut;\n            if (isEmpty(decoders_1)) {\n                return new FSharpResult$2(1, [path, new ErrorReason(7, errors)]);\n            }\n            else {\n                const matchValue = fromValue(path, uncurry(2, head_1(decoders_1)), value_1);\n                if (matchValue.tag === 1) {\n                    decoders_1_mut = tail_1(decoders_1);\n                    errors_mut = append_1(errors, singleton(matchValue.fields[0]));\n                    continue runner;\n                }\n                else {\n                    return new FSharpResult$2(0, matchValue.fields[0]);\n                }\n            }\n            break;\n        }\n    };\n    return runner(decoders, empty());\n}\n\nexport function nil(output, path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, output);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"null\", value_1)]);\n    }\n}\n\nexport function value(_arg1, v) {\n    return new FSharpResult$2(0, v);\n}\n\nexport function succeed(output, _arg2, _arg1) {\n    return new FSharpResult$2(0, output);\n}\n\nexport function fail(msg, path, _arg1) {\n    return new FSharpResult$2(1, [path, new ErrorReason(6, msg)]);\n}\n\nexport function andThen(cb, decoder, path, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 0) {\n        return cb(matchValue.fields[0], path, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n}\n\nexport function all(decoders, path, value_1) {\n    const runner = (decoders_1_mut, values_mut) => {\n        runner:\n        while (true) {\n            const decoders_1 = decoders_1_mut, values = values_mut;\n            if (isEmpty(decoders_1)) {\n                return new FSharpResult$2(0, values);\n            }\n            else {\n                const matchValue = head_1(decoders_1)(path)(value_1);\n                if (matchValue.tag === 1) {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n                else {\n                    decoders_1_mut = tail_1(decoders_1);\n                    values_mut = append_1(values, singleton(matchValue.fields[0]));\n                    continue runner;\n                }\n            }\n            break;\n        }\n    };\n    return runner(decoders, empty());\n}\n\nexport function map(ctor, d1, path, value_1) {\n    const matchValue = d1(path, value_1);\n    if (matchValue.tag === 1) {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(0, ctor(matchValue.fields[0]));\n    }\n}\n\nexport function map2(ctor, d1, d2, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0]));\n        }\n    }\n}\n\nexport function map3(ctor, d1, d2, d3, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0]));\n            }\n        }\n    }\n}\n\nexport function map4(ctor, d1, d2, d3, d4, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0]));\n                }\n            }\n        }\n    }\n}\n\nexport function map5(ctor, d1, d2, d3, d4, d5, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0]));\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map6(ctor, d1, d2, d3, d4, d5, d6, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0]));\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map7(ctor, d1, d2, d3, d4, d5, d6, d7, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            const copyOfStruct_6 = matchValue[6];\n                            if (copyOfStruct_6.tag === 1) {\n                                return new FSharpResult$2(1, copyOfStruct_6.fields[0]);\n                            }\n                            else {\n                                return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0], copyOfStruct_6.fields[0]));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map8(ctor, d1, d2, d3, d4, d5, d6, d7, d8, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1), d8(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            const copyOfStruct_6 = matchValue[6];\n                            if (copyOfStruct_6.tag === 1) {\n                                return new FSharpResult$2(1, copyOfStruct_6.fields[0]);\n                            }\n                            else {\n                                const copyOfStruct_7 = matchValue[7];\n                                if (copyOfStruct_7.tag === 1) {\n                                    return new FSharpResult$2(1, copyOfStruct_7.fields[0]);\n                                }\n                                else {\n                                    return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0], copyOfStruct_6.fields[0], copyOfStruct_7.fields[0]));\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function dict(decoder) {\n    let d1;\n    const decoder_1 = decoder;\n    d1 = ((path) => ((value_1) => keyValuePairs(decoder_1, path, value_1)));\n    return (path_1) => ((value_2) => map((elements) => ofList(elements), uncurry(2, d1), path_1, value_2));\n}\n\nfunction unwrapWith(errors, path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        void (errors.push(matchValue.fields[0]));\n        return null;\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\nexport class Getters$1 {\n    constructor(path, v) {\n        let _this, _this_1;\n        this.errors = [];\n        this.required = ((_this = this, {\n            Field(fieldName, decoder) {\n                return unwrapWith(_this.errors, path, (path_1, value_1) => field(fieldName, decoder, path_1, value_1), v);\n            },\n            At(fieldNames, decoder_2) {\n                return unwrapWith(_this.errors, path, (firstPath, firstValue) => at(fieldNames, decoder_2, firstPath, firstValue), v);\n            },\n            Raw(decoder_4) {\n                return unwrapWith(_this.errors, path, decoder_4, v);\n            },\n        }));\n        this.optional = ((_this_1 = this, {\n            Field(fieldName_1, decoder_5) {\n                return unwrapWith(_this_1.errors, path, (path_2, value_2) => optional(fieldName_1, decoder_5, path_2, value_2), v);\n            },\n            At(fieldNames_1, decoder_7) {\n                return unwrapWith(_this_1.errors, path, (firstPath_1, firstValue_1) => optionalAt(fieldNames_1, decoder_7, firstPath_1, firstValue_1), v);\n            },\n            Raw(decoder_9) {\n                const matchValue = decoder_9(path, v);\n                if (matchValue.tag === 1) {\n                    const reason = matchValue.fields[0][1];\n                    const error = matchValue.fields[0];\n                    let pattern_matching_result, v_2;\n                    switch (reason.tag) {\n                        case 1: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                            break;\n                        }\n                        case 2: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                            break;\n                        }\n                        case 3:\n                        case 4: {\n                            pattern_matching_result = 1;\n                            break;\n                        }\n                        case 5:\n                        case 6:\n                        case 7: {\n                            pattern_matching_result = 2;\n                            break;\n                        }\n                        default: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                        }\n                    }\n                    switch (pattern_matching_result) {\n                        case 0: {\n                            if (v_2 == null) {\n                                return void 0;\n                            }\n                            else {\n                                void (_this_1.errors.push(error));\n                                return null;\n                            }\n                        }\n                        case 1: {\n                            return void 0;\n                        }\n                        case 2: {\n                            void (_this_1.errors.push(error));\n                            return null;\n                        }\n                    }\n                }\n                else {\n                    return some(matchValue.fields[0]);\n                }\n            },\n        }));\n    }\n    get Required() {\n        const __ = this;\n        return __.required;\n    }\n    get Optional() {\n        const __ = this;\n        return __.optional;\n    }\n}\n\nexport function Getters$1$reflection(gen0) {\n    return class_type(\"Thoth.Json.Decode.Getters`1\", [gen0], Getters$1);\n}\n\nexport function Getters$1_$ctor_4A51B60E(path, v) {\n    return new Getters$1(path, v);\n}\n\nexport function Getters$1__get_Errors(__) {\n    return toList(__.errors);\n}\n\nexport function object(builder, path, v) {\n    const getters = Getters$1_$ctor_4A51B60E(path, v);\n    const result = builder(getters);\n    const matchValue = Getters$1__get_Errors(getters);\n    if (!isEmpty(matchValue)) {\n        const errors = matchValue;\n        if (length(errors) > 1) {\n            return new FSharpResult$2(1, [path, new ErrorReason(7, map_1((tupledArg) => errorToString(tupledArg[0], tupledArg[1]), errors))]);\n        }\n        else {\n            return new FSharpResult$2(1, head_1(matchValue));\n        }\n    }\n    else {\n        return new FSharpResult$2(0, result);\n    }\n}\n\nexport function tuple2(decoder1, decoder2) {\n    let decoder_3;\n    const decoder = decoder1;\n    decoder_3 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_3) => ((value_4) => andThen(uncurry(3, (v1) => {\n        let decoder_2;\n        const decoder_1 = decoder2;\n        decoder_2 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_2) => ((value_3) => andThen((v2, arg10$0040, arg20$0040) => succeed([v1, v2], arg10$0040, arg20$0040), uncurry(2, decoder_2), path_2, value_3));\n    }), uncurry(2, decoder_3), path_3, value_4));\n}\n\nexport function tuple3(decoder1, decoder2, decoder3) {\n    let decoder_5;\n    const decoder = decoder1;\n    decoder_5 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_5) => ((value_6) => andThen(uncurry(3, (v1) => {\n        let decoder_4;\n        const decoder_1 = decoder2;\n        decoder_4 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_4) => ((value_5) => andThen(uncurry(3, (v2) => {\n            let decoder_3;\n            const decoder_2 = decoder3;\n            decoder_3 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_3) => ((value_4) => andThen((v3, arg10$0040, arg20$0040) => succeed([v1, v2, v3], arg10$0040, arg20$0040), uncurry(2, decoder_3), path_3, value_4));\n        }), uncurry(2, decoder_4), path_4, value_5));\n    }), uncurry(2, decoder_5), path_5, value_6));\n}\n\nexport function tuple4(decoder1, decoder2, decoder3, decoder4) {\n    let decoder_7;\n    const decoder = decoder1;\n    decoder_7 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_7) => ((value_8) => andThen(uncurry(3, (v1) => {\n        let decoder_6;\n        const decoder_1 = decoder2;\n        decoder_6 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_6) => ((value_7) => andThen(uncurry(3, (v2) => {\n            let decoder_5;\n            const decoder_2 = decoder3;\n            decoder_5 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_5) => ((value_6) => andThen(uncurry(3, (v3) => {\n                let decoder_4;\n                const decoder_3 = decoder4;\n                decoder_4 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_4) => ((value_5) => andThen((v4, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4], arg10$0040, arg20$0040), uncurry(2, decoder_4), path_4, value_5));\n            }), uncurry(2, decoder_5), path_5, value_6));\n        }), uncurry(2, decoder_6), path_6, value_7));\n    }), uncurry(2, decoder_7), path_7, value_8));\n}\n\nexport function tuple5(decoder1, decoder2, decoder3, decoder4, decoder5) {\n    let decoder_9;\n    const decoder = decoder1;\n    decoder_9 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_9) => ((value_10) => andThen(uncurry(3, (v1) => {\n        let decoder_8;\n        const decoder_1 = decoder2;\n        decoder_8 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_8) => ((value_9) => andThen(uncurry(3, (v2) => {\n            let decoder_7;\n            const decoder_2 = decoder3;\n            decoder_7 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_7) => ((value_8) => andThen(uncurry(3, (v3) => {\n                let decoder_6;\n                const decoder_3 = decoder4;\n                decoder_6 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_6) => ((value_7) => andThen(uncurry(3, (v4) => {\n                    let decoder_5;\n                    const decoder_4 = decoder5;\n                    decoder_5 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_5) => ((value_6) => andThen((v5, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5], arg10$0040, arg20$0040), uncurry(2, decoder_5), path_5, value_6));\n                }), uncurry(2, decoder_6), path_6, value_7));\n            }), uncurry(2, decoder_7), path_7, value_8));\n        }), uncurry(2, decoder_8), path_8, value_9));\n    }), uncurry(2, decoder_9), path_9, value_10));\n}\n\nexport function tuple6(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6) {\n    let decoder_11;\n    const decoder = decoder1;\n    decoder_11 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_11) => ((value_12) => andThen(uncurry(3, (v1) => {\n        let decoder_10;\n        const decoder_1 = decoder2;\n        decoder_10 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_10) => ((value_11) => andThen(uncurry(3, (v2) => {\n            let decoder_9;\n            const decoder_2 = decoder3;\n            decoder_9 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_9) => ((value_10) => andThen(uncurry(3, (v3) => {\n                let decoder_8;\n                const decoder_3 = decoder4;\n                decoder_8 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_8) => ((value_9) => andThen(uncurry(3, (v4) => {\n                    let decoder_7;\n                    const decoder_4 = decoder5;\n                    decoder_7 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_7) => ((value_8) => andThen(uncurry(3, (v5) => {\n                        let decoder_6;\n                        const decoder_5 = decoder6;\n                        decoder_6 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_6) => ((value_7) => andThen((v6, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6], arg10$0040, arg20$0040), uncurry(2, decoder_6), path_6, value_7));\n                    }), uncurry(2, decoder_7), path_7, value_8));\n                }), uncurry(2, decoder_8), path_8, value_9));\n            }), uncurry(2, decoder_9), path_9, value_10));\n        }), uncurry(2, decoder_10), path_10, value_11));\n    }), uncurry(2, decoder_11), path_11, value_12));\n}\n\nexport function tuple7(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7) {\n    let decoder_13;\n    const decoder = decoder1;\n    decoder_13 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_13) => ((value_14) => andThen(uncurry(3, (v1) => {\n        let decoder_12;\n        const decoder_1 = decoder2;\n        decoder_12 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_12) => ((value_13) => andThen(uncurry(3, (v2) => {\n            let decoder_11;\n            const decoder_2 = decoder3;\n            decoder_11 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_11) => ((value_12) => andThen(uncurry(3, (v3) => {\n                let decoder_10;\n                const decoder_3 = decoder4;\n                decoder_10 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_10) => ((value_11) => andThen(uncurry(3, (v4) => {\n                    let decoder_9;\n                    const decoder_4 = decoder5;\n                    decoder_9 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_9) => ((value_10) => andThen(uncurry(3, (v5) => {\n                        let decoder_8;\n                        const decoder_5 = decoder6;\n                        decoder_8 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_8) => ((value_9) => andThen(uncurry(3, (v6) => {\n                            let decoder_7;\n                            const decoder_6 = decoder7;\n                            decoder_7 = ((path_6) => ((value_7) => index(6, decoder_6, path_6, value_7)));\n                            return (path_7) => ((value_8) => andThen((v7, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6, v7], arg10$0040, arg20$0040), uncurry(2, decoder_7), path_7, value_8));\n                        }), uncurry(2, decoder_8), path_8, value_9));\n                    }), uncurry(2, decoder_9), path_9, value_10));\n                }), uncurry(2, decoder_10), path_10, value_11));\n            }), uncurry(2, decoder_11), path_11, value_12));\n        }), uncurry(2, decoder_12), path_12, value_13));\n    }), uncurry(2, decoder_13), path_13, value_14));\n}\n\nexport function tuple8(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7, decoder8) {\n    let decoder_15;\n    const decoder = decoder1;\n    decoder_15 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_15) => ((value_16) => andThen(uncurry(3, (v1) => {\n        let decoder_14;\n        const decoder_1 = decoder2;\n        decoder_14 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_14) => ((value_15) => andThen(uncurry(3, (v2) => {\n            let decoder_13;\n            const decoder_2 = decoder3;\n            decoder_13 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_13) => ((value_14) => andThen(uncurry(3, (v3) => {\n                let decoder_12;\n                const decoder_3 = decoder4;\n                decoder_12 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_12) => ((value_13) => andThen(uncurry(3, (v4) => {\n                    let decoder_11;\n                    const decoder_4 = decoder5;\n                    decoder_11 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_11) => ((value_12) => andThen(uncurry(3, (v5) => {\n                        let decoder_10;\n                        const decoder_5 = decoder6;\n                        decoder_10 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_10) => ((value_11) => andThen(uncurry(3, (v6) => {\n                            let decoder_9;\n                            const decoder_6 = decoder7;\n                            decoder_9 = ((path_6) => ((value_7) => index(6, decoder_6, path_6, value_7)));\n                            return (path_9) => ((value_10) => andThen(uncurry(3, (v7) => {\n                                let decoder_8;\n                                const decoder_7 = decoder8;\n                                decoder_8 = ((path_7) => ((value_8) => index(7, decoder_7, path_7, value_8)));\n                                return (path_8) => ((value_9) => andThen((v8, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6, v7, v8], arg10$0040, arg20$0040), uncurry(2, decoder_8), path_8, value_9));\n                            }), uncurry(2, decoder_9), path_9, value_10));\n                        }), uncurry(2, decoder_10), path_10, value_11));\n                    }), uncurry(2, decoder_11), path_11, value_12));\n                }), uncurry(2, decoder_12), path_12, value_13));\n            }), uncurry(2, decoder_13), path_13, value_14));\n        }), uncurry(2, decoder_14), path_14, value_15));\n    }), uncurry(2, decoder_15), path_15, value_16));\n}\n\nfunction toMap(xs) {\n    return ofSeq_1(xs);\n}\n\nfunction toSet(xs) {\n    return ofSeq_2(xs, {\n        Compare: (x, y) => compare(x, y),\n    });\n}\n\nfunction autoObject(decoderInfos, path, value_1) {\n    if (!(value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype))) {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n    else {\n        return foldBack(uncurry(2, (tupledArg) => {\n            const name = tupledArg[0];\n            return (acc) => ((acc.tag === 0) ? Result_Map((v) => cons(v, acc.fields[0]), tupledArg[1]((path + \".\") + name)(value_1[name])) : acc);\n        }), decoderInfos, new FSharpResult$2(0, empty()));\n    }\n}\n\nfunction autoObject2(keyDecoder, valueDecoder, path, value_1) {\n    if (!(value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype))) {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n    else {\n        return fold_2((acc, name) => {\n            if (acc.tag === 0) {\n                const matchValue = keyDecoder(path, name);\n                if (matchValue.tag === 0) {\n                    const _arg1 = valueDecoder((path + \".\") + name, value_1[name]);\n                    if (_arg1.tag === 0) {\n                        return new FSharpResult$2(0, cons([matchValue.fields[0], _arg1.fields[0]], acc.fields[0]));\n                    }\n                    else {\n                        return new FSharpResult$2(1, _arg1.fields[0]);\n                    }\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), Object.keys(value_1));\n    }\n}\n\nfunction mixedArray(msg, decoders, path, values) {\n    let arg30, arg10;\n    if (decoders.length !== values.length) {\n        return new FSharpResult$2(1, [path, new ErrorReason(6, (arg30 = (values.length | 0), (arg10 = (decoders.length | 0), toText(printf(\"Expected %i %s but got %i\"))(arg10)(msg)(arg30))))]);\n    }\n    else {\n        return foldBack2(uncurry(3, mapCurriedArgs((value_1) => ((decoder) => ((acc) => ((acc.tag === 0) ? Result_Map((v) => cons(v, acc.fields[0]), decoder(path, value_1)) : acc))), [0, [0, 2], 0])), values, decoders, new FSharpResult$2(0, empty()));\n    }\n}\n\nfunction makeUnion(extra, caseStrategy, t, name, path, values) {\n    const uci = tryFind((x) => (name_3(x) === name), getUnionCases(t, true));\n    if (uci != null) {\n        const uci_1 = uci;\n        if (values.length === 0) {\n            return new FSharpResult$2(0, makeUnion_1(uci_1, [], true));\n        }\n        else {\n            return Result_Map((values_1) => makeUnion_1(uci_1, toArray(values_1), true), mixedArray(\"union fields\", map_2((fi) => autoDecoder(extra, caseStrategy, false, fi[1]), getUnionCaseFields(uci_1)), path, values));\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(6, ((\"Cannot find case \" + name) + \" in \") + fullName(t))]);\n    }\n}\n\nfunction autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t) {\n    const decoderRef = new FSharpRef(null);\n    const extra_1 = add(fullName(t), decoderRef, extra);\n    let decoder;\n    if (isRecord(t, true)) {\n        const decoders = map_2((fi) => [Util_Casing_convert(caseStrategy, name_3(fi)), autoDecoder(extra_1, caseStrategy, false, fi[1])], getRecordElements(t, true));\n        decoder = ((path) => ((value_1) => Result_Map((xs) => makeRecord(t, toArray(xs), true), autoObject(decoders, path, value_1))));\n    }\n    else if (isUnion(t, true)) {\n        decoder = ((path_1) => ((value_2) => {\n            if ((typeof value_2) === \"string\") {\n                return makeUnion(extra_1, caseStrategy, t, value_2, path_1, []);\n            }\n            else if (Array.isArray(value_2)) {\n                const values = value_2;\n                return makeUnion(extra_1, caseStrategy, t, values[0], path_1, values.slice(1, values.length));\n            }\n            else {\n                return new FSharpResult$2(1, [path_1, new ErrorReason(0, \"a string or array\", value_2)]);\n            }\n        }));\n    }\n    else if (isOptional) {\n        decoder = ((path_2) => ((value_3) => (new FSharpResult$2(1, [path_2, new ErrorReason(2, \"an extra coder for \" + fullName(t), value_3)]))));\n    }\n    else {\n        let message;\n        const arg10 = fullName(t);\n        message = toText(printf(\"Cannot generate auto decoder for %s. Please pass an extra decoder.\"))(arg10);\n        throw (new Error(message));\n    }\n    decoderRef.contents = decoder;\n    return decoder;\n}\n\nfunction autoDecoder(extra, caseStrategy, isOptional, t) {\n    let decoder_15;\n    const fullname = fullName(t);\n    const matchValue = tryFind_1(fullname, extra);\n    if (matchValue == null) {\n        if (isArray(t)) {\n            const decoder = autoDecoder(extra, caseStrategy, false, getElementType(t));\n            return (path_1) => ((value_2) => array(uncurry(2, decoder), path_1, value_2));\n        }\n        else if (isEnum(t)) {\n            const enumType = fullName(getEnumUnderlyingType(t));\n            if (enumType === \"System.SByte\") {\n                return (path_2) => ((value_4) => {\n                    const t_2 = t;\n                    const path_3 = path_2;\n                    const value_5 = value_4;\n                    const matchValue_1 = sbyte(path_3)(value_5);\n                    if (matchValue_1.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_1.fields[0]);\n                    }\n                    else {\n                        const enumValue = matchValue_1.fields[0];\n                        return contains(enumValue, getEnumValues(t_2), {\n                            Equals: (x, y) => (x === y),\n                            GetHashCode: (x) => numberHash(x),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_2, enumValue.toString()))) : (new FSharpResult$2(1, [path_3, new ErrorReason(1, fullName(t_2), value_5, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Byte\") {\n                return (path_4) => ((value_7) => {\n                    const t_3 = t;\n                    const path_5 = path_4;\n                    const value_8 = value_7;\n                    const matchValue_2 = byte(path_5)(value_8);\n                    if (matchValue_2.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_2.fields[0]);\n                    }\n                    else {\n                        const enumValue_1 = matchValue_2.fields[0];\n                        return contains(enumValue_1, getEnumValues(t_3), {\n                            Equals: (x_1, y_1) => (x_1 === y_1),\n                            GetHashCode: (x_1) => numberHash(x_1),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_3, enumValue_1.toString()))) : (new FSharpResult$2(1, [path_5, new ErrorReason(1, fullName(t_3), value_8, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Int16\") {\n                return (path_6) => ((value_10) => {\n                    const t_4 = t;\n                    const path_7 = path_6;\n                    const value_11 = value_10;\n                    const matchValue_3 = int16(path_7)(value_11);\n                    if (matchValue_3.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_3.fields[0]);\n                    }\n                    else {\n                        const enumValue_2 = matchValue_3.fields[0];\n                        return contains(enumValue_2, getEnumValues(t_4), {\n                            Equals: (x_2, y_2) => (x_2 === y_2),\n                            GetHashCode: (x_2) => numberHash(x_2),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_4, int16ToString(enumValue_2)))) : (new FSharpResult$2(1, [path_7, new ErrorReason(1, fullName(t_4), value_11, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.UInt16\") {\n                return (path_8) => ((value_13) => {\n                    const t_5 = t;\n                    const path_9 = path_8;\n                    const value_14 = value_13;\n                    const matchValue_4 = uint16(path_9)(value_14);\n                    if (matchValue_4.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_4.fields[0]);\n                    }\n                    else {\n                        const enumValue_3 = matchValue_4.fields[0];\n                        return contains(enumValue_3, getEnumValues(t_5), {\n                            Equals: (x_3, y_3) => (x_3 === y_3),\n                            GetHashCode: (x_3) => numberHash(x_3),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_5, enumValue_3.toString()))) : (new FSharpResult$2(1, [path_9, new ErrorReason(1, fullName(t_5), value_14, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Int32\") {\n                return (path_10) => ((value_16) => {\n                    const t_6 = t;\n                    const path_11 = path_10;\n                    const value_17 = value_16;\n                    const matchValue_5 = int(path_11)(value_17);\n                    if (matchValue_5.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_5.fields[0]);\n                    }\n                    else {\n                        const enumValue_4 = matchValue_5.fields[0];\n                        return contains(enumValue_4, getEnumValues(t_6), {\n                            Equals: (x_4, y_4) => (x_4 === y_4),\n                            GetHashCode: (x_4) => numberHash(x_4),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_6, int32ToString(enumValue_4)))) : (new FSharpResult$2(1, [path_11, new ErrorReason(1, fullName(t_6), value_17, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.UInt32\") {\n                return (path_12) => ((value_19) => {\n                    const t_7 = t;\n                    const path_13 = path_12;\n                    const value_20 = value_19;\n                    const matchValue_6 = uint32(path_13)(value_20);\n                    if (matchValue_6.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_6.fields[0]);\n                    }\n                    else {\n                        const enumValue_5 = matchValue_6.fields[0];\n                        return contains(enumValue_5, getEnumValues(t_7), {\n                            Equals: (x_5, y_5) => (x_5 === y_5),\n                            GetHashCode: (x_5) => numberHash(x_5),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_7, enumValue_5.toString()))) : (new FSharpResult$2(1, [path_13, new ErrorReason(1, fullName(t_7), value_20, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else {\n                const arg10 = fullName(t);\n                const clo2 = toFail(printf(\"Cannot generate auto decoder for %s.\\nThoth.Json.Net only support the folluwing enum types:\\n- sbyte\\n- byte\\n- int16\\n- uint16\\n- int\\n- uint32\\nIf you can\\u0027t use one of these types, please pass an extra decoder.\\n                    \"))(arg10);\n                return (arg20) => {\n                    const clo3 = clo2(arg20);\n                    return (arg30) => clo3(arg30);\n                };\n            }\n        }\n        else if (isGenericType(t)) {\n            if (isTuple(t)) {\n                const decoders = map_2((t_8) => autoDecoder(extra, caseStrategy, false, t_8), getTupleElements(t));\n                return (path_14) => ((value_21) => (Array.isArray(value_21) ? Result_Map((xs) => makeTuple(toArray(xs), t), mixedArray(\"tuple elements\", decoders, path_14, value_21)) : (new FSharpResult$2(1, [path_14, new ErrorReason(0, \"an array\", value_21)]))));\n            }\n            else {\n                const fullname_1 = fullName(getGenericTypeDefinition(t));\n                if (fullname_1 === \"Microsoft.FSharp.Core.FSharpOption`1[System.Object]\") {\n                    const decoder_13 = autoDecoder(extra, caseStrategy, true, getGenerics(t)[0]);\n                    return (path_15) => ((value_22) => option(uncurry(2, decoder_13), path_15, value_22));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpList`1[System.Object]\") {\n                    const decoder_14 = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    return (path_16) => ((value_23) => list(uncurry(2, decoder_14), path_16, value_23));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpMap`2[System.Object,System.Object]\") {\n                    const keyDecoder = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    const valueDecoder = autoDecoder(extra, caseStrategy, false, getGenerics(t)[1]);\n                    let d1;\n                    const decoders_1 = ofArray([(path_17) => ((value_24) => autoObject2(uncurry(2, keyDecoder), uncurry(2, valueDecoder), path_17, value_24)), (decoder_15 = tuple2(uncurry(2, keyDecoder), uncurry(2, valueDecoder)), (path_18) => ((value_25) => list(uncurry(2, decoder_15), path_18, value_25)))]);\n                    d1 = ((path_19) => ((value_26) => oneOf(decoders_1, path_19, value_26)));\n                    return (path_20) => ((value_28) => map((ar) => toMap(ar), uncurry(2, d1), path_20, value_28));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpSet`1[System.Object]\") {\n                    const decoder_16 = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    return (path_21) => ((value_29) => {\n                        const matchValue_7 = array(uncurry(2, decoder_16), path_21, value_29);\n                        return (matchValue_7.tag === 0) ? (new FSharpResult$2(0, toSet(matchValue_7.fields[0]))) : (new FSharpResult$2(1, matchValue_7.fields[0]));\n                    });\n                }\n                else {\n                    return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\n                }\n            }\n        }\n        else if (fullname === \"System.Boolean\") {\n            return (path_22) => ((value_31) => bool(path_22, value_31));\n        }\n        else if (fullname === \"Microsoft.FSharp.Core.Unit\") {\n            return (path_23) => ((value_32) => unit(path_23, value_32));\n        }\n        else if (fullname === \"System.String\") {\n            return (path_24) => ((value_33) => string(path_24, value_33));\n        }\n        else if (fullname === \"System.SByte\") {\n            return sbyte;\n        }\n        else if (fullname === \"System.Byte\") {\n            return byte;\n        }\n        else if (fullname === \"System.Int16\") {\n            return int16;\n        }\n        else if (fullname === \"System.UInt16\") {\n            return uint16;\n        }\n        else if (fullname === \"System.Int32\") {\n            return int;\n        }\n        else if (fullname === \"System.UInt32\") {\n            return uint32;\n        }\n        else if (fullname === \"System.Double\") {\n            return (path_25) => ((value_34) => float(path_25, value_34));\n        }\n        else if (fullname === \"System.Single\") {\n            return (path_26) => ((value_35) => float32(path_26, value_35));\n        }\n        else if (fullname === \"System.DateTime\") {\n            return (path_27) => ((value_36) => datetime(path_27, value_36));\n        }\n        else if (fullname === \"System.DateTimeOffset\") {\n            return (path_28) => ((value_37) => datetimeOffset(path_28, value_37));\n        }\n        else if (fullname === \"System.TimeSpan\") {\n            return (path_29) => ((value_38) => timespan(path_29, value_38));\n        }\n        else if (fullname === \"System.Guid\") {\n            return (path_30) => ((value_39) => guid(path_30, value_39));\n        }\n        else if (fullname === \"System.Object\") {\n            return (_arg1_6) => ((v) => (new FSharpResult$2(0, v)));\n        }\n        else {\n            return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\n        }\n    }\n    else {\n        const decoderRef = matchValue;\n        return (path) => ((value_1) => decoderRef.contents(path)(value_1));\n    }\n}\n\nfunction makeExtra(extra) {\n    if (extra != null) {\n        return map_3((_arg2, tupledArg) => (new FSharpRef(tupledArg[1])), extra.Coders);\n    }\n    else {\n        return empty_1();\n    }\n}\n\nexport class Auto {\n    constructor() {\n    }\n}\n\nexport function Auto$reflection() {\n    return class_type(\"Thoth.Json.Decode.Auto\", void 0, Auto);\n}\n\nexport function Auto_generateDecoderCached_7848D058(caseStrategy, extra, resolver) {\n    let y_1, y;\n    const t = value_40(resolver).ResolveType();\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    return Util_Cache$1__GetOrAdd_43981464(Util_CachedDecoders, (y_1 = ((y = fullName(t), toString_12(caseStrategy_1) + y)), defaultArg(map_4((e) => e.Hash, extra), \"\") + y_1), () => autoDecoder(makeExtra(extra), caseStrategy_1, false, t));\n}\n\nexport function Auto_generateDecoder_7848D058(caseStrategy, extra, resolver) {\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    const t = value_40(resolver).ResolveType();\n    return autoDecoder(makeExtra(extra), caseStrategy_1, false, t);\n}\n\nexport function Auto_fromString_Z5CB6BD(json, caseStrategy, extra, resolver) {\n    return fromString(uncurry(2, Auto_generateDecoder_7848D058(caseStrategy, extra, resolver)), json);\n}\n\nexport function Auto_unsafeFromString_Z5CB6BD(json, caseStrategy, extra, resolver) {\n    const matchValue = fromString(uncurry(2, Auto_generateDecoder_7848D058(caseStrategy, extra, resolver)), json);\n    if (matchValue.tag === 1) {\n        throw (new Error(matchValue.fields[0]));\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\n","import { toString as toString_1 } from \"../fable-library.3.2.7/Decimal.js\";\nimport { Lazy, mapCurriedArgs, uncurry, getEnumerator } from \"../fable-library.3.2.7/Util.js\";\nimport { empty, map as map_3, tryFind, add, toList } from \"../fable-library.3.2.7/Map.js\";\nimport { toString as toString_2 } from \"../fable-library.3.2.7/BigInt.js\";\nimport { toString as toString_3 } from \"../fable-library.3.2.7/Date.js\";\nimport { toString as toString_4 } from \"../fable-library.3.2.7/TimeSpan.js\";\nimport { defaultArg, value as value_34, map, defaultArgWith, some } from \"../fable-library.3.2.7/Option.js\";\nimport { toString as toString_5, FSharpRef } from \"../fable-library.3.2.7/Types.js\";\nimport { class_type, getGenerics, getGenericTypeDefinition, getTupleFields, getTupleElements, isTuple, isGenericType, getEnumUnderlyingType, isEnum, getElementType, isArray, getUnionCaseFields, getUnionFields, isUnion, getRecordElements, getRecordField, name, isRecord, fullName } from \"../fable-library.3.2.7/Reflection.js\";\nimport { fill, map as map_1 } from \"../fable-library.3.2.7/Array.js\";\nimport { Util_CachedEncoders, Util_Cache$1__GetOrAdd_43981464, CaseStrategy, Util_Casing_convert } from \"./Types.fs.js\";\nimport { mapIndexed, map as map_2, fold } from \"../fable-library.3.2.7/Seq.js\";\nimport { toFail, printf, toText } from \"../fable-library.3.2.7/String.js\";\n\nexport function guid(value) {\n    return value;\n}\n\nexport function decimal(value) {\n    return toString_1(value);\n}\n\nexport const nil = null;\n\nexport function object(values) {\n    const o = {};\n    const enumerator = getEnumerator(values);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            o[forLoopVar[0]] = forLoopVar[1];\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return o;\n}\n\nexport function list(values) {\n    return Array.from(values);\n}\n\nexport function seq(values) {\n    return Array.from(values);\n}\n\nexport function dict(values) {\n    return object(toList(values));\n}\n\nexport function bigint(value) {\n    return toString_2(value);\n}\n\nexport function datetimeOffset(value) {\n    return toString_3(value, \"O\", {});\n}\n\nexport function timespan(value) {\n    return toString_4(value);\n}\n\nexport function sbyte(value) {\n    return String(value);\n}\n\nexport function byte(value) {\n    return String(value);\n}\n\nexport function int16(value) {\n    return String(value);\n}\n\nexport function uint16(value) {\n    return String(value);\n}\n\nexport function int64(value) {\n    return String(value);\n}\n\nexport function uint64(value) {\n    return String(value);\n}\n\nexport function unit() {\n    return null;\n}\n\nexport function tuple2(enc1, enc2, v1, v2) {\n    return [enc1(v1), enc2(v2)];\n}\n\nexport function tuple3(enc1, enc2, enc3, v1, v2, v3) {\n    return [enc1(v1), enc2(v2), enc3(v3)];\n}\n\nexport function tuple4(enc1, enc2, enc3, enc4, v1, v2, v3, v4) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4)];\n}\n\nexport function tuple5(enc1, enc2, enc3, enc4, enc5, v1, v2, v3, v4, v5) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5)];\n}\n\nexport function tuple6(enc1, enc2, enc3, enc4, enc5, enc6, v1, v2, v3, v4, v5, v6) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6)];\n}\n\nexport function tuple7(enc1, enc2, enc3, enc4, enc5, enc6, enc7, v1, v2, v3, v4, v5, v6, v7) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6), enc7(v7)];\n}\n\nexport function tuple8(enc1, enc2, enc3, enc4, enc5, enc6, enc7, enc8, v1, v2, v3, v4, v5, v6, v7, v8) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6), enc7(v7), enc8(v8)];\n}\n\nexport function Enum_byte(value) {\n    return byte(value);\n}\n\nexport function Enum_sbyte(value) {\n    return sbyte(value);\n}\n\nexport function Enum_int16(value) {\n    return int16(value);\n}\n\nexport function Enum_uint16(value) {\n    return uint16(value);\n}\n\nexport function Enum_int(value) {\n    return value;\n}\n\nexport function Enum_uint32(value) {\n    return value;\n}\n\nexport function datetime(value) {\n    return toString_3(value, \"O\", {});\n}\n\nexport function toString(space, value) {\n    return JSON.stringify(value, uncurry(2, null), some(space));\n}\n\nexport function option(encoder) {\n    return (arg) => defaultArgWith(map(encoder, arg), () => nil);\n}\n\nfunction autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t) {\n    const encoderRef = new FSharpRef(null);\n    const extra_1 = add(fullName(t), encoderRef, extra);\n    let encoder;\n    if (isRecord(t, true)) {\n        const setters = map_1((fi) => {\n            const targetKey = Util_Casing_convert(caseStrategy, name(fi));\n            const encode_1 = autoEncoder(extra_1, caseStrategy, skipNullField, fi[1]);\n            return (source) => ((target) => {\n                const value = getRecordField(source, fi);\n                if ((!skipNullField) ? true : (skipNullField ? (!(value == null)) : false)) {\n                    target[targetKey]=encode_1(value);\n                }\n                return target;\n            });\n        }, getRecordElements(t, true));\n        encoder = ((source_1) => fold(uncurry(2, mapCurriedArgs((target_1) => ((set$) => set$(source_1, target_1)), [0, [0, 2]])), {}, setters));\n    }\n    else if (isUnion(t, true)) {\n        encoder = ((value_1) => {\n            const patternInput = getUnionFields(value_1, t, true);\n            const info = patternInput[0];\n            const fields = patternInput[1];\n            const matchValue = fields.length | 0;\n            if (matchValue === 0) {\n                return name(info);\n            }\n            else {\n                const len = matchValue | 0;\n                const fieldTypes = getUnionCaseFields(info);\n                const target_2 = fill(new Array(len + 1), 0, len + 1, null);\n                target_2[0] = name(info);\n                for (let i = 1; i <= len; i++) {\n                    const encode_2 = autoEncoder(extra_1, caseStrategy, skipNullField, fieldTypes[i - 1][1]);\n                    target_2[i] = encode_2(fields[i - 1]);\n                }\n                return target_2;\n            }\n        });\n    }\n    else {\n        let message;\n        const arg10 = fullName(t);\n        message = toText(printf(\"Cannot generate auto encoder for %s. Please pass an extra encoder.\"))(arg10);\n        throw (new Error(message));\n    }\n    encoderRef.contents = encoder;\n    return encoder;\n}\n\nfunction autoEncoder(extra, caseStrategy, skipNullField, t) {\n    const fullname = fullName(t);\n    const matchValue = tryFind(fullname, extra);\n    if (matchValue == null) {\n        if (isArray(t)) {\n            const encoder = autoEncoder(extra, caseStrategy, skipNullField, getElementType(t));\n            return (value) => seq(map_2(encoder, value));\n        }\n        else if (isEnum(t)) {\n            const enumType = fullName(getEnumUnderlyingType(t));\n            if (enumType === \"System.SByte\") {\n                return (value_1) => sbyte(value_1);\n            }\n            else if (enumType === \"System.Byte\") {\n                return (value_2) => byte(value_2);\n            }\n            else if (enumType === \"System.Int16\") {\n                return (value_3) => int16(value_3);\n            }\n            else if (enumType === \"System.UInt16\") {\n                return (value_4) => uint16(value_4);\n            }\n            else if (enumType === \"System.Int32\") {\n                return (value_5) => value_5;\n            }\n            else if (enumType === \"System.UInt32\") {\n                return (value_7) => value_7;\n            }\n            else {\n                const arg10 = fullName(t);\n                const clo2 = toFail(printf(\"Cannot generate auto encoder for %s.\\nThoth.Json.Net only support the folluwing enum types:\\n- sbyte\\n- byte\\n- int16\\n- uint16\\n- int\\n- uint32\\nIf you can\\u0027t use one of these types, please pass an extra encoder.\\n                    \"))(arg10);\n                return (arg20) => clo2(arg20);\n            }\n        }\n        else if (isGenericType(t)) {\n            if (isTuple(t)) {\n                const encoders = map_1((t_2) => autoEncoder(extra, caseStrategy, skipNullField, t_2), getTupleElements(t));\n                return (value_9) => seq(mapIndexed((i, x) => encoders[i](x), getTupleFields(value_9)));\n            }\n            else {\n                const fullname_1 = fullName(getGenericTypeDefinition(t));\n                if (fullname_1 === \"Microsoft.FSharp.Core.FSharpOption`1[System.Object]\") {\n                    const encoder_2 = new Lazy(() => option(autoEncoder(extra, caseStrategy, skipNullField, getGenerics(t)[0])));\n                    return (value_10) => {\n                        if (value_10 == null) {\n                            return nil;\n                        }\n                        else {\n                            return encoder_2.Value(value_10);\n                        }\n                    };\n                }\n                else if ((fullname_1 === \"Microsoft.FSharp.Collections.FSharpList`1[System.Object]\") ? true : (fullname_1 === \"Microsoft.FSharp.Collections.FSharpSet`1[System.Object]\")) {\n                    const encoder_3 = autoEncoder(extra, caseStrategy, skipNullField, getGenerics(t)[0]);\n                    return (value_11) => seq(map_2(encoder_3, value_11));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpMap`2[System.Object,System.Object]\") {\n                    const keyType = getGenerics(t)[0];\n                    const valueEncoder = autoEncoder(extra, caseStrategy, skipNullField, getGenerics(t)[1]);\n                    if ((fullName(keyType) === \"System.String\") ? true : (fullName(keyType) === \"System.Guid\")) {\n                        return (value_12) => fold((target, _arg1) => {\n                            const activePatternResult36829 = _arg1;\n                            target[activePatternResult36829[0]]=valueEncoder(activePatternResult36829[1]);\n                            return target;\n                        }, {}, value_12);\n                    }\n                    else {\n                        let keyEncoder;\n                        const clo4 = autoEncoder(extra, caseStrategy, skipNullField, keyType);\n                        keyEncoder = ((arg40) => clo4(arg40));\n                        return (value_13) => seq(map_2((_arg2) => {\n                            const activePatternResult36833 = _arg2;\n                            return [keyEncoder(activePatternResult36833[0]), valueEncoder(activePatternResult36833[1])];\n                        }, value_13));\n                    }\n                }\n                else {\n                    return autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t);\n                }\n            }\n        }\n        else if (fullname === \"System.Boolean\") {\n            return (value_14) => value_14;\n        }\n        else if (fullname === \"Microsoft.FSharp.Core.Unit\") {\n            return unit;\n        }\n        else if (fullname === \"System.String\") {\n            return (value_16) => value_16;\n        }\n        else if (fullname === \"System.SByte\") {\n            return (value_18) => sbyte(value_18);\n        }\n        else if (fullname === \"System.Byte\") {\n            return (value_19) => byte(value_19);\n        }\n        else if (fullname === \"System.Int16\") {\n            return (value_20) => int16(value_20);\n        }\n        else if (fullname === \"System.UInt16\") {\n            return (value_21) => uint16(value_21);\n        }\n        else if (fullname === \"System.Int32\") {\n            return (value_22) => value_22;\n        }\n        else if (fullname === \"System.UInt32\") {\n            return (value_24) => value_24;\n        }\n        else if (fullname === \"System.Double\") {\n            return (value_26) => value_26;\n        }\n        else if (fullname === \"System.Single\") {\n            return (value_28) => value_28;\n        }\n        else if (fullname === \"System.DateTime\") {\n            return (value_30) => datetime(value_30);\n        }\n        else if (fullname === \"System.DateTimeOffset\") {\n            return (value_31) => datetimeOffset(value_31);\n        }\n        else if (fullname === \"System.TimeSpan\") {\n            return (value_32) => timespan(value_32);\n        }\n        else if (fullname === \"System.Guid\") {\n            return (value_33) => guid(value_33);\n        }\n        else if (fullname === \"System.Object\") {\n            return (x_1) => x_1;\n        }\n        else {\n            return autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t);\n        }\n    }\n    else {\n        const encoderRef = matchValue;\n        return (v) => encoderRef.contents(v);\n    }\n}\n\nfunction makeExtra(extra) {\n    if (extra != null) {\n        return map_3((_arg2, tupledArg) => (new FSharpRef(tupledArg[0])), extra.Coders);\n    }\n    else {\n        return empty();\n    }\n}\n\nexport class Auto {\n    constructor() {\n    }\n}\n\nexport function Auto$reflection() {\n    return class_type(\"Thoth.Json.Encode.Auto\", void 0, Auto);\n}\n\nexport function Auto_generateEncoderCached_Z127D9D79(caseStrategy, extra, skipNullField, resolver) {\n    let y_1, y;\n    const t = value_34(resolver).ResolveType();\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    const skipNullField_1 = defaultArg(skipNullField, true);\n    return Util_Cache$1__GetOrAdd_43981464(Util_CachedEncoders, (y_1 = ((y = fullName(t), toString_5(caseStrategy_1) + y)), defaultArg(map((e) => e.Hash, extra), \"\") + y_1), () => autoEncoder(makeExtra(extra), caseStrategy_1, skipNullField_1, t));\n}\n\nexport function Auto_generateEncoder_Z127D9D79(caseStrategy, extra, skipNullField, resolver) {\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    const skipNullField_1 = defaultArg(skipNullField, true);\n    const t = value_34(resolver).ResolveType();\n    return autoEncoder(makeExtra(extra), caseStrategy_1, skipNullField_1, t);\n}\n\nexport function Auto_toString_5A41365E(space, value, caseStrategy, extra, skipNullField, resolver) {\n    return toString(space, Auto_generateEncoder_Z127D9D79(caseStrategy, extra, skipNullField, resolver)(value));\n}\n\nexport function encode(space, value) {\n    return toString(space, value);\n}\n\n","import jssha_1 from \"jssha\";\nimport { addToDict, getItemFromDict } from \"../../.fable/fable-library.3.2.7/MapUtil.js\";\nimport { parse } from \"../../.fable/fable-library.3.2.7/Guid.js\";\n\nconst jssha = jssha_1;\n\nfunction shake128(str) {\n    const hash = new jssha(\"SHAKE128\", \"TEXT\");\n    hash.update(str);\n    return hash.getHash(\"HEX\", {\n        outputLen: 128,\n    });\n}\n\nconst hashCache = new Map([]);\n\nexport function getTextGuidHash(value) {\n    if (hashCache.has(value)) {\n        return getItemFromDict(hashCache, value);\n    }\n    else {\n        const hash = parse(shake128(value));\n        addToDict(hashCache, value, hash);\n        return hash;\n    }\n}\n\n","import { some } from \"../fable-library.3.2.7/Option.js\";\nimport { create, isLeapYear } from \"../fable-library.3.2.7/Date.js\";\nimport { parse } from \"../fable-library.3.2.7/Int32.js\";\nimport { split, isNullOrWhiteSpace } from \"../fable-library.3.2.7/String.js\";\nimport { equalsWith } from \"../fable-library.3.2.7/Array.js\";\nimport { comparePrimitives } from \"../fable-library.3.2.7/Util.js\";\nimport react from \"react\";\n\nexport function DateParsing_$007CBetween$007C_$007C(x, y, input) {\n    if ((input >= x) ? (input <= y) : false) {\n        return some(void 0);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function DateParsing_isLeapYear(year) {\n    return isLeapYear(year);\n}\n\nexport function DateParsing_$007CInt$007C_$007C(input) {\n    try {\n        return parse(input, 511, false, 32);\n    }\n    catch (matchValue) {\n        return void 0;\n    }\n}\n\nexport function DateParsing_parse(input) {\n    try {\n        if (isNullOrWhiteSpace(input)) {\n            return void 0;\n        }\n        else {\n            const parts = split(input, [\"-\"], null, 0);\n            let patternInput;\n            let pattern_matching_result, month, year;\n            if ((!equalsWith((x, y) => comparePrimitives(x, y), parts, null)) ? (parts.length === 2) : false) {\n                const activePatternResult15647 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                if (activePatternResult15647 != null) {\n                    const activePatternResult15648 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                    if (activePatternResult15648 != null) {\n                        pattern_matching_result = 0;\n                        month = activePatternResult15648;\n                        year = activePatternResult15647;\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    patternInput = [year, month, 1, 0, 0];\n                    break;\n                }\n                case 1: {\n                    let pattern_matching_result_1, day, month_1, year_1;\n                    if ((!equalsWith((x_1, y_1) => comparePrimitives(x_1, y_1), parts, null)) ? (parts.length === 3) : false) {\n                        const activePatternResult15644 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                        if (activePatternResult15644 != null) {\n                            const activePatternResult15645 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                            if (activePatternResult15645 != null) {\n                                const activePatternResult15646 = DateParsing_$007CInt$007C_$007C(parts[2]);\n                                if (activePatternResult15646 != null) {\n                                    pattern_matching_result_1 = 0;\n                                    day = activePatternResult15646;\n                                    month_1 = activePatternResult15645;\n                                    year_1 = activePatternResult15644;\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_1 = 1;\n                    }\n                    switch (pattern_matching_result_1) {\n                        case 0: {\n                            patternInput = [year_1, month_1, day, 0, 0];\n                            break;\n                        }\n                        case 1: {\n                            let pattern_matching_result_2, day_1, month_2, year_2;\n                            if ((!equalsWith((x_2, y_2) => comparePrimitives(x_2, y_2), parts, null)) ? (parts.length === 3) : false) {\n                                const activePatternResult15642 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                                if (activePatternResult15642 != null) {\n                                    const activePatternResult15643 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                                    if (activePatternResult15643 != null) {\n                                        pattern_matching_result_2 = 0;\n                                        day_1 = parts[2];\n                                        month_2 = activePatternResult15643;\n                                        year_2 = activePatternResult15642;\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    if (day_1.indexOf(\"T\") >= 0) {\n                                        const matchValue = split(day_1, [\"T\"], null, 0);\n                                        let pattern_matching_result_3, parsedDay, time;\n                                        if ((!equalsWith((x_3, y_3) => comparePrimitives(x_3, y_3), matchValue, null)) ? (matchValue.length === 2) : false) {\n                                            const activePatternResult15641 = DateParsing_$007CInt$007C_$007C(matchValue[0]);\n                                            if (activePatternResult15641 != null) {\n                                                pattern_matching_result_3 = 0;\n                                                parsedDay = activePatternResult15641;\n                                                time = matchValue[1];\n                                            }\n                                            else {\n                                                pattern_matching_result_3 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                        switch (pattern_matching_result_3) {\n                                            case 0: {\n                                                const matchValue_1 = split(time, [\":\"], null, 0);\n                                                let pattern_matching_result_4, hour, minute;\n                                                if ((!equalsWith((x_4, y_4) => comparePrimitives(x_4, y_4), matchValue_1, null)) ? (matchValue_1.length === 2) : false) {\n                                                    const activePatternResult15639 = DateParsing_$007CInt$007C_$007C(matchValue_1[0]);\n                                                    if (activePatternResult15639 != null) {\n                                                        const activePatternResult15640 = DateParsing_$007CInt$007C_$007C(matchValue_1[1]);\n                                                        if (activePatternResult15640 != null) {\n                                                            pattern_matching_result_4 = 0;\n                                                            hour = activePatternResult15639;\n                                                            minute = activePatternResult15640;\n                                                        }\n                                                        else {\n                                                            pattern_matching_result_4 = 1;\n                                                        }\n                                                    }\n                                                    else {\n                                                        pattern_matching_result_4 = 1;\n                                                    }\n                                                }\n                                                else {\n                                                    pattern_matching_result_4 = 1;\n                                                }\n                                                switch (pattern_matching_result_4) {\n                                                    case 0: {\n                                                        const matchValue_2 = [hour, minute];\n                                                        let pattern_matching_result_5;\n                                                        if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[0]) != null) {\n                                                            if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[1]) != null) {\n                                                                pattern_matching_result_5 = 0;\n                                                            }\n                                                            else {\n                                                                pattern_matching_result_5 = 1;\n                                                            }\n                                                        }\n                                                        else {\n                                                            pattern_matching_result_5 = 1;\n                                                        }\n                                                        switch (pattern_matching_result_5) {\n                                                            case 0: {\n                                                                patternInput = [year_2, month_2, parsedDay, hour, minute];\n                                                                break;\n                                                            }\n                                                            case 1: {\n                                                                patternInput = [-1, 1, 1, 0, 0];\n                                                                break;\n                                                            }\n                                                        }\n                                                        break;\n                                                    }\n                                                    case 1: {\n                                                        patternInput = [-1, 1, 1, 0, 0];\n                                                        break;\n                                                    }\n                                                }\n                                                break;\n                                            }\n                                            case 1: {\n                                                patternInput = [-1, 1, 1, 0, 0];\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        patternInput = [-1, 1, 1, 0, 0];\n                                    }\n                                    break;\n                                }\n                                case 1: {\n                                    patternInput = [-1, 1, 1, 0, 0];\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n            const year_3 = patternInput[0] | 0;\n            const month_3 = patternInput[1] | 0;\n            const minute_1 = patternInput[4] | 0;\n            const hour_1 = patternInput[3] | 0;\n            const day_2 = patternInput[2] | 0;\n            if (year_3 <= 0) {\n                return void 0;\n            }\n            else {\n                const matchValue_3 = [month_3, day_2];\n                let pattern_matching_result_6;\n                if (matchValue_3[0] === 2) {\n                    if (DateParsing_$007CBetween$007C_$007C(1, 29, matchValue_3[1]) != null) {\n                        if (DateParsing_isLeapYear(year_3)) {\n                            pattern_matching_result_6 = 0;\n                        }\n                        else {\n                            pattern_matching_result_6 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_6 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_6 = 1;\n                }\n                switch (pattern_matching_result_6) {\n                    case 0: {\n                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                    }\n                    case 1: {\n                        let pattern_matching_result_7;\n                        if (matchValue_3[0] === 2) {\n                            if (DateParsing_$007CBetween$007C_$007C(1, 28, matchValue_3[1]) != null) {\n                                if (!DateParsing_isLeapYear(year_3)) {\n                                    pattern_matching_result_7 = 0;\n                                }\n                                else {\n                                    pattern_matching_result_7 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_7 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_7 = 1;\n                        }\n                        switch (pattern_matching_result_7) {\n                            case 0: {\n                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                            }\n                            case 1: {\n                                let pattern_matching_result_8;\n                                if (matchValue_3[0] === 1) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 3) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 5) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 7) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 8) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 10) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 12) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_8 = 1;\n                                }\n                                switch (pattern_matching_result_8) {\n                                    case 0: {\n                                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                                    }\n                                    case 1: {\n                                        let pattern_matching_result_9;\n                                        if (matchValue_3[0] === 4) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 6) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 9) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 11) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_9 = 1;\n                                        }\n                                        switch (pattern_matching_result_9) {\n                                            case 0: {\n                                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                                            }\n                                            case 1: {\n                                                return void 0;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    catch (matchValue_4) {\n        return void 0;\n    }\n}\n\nexport const Interop_reactApi = react;\n\n","import { useLayoutEffectWithDeps, useLayoutEffect, useEffectWithDeps, useEffect, useDebugValue } from \"./ReactInterop.js\";\nimport { class_type } from \"../fable-library.3.2.7/Reflection.js\";\nimport { iterate } from \"../fable-library.3.2.7/Seq.js\";\nimport { defaultArg, some, toArray } from \"../fable-library.3.2.7/Option.js\";\nimport { Interop_reactApi } from \"./Interop.fs.js\";\nimport { curry, uncurry } from \"../fable-library.3.2.7/Util.js\";\nimport { useState } from \"react\";\nimport * as react from \"react\";\n\nexport const ReactInterop_useDebugValueWithFormatter = useDebugValue;\n\nexport const ReactInterop_useEffect = useEffect;\n\nexport const ReactInterop_useEffectWithDeps = useEffectWithDeps;\n\nexport const ReactInterop_useLayoutEffect = useLayoutEffect;\n\nexport const ReactInterop_useLayoutEffectWithDeps = useLayoutEffectWithDeps;\n\nexport class Internal {\n    constructor() {\n    }\n}\n\nexport function Internal$reflection() {\n    return class_type(\"Feliz.Internal\", void 0, Internal);\n}\n\nexport function Internal_$ctor() {\n    return new Internal();\n}\n\n(() => {\n})();\n\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    console.warn(some(\"Feliz: using React.functionComponent in Fable 3 is obsolete, please consider using the [\\u003cReactComponent\\u003e] attribute instead which makes Feliz output better Javascript code that is compatible with react-refresh\"));\n    return (props) => Interop_reactApi.createElement(renderElement, Internal_propsWithKey(withKey, props));\n}\n\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\n    const memoElementType = Interop_reactApi.memo(renderElement, uncurry(2, defaultArg(curry(2, areEqual), null)));\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    return (props) => Interop_reactApi.createElement(memoElementType, Internal_propsWithKey(withKey, props));\n}\n\nfunction Internal_propsWithKey(withKey, props) {\n    if (withKey == null) {\n        return props;\n    }\n    else {\n        const f = withKey;\n        props.key = f(props);\n        return props;\n    }\n}\n\nexport class React {\n    constructor() {\n    }\n}\n\nexport function React$reflection() {\n    return class_type(\"Feliz.React\", void 0, React);\n}\n\nexport function React_createDisposable_3A5B6456(dispose) {\n    return {\n        Dispose() {\n            dispose();\n        },\n    };\n}\n\nexport function useReact_useState_FCFD9EF(initializer) {\n    return Interop_reactApi.useState(initializer);\n}\n\nexport function useReact_useReducer_2B9E6EA0(update, initialState) {\n    return Interop_reactApi.useReducer(update, initialState);\n}\n\nexport function useReact_useEffect_Z5ECA432F(effect) {\n    ReactInterop_useEffect(effect);\n}\n\nexport function useReact_useEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_Z5ECA432F(effect) {\n    ReactInterop_useLayoutEffect(effect);\n}\n\nexport function useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_3A5B6456(effect) {\n    ReactInterop_useLayoutEffect((_arg1) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    });\n}\n\nexport function useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps((_arg2) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    }, dependencies);\n}\n\nexport function useReact_useEffectOnce_3A5B6456(effect) {\n    useReact_useEffect_Z101E1A95(effect, []);\n}\n\nexport function useReact_useEffectOnce_Z5ECA432F(effect) {\n    useReact_useEffect_Z5234A374(effect, []);\n}\n\nexport function useReact_useEffectOnce_6E825304(effect) {\n    useReact_useEffect_Z5234A374(() => {\n        const disposeOption = effect();\n        return {\n            Dispose() {\n                iterate((d) => {\n                    let copyOfStruct = d;\n                    copyOfStruct.Dispose();\n                }, toArray(disposeOption));\n            },\n        };\n    }, []);\n}\n\nexport function useReact_useEffect_3A5B6456(effect) {\n    ReactInterop_useEffect((_arg3) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    });\n}\n\nexport function useReact_useEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useEffectWithDeps((_arg4) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    }, dependencies);\n}\n\nexport function useReact_useDebugValue_Z721C83C5(value) {\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\n}\n\nexport function useReact_useDebugValue_77A55D6D(value, formatter) {\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\n}\n\nexport function useReact_useCallback_93353E(callbackFunction, dependencies) {\n    return Interop_reactApi.useCallback(callbackFunction, defaultArg(dependencies, []));\n}\n\nexport function useReact_useRef_1505(initialValue) {\n    return Interop_reactApi.useRef(initialValue);\n}\n\nexport function useReact_useInputRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useButtonRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useElementRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useMemo_CF4EA67(createFunction, dependencies) {\n    return Interop_reactApi.useMemo(createFunction, defaultArg(dependencies, []));\n}\n\nexport function React_functionComponent_2F9D7239(render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\n}\n\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\n}\n\nexport function React_functionComponent_19A12FB2(render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, withKey);\n}\n\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, withKey);\n}\n\nexport function React_memo_62A0F746(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\n}\n\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\n}\n\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, areEqual, withKey);\n}\n\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, areEqual, withKey);\n}\n\nexport function React_createContext_1AE444D8(name, defaultValue) {\n    const contextObject = Interop_reactApi.createContext(defaultArg(defaultValue, void 0));\n    iterate((name_1) => {\n        contextObject.displayName = name_1;\n    }, toArray(name));\n    return contextObject;\n}\n\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\n    return Interop_reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, child);\n}\n\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\n    return Interop_reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, ...children);\n}\n\nexport function React_contextConsumer_Z68910595(contextObject, render) {\n    return Interop_reactApi.createElement(contextObject.Consumer, null, render);\n}\n\nexport function React_contextConsumer_56D53A40(contextObject, render) {\n    return Interop_reactApi.createElement(contextObject.Consumer, null, (arg) => react.createElement(react.Fragment, {}, ...render(arg)));\n}\n\nexport function useReact_useContext_37FA55CF(contextObject) {\n    return Interop_reactApi.useContext(contextObject);\n}\n\nexport function useReact_useCallbackRef_7C4B0DD6(callback) {\n    const lastRenderCallbackRef = useReact_useRef_1505(callback);\n    const callbackRef = useReact_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\n    useReact_useLayoutEffect_3A5B6456(() => {\n        lastRenderCallbackRef.current = callback;\n    });\n    return callbackRef;\n}\n\nexport const React_useStateWithUpdater_1505 = useState;\n\nexport function React_forwardRef_3790D881(render) {\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\n    return (tupledArg) => {\n        let o;\n        return Interop_reactApi.createElement(forwardRefType, (o = {\n            props: tupledArg[0],\n            ref: tupledArg[1],\n        }, Object.assign({}, o)));\n    };\n}\n\nexport function React_forwardRef_7DC3DB1A(name, render) {\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\n    render.displayName = name;\n    return (tupledArg) => {\n        let o;\n        return Interop_reactApi.createElement(forwardRefType, (o = {\n            props: tupledArg[0],\n            ref: tupledArg[1],\n        }, Object.assign({}, o)));\n    };\n}\n\nexport function React_strictMode_6E3A73D(children) {\n    return Interop_reactApi.createElement(Interop_reactApi.StrictMode, void 0, ...children);\n}\n\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\n    return Interop_reactApi.createElement(Interop_reactApi.lazy((() => dynamicImport)), props);\n}\n\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\n    return Interop_reactApi.createElement(Interop_reactApi.lazy(dynamicImport), props);\n}\n\nexport function React_suspense_6E3A73D(children) {\n    let o;\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\n        fallback: null,\n    }, Object.assign({}, o)), ...children);\n}\n\nexport function React_suspense_Z3796A576(children, fallback) {\n    let o;\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\n        fallback: fallback,\n    }, Object.assign({}, o)), ...children);\n}\n\nexport function useReact_useImperativeHandle_596DDC25(ref, createHandle) {\n    Interop_reactApi.useImperativeHandle(ref, createHandle);\n}\n\nexport function useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\n    Interop_reactApi.useImperativeHandle(ref, createHandle, dependencies);\n}\n\nexport function useFeliz_React__React_useState_Static_1505(initial) {\n    return Interop_reactApi.useState(initial);\n}\n\nexport const Feliz_React__React_useStateWithUpdater_Static_FCFD9EF = useState;\n\n","import {\r\n    useEffect as useEffectReact,\r\n    useLayoutEffect as useLayoutEffectReact,\r\n    useDebugValue as useDebugValueReact } from 'react'\r\n\r\nexport const useEffect = getDisposable => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEffectWithDeps = (getDisposable, deps) => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useLayoutEffect = getDisposable => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","import { Jotai_AtomReference$1$reflection, Jotai_AtomReference$1, Jotai_queryAtomPath, Jotai_jotai, Jotai_registerAtom, Jotai_jotaiUtils } from \"./Jotai.fs.js\";\nimport { split, toConsole, isNullOrWhiteSpace, interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { addCount } from \"./Profiling.fs.js\";\nimport { JS_ofNonEmptyObj, JS_debounce, JS_isDebug, JS_deviceInfo } from \"./JS.fs.js\";\nimport { batchSubscribe, getGunNodePath, GunProps, gun as gun_3, GunKeys } from \"./Gun.fs.js\";\nimport { compare as compare_2, curry, Lazy, equals, uncurry } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { singleton, head, fold, tail, ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { defaultArg, some, ofNullable, value as value_21, map as map_1 } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { compare } from \"./DeepEqual.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { Auto_unsafeFromString_Z5CB6BD } from \"../../.fable/Thoth.Json.5.1.0/Decode.fs.js\";\nimport { obj_type, record_type, class_type, union_type, lambda_type, tuple_type, option_type, string_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { Record, Union, toString } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { compare as compare_1 } from \"../../.fable/fable-library.3.2.7/Long.js\";\nimport { getTicks, now } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { Auto_toString_5A41365E } from \"../../.fable/Thoth.Json.5.1.0/Encode.fs.js\";\nimport { DateTime_ticksDiff } from \"../../../Fluke.Shared/Core.fs.js\";\nimport { getTextGuidHash } from \"./Crypto.fs.js\";\nimport { useReact_useMemo_CF4EA67, useReact_useCallbackRef_7C4B0DD6, useReact_useCallback_93353E } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { equalsWith, concat } from \"../../.fable/fable-library.3.2.7/Array.js\";\nimport * as react from \"react\";\n\nexport function atomWithStorage(atomPath, defaultValue, map) {\n    const internalAtom = Jotai_jotaiUtils.atomWithStorage(atomPath, defaultValue);\n    return Jotai_registerAtom(atomPath, void 0, Jotai_jotai.atom((getter) => getter(internalAtom), (_arg1, setter, argFn) => {\n        const value_3 = map(((typeof argFn) === \"function\") ? argFn() : argFn);\n        setter(internalAtom, value_3);\n    }))[0];\n}\n\nexport const Atoms_gunPeers = atomWithStorage(toText(interpolate(\"%P()\", [\"gunPeers\"])), [], (array) => array.filter((arg) => (!isNullOrWhiteSpace(arg))));\n\nexport const Atoms_isTesting = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"isTesting\"]));\n    return Jotai_registerAtom(atomPath, void 0, Jotai_jotai.atom((addCount(atomPath), JS_deviceInfo.IsTesting)))[0];\n})();\n\nexport const Atoms_username = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"username\"]));\n    return Jotai_registerAtom(atomPath, void 0, Jotai_jotai.atom((addCount(atomPath), void 0)))[0];\n})();\n\nexport const Atoms_gunKeys = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"gunKeys\"]));\n    const defaultValue = new GunKeys(\"\", \"\", \"\", \"\");\n    return Jotai_registerAtom(atomPath, void 0, Jotai_jotai.atom((addCount(atomPath), defaultValue)))[0];\n})();\n\nexport const Selectors_gun = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"gun\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_3) => {\n        addCount(atomPath_1);\n        const getter = getter_3;\n        const isTesting = getter(Atoms_isTesting);\n        const gunPeers = getter(Atoms_gunPeers);\n        const gun = isTesting ? gun_3(new GunProps(void 0, false, void 0, void 0)) : gun_3(new GunProps(gunPeers, true, false, void 0));\n        toConsole(interpolate(\"jotai gun selector. peers=%P(). gun=%P() returning gun...\", [gunPeers, gun]));\n        return gun;\n    }, (getter_4, setter, value) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n})();\n\nexport const Selectors_gunNamespace = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"gunNamespace\"]));\n    return Jotai_jotaiUtils.selectAtom(Selectors_gun, (value) => {\n        addCount(toText(interpolate(\"%P() :selectAtom\", [atomPath])));\n        const user = value.user();\n        toConsole(interpolate(\"gunNamespace selector. user.is=%P() keys=%P()...\", [JSON.stringify(user.is), (user._).sea]));\n        return user;\n    }, uncurry(2, void 0));\n})();\n\nexport const Selectors_gunAtomNode = (() => {\n    const atomPath_2 = toText(interpolate(\"%P()\", [\"gunAtomNode\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        let selector_1;\n        const tupledArg = param;\n        const atomPath = tupledArg[1];\n        selector_1 = ((gunNamespace) => {\n            const matchValue = gunNamespace.is;\n            let pattern_matching_result;\n            if (matchValue != null) {\n                if (matchValue.alias != null) {\n                    if (matchValue.alias === tupledArg[0].fields[0]) {\n                        pattern_matching_result = 0;\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const nodes = ofArray(split(atomPath, [\"/\"], null, 0));\n                    const list = tail(nodes);\n                    return fold((result, node) => map_1((result_1) => result_1.get(node), result), gunNamespace.get(head(nodes)), list);\n                }\n                case 1: {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"Invalid username.\\n                                                                                atomPath=%P()\\n                                                                                user.is=%P()\", [atomPath, JSON.stringify(gunNamespace.is)]))]));\n                    }\n                    return void 0;\n                }\n            }\n        });\n        return Jotai_jotaiUtils.selectAtom(Selectors_gunNamespace, (value) => {\n            addCount(toText(interpolate(\"%P() :selectAtom\", [atomPath_2])));\n            return selector_1(value);\n        }, uncurry(2, void 0));\n    }, (a, b) => compare(a, b));\n})();\n\nexport const readWriteValue = (() => {\n    let readWriteValue_1;\n    const atomPath = toText(interpolate(\"%P()\", [\"readWriteValue\"]));\n    readWriteValue_1 = Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = null;\n        const keyIdentifier = singleton(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_21(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_21(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_21(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(string_type),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, copyOfStruct)) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n    return Jotai_jotaiUtils.atomFamily((_arg2_3) => {\n        const atomPath_4 = _arg2_3;\n        const guidHash = getTextGuidHash(atomPath_4);\n        const pathHash = guidHash;\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"readWriteValueWrapper constructor. atomPath=%P() guidHash=%P()\", [atomPath_4, guidHash]))]));\n        }\n        return Jotai_jotai.atom((getter_7) => {\n            const value_13 = getter_7(readWriteValue_1(pathHash));\n            addCount(toText(interpolate(\"%P() readWriteValue set\", [atomPath_4])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"readWriteValueWrapper.get(). atomPath=%P() guidHash=%P() value=%P()\", [atomPath_4, guidHash, value_13]))]));\n            }\n            if (value_13 === null) {\n                return null;\n            }\n            else {\n                const matchValue_5 = Auto_unsafeFromString_Z5CB6BD(value_13, void 0, void 0, {\n                    ResolveType: () => tuple_type(string_type, option_type(string_type)),\n                });\n                return (matchValue_5[1] != null) ? matchValue_5[1] : null;\n            }\n        }, (_arg1_3, setter_3, newValue_4) => {\n            addCount(toText(interpolate(\"%P() readWriteValue set\", [atomPath_4])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"readWriteValueWrapper.set(). atomPath=%P() guidHash=%P() newValue=%P()\", [atomPath_4, guidHash, newValue_4]))]));\n            }\n            const newValue_5 = Auto_toString_5A41365E(0, [atomPath_4, ofNullable(newValue_4)], void 0, void 0, void 0, {\n                ResolveType: () => tuple_type(string_type, option_type(string_type)),\n            });\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"readWriteValueWrapper.set(). newValue2=%P()\", [newValue_5]))]));\n            }\n            setter_3(readWriteValue_1(pathHash), newValue_5);\n        });\n    }, (a_6, b_7) => compare(a_6, b_7));\n})();\n\nexport function shadowedCallbackFn(fn, deps) {\n    return ((arg00) => useReact_useCallback_93353E(arg00))(fn,deps);\n}\n\nexport function useCallback(fn, deps) {\n    const fnCallback = useReact_useCallbackRef_7C4B0DD6((tupledArg) => fn(tupledArg[0], uncurry(2, tupledArg[1]), tupledArg[2]));\n    const fnCallback_1 = shadowedCallbackFn(fnCallback, concat([deps, [fnCallback]]));\n    const setValue = Jotai_jotai.useAtom(useReact_useMemo_CF4EA67(() => Jotai_jotai.atom(null, (getter_1, setter_1, tupledArg_1) => {\n        try {\n            tupledArg_1[1](fnCallback_1([getter_1, curry(2, setter_1), tupledArg_1[0]]));\n        }\n        catch (ex) {\n            toConsole(interpolate(\"atomCallback fn error: %P()\", [ex]));\n            tupledArg_1[2](ex);\n        }\n    }), [fnCallback_1]))[1];\n    return useReact_useCallback_93353E((arg_2) => {\n        const pr = new Promise(((resolve_1, err_1) => {\n            setValue([arg_2, resolve_1, err_1]);\n        }));\n        return pr.then(((x) => x));\n    }, [setValue]);\n}\n\nexport function useState() {\n    return (arg00) => Jotai_jotai.useAtom(arg00);\n}\n\nexport const provider = (arg00) => react.createElement((arg00_1) => Jotai_jotai.Provider(arg00_1), void 0, ...arg00);\n\nexport const emptyArrayAtom = Jotai_jotai.atom([]);\n\nexport function waitForAll(atoms) {\n    if ((!equalsWith((x, y) => compare_2(x, y), atoms, null)) ? (atoms.length === 0) : false) {\n        return emptyArrayAtom;\n    }\n    else {\n        return Jotai_jotaiUtils.waitForAll(atoms);\n    }\n}\n\nexport class InputScope$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ReadOnly\", \"ReadWrite\"];\n    }\n}\n\nexport function InputScope$1$reflection(gen0) {\n    return union_type(\"Fluke.UI.Frontend.Bindings.Store.InputScope`1\", [gen0], InputScope$1, () => [[], [[\"Item\", tuple_type(lambda_type(gen0, string_type), lambda_type(string_type, gen0))]]]);\n}\n\nexport class AtomScope extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ReadOnly\", \"ReadWrite\"];\n    }\n}\n\nexport function AtomScope$reflection() {\n    return union_type(\"Fluke.UI.Frontend.Bindings.Store.AtomScope\", [], AtomScope, () => [[], []]);\n}\n\nexport class InputAtom$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"InputAtom\"];\n    }\n}\n\nexport function InputAtom$1$reflection(gen0) {\n    return union_type(\"Fluke.UI.Frontend.Bindings.Store.InputAtom`1\", [gen0], InputAtom$1, () => [[[\"atomPath\", Jotai_AtomReference$1$reflection(gen0)]]]);\n}\n\nexport class AtomField$1 extends Record {\n    constructor(ReadOnly, ReadWrite) {\n        super();\n        this.ReadOnly = ReadOnly;\n        this.ReadWrite = ReadWrite;\n    }\n}\n\nexport function AtomField$1$reflection(gen0) {\n    return record_type(\"Fluke.UI.Frontend.Bindings.Store.AtomField`1\", [gen0], AtomField$1, () => [[\"ReadOnly\", option_type(class_type(\"Fluke.UI.Frontend.Bindings.Jotai.Atom`1\", [gen0]))], [\"ReadWrite\", option_type(class_type(\"Fluke.UI.Frontend.Bindings.Jotai.Atom`1\", [string_type]))]]);\n}\n\nexport const emptyAtom = Jotai_jotai.atom(null);\n\nexport function Hooks_useStateOption(atom) {\n    const patternInput = Jotai_jotai.useAtom(useReact_useMemo_CF4EA67(() => ((atom == null) ? emptyAtom : atom), [atom]));\n    const value = patternInput[0];\n    const setValue = patternInput[1];\n    return useReact_useMemo_CF4EA67(() => [(atom == null) ? (void 0) : some(value), (atom == null) ? ((_arg1) => {\n    }) : setValue], [atom, value, setValue]);\n}\n\nexport function Hooks_useAtomFieldOptions(atom, inputScope) {\n    const atomField = useReact_useMemo_CF4EA67(() => {\n        let matchValue, atomPath_1;\n        const atom_1 = atom;\n        let inputScope_2;\n        const inputScope_1 = inputScope;\n        let pattern_matching_result;\n        if (inputScope_1 != null) {\n            if (inputScope_1.tag === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                inputScope_2 = (new AtomScope(1));\n                break;\n            }\n            case 1: {\n                inputScope_2 = (new AtomScope(0));\n                break;\n            }\n        }\n        if (atom_1 != null) {\n            const atomPath = atom_1.fields[0];\n            return new AtomField$1((atomPath.tag === 0) ? atomPath.fields[0] : emptyAtom, (matchValue = [Jotai_queryAtomPath(atomPath), inputScope_2], (matchValue[0] != null) ? ((matchValue[1].tag === 1) ? ((atomPath_1 = value_21(matchValue[0]), readWriteValue(atomPath_1))) : (void 0)) : (void 0)));\n        }\n        else {\n            return new AtomField$1(void 0, void 0);\n        }\n    }, [atom, inputScope]);\n    const patternInput = Hooks_useStateOption(atomField.ReadOnly);\n    const setReadOnlyValue = patternInput[1];\n    const readOnlyValue = patternInput[0];\n    const patternInput_1 = Hooks_useStateOption(atomField.ReadWrite);\n    const setReadWriteValue = patternInput_1[1];\n    const readWriteValue_1 = patternInput_1[0];\n    return useReact_useMemo_CF4EA67(() => {\n        let newReadWriteValue;\n        const matchValue_1 = [inputScope, defaultArg(readWriteValue_1, null)];\n        let pattern_matching_result_1, jsonDecode, readWriteValue_2;\n        if (matchValue_1[1] === null) {\n            pattern_matching_result_1 = 0;\n        }\n        else if (matchValue_1[0] != null) {\n            if (matchValue_1[0].tag === 1) {\n                pattern_matching_result_1 = 1;\n                jsonDecode = matchValue_1[0].fields[0][1];\n                readWriteValue_2 = matchValue_1[1];\n            }\n            else {\n                pattern_matching_result_1 = 2;\n            }\n        }\n        else {\n            pattern_matching_result_1 = 2;\n        }\n        switch (pattern_matching_result_1) {\n            case 0: {\n                newReadWriteValue = defaultArg(readOnlyValue, null);\n                break;\n            }\n            case 1: {\n                try {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"useAtomFieldOptins\\n                                readOnlyValue=%P()\\n                                atom=%P()\\n                                readWriteValue=%P()\", [readOnlyValue, atom, readWriteValue_2]))]));\n                    }\n                    newReadWriteValue = jsonDecode(readWriteValue_2);\n                }\n                catch (ex) {\n                    toConsole(interpolate(\"Error decoding readWriteValue=%P() ex=%P()\", [readWriteValue_2, ex]));\n                    newReadWriteValue = defaultArg(readOnlyValue, readWriteValue_2);\n                }\n                break;\n            }\n            case 2: {\n                newReadWriteValue = defaultArg(readOnlyValue, readWriteValue_1);\n                break;\n            }\n        }\n        const setReadWriteValue_1 = (atom != null) ? ((newValue) => {\n            let jsonEncode;\n            setReadWriteValue(equals(newValue, null) ? null : ((inputScope != null) ? ((inputScope.tag === 1) ? ((jsonEncode = inputScope.fields[0][0], jsonEncode(newValue))) : [(obj) => Auto_toString_5A41365E(0, obj, void 0, void 0, void 0, {\n                ResolveType: () => obj_type,\n            }), (data) => Auto_unsafeFromString_Z5CB6BD(data, void 0, void 0, {\n                ResolveType: () => obj_type,\n            })][0](newValue)) : [(obj) => Auto_toString_5A41365E(0, obj, void 0, void 0, void 0, {\n                ResolveType: () => obj_type,\n            }), (data) => Auto_unsafeFromString_Z5CB6BD(data, void 0, void 0, {\n                ResolveType: () => obj_type,\n            })][0](newValue)));\n        }) : ((_arg1) => {\n        });\n        const setReadOnlyValue_1 = (atom != null) ? setReadOnlyValue : ((_arg2) => {\n        });\n        const ReadOnlyValue = defaultArg(readOnlyValue, null);\n        return {\n            AtomField: atomField,\n            AtomValue: (inputScope != null) ? ((inputScope.tag === 1) ? newReadWriteValue : defaultArg(readOnlyValue, null)) : defaultArg(readOnlyValue, null),\n            ReadOnlyValue: ReadOnlyValue,\n            ReadWriteValue: newReadWriteValue,\n            SetAtomValue: (inputScope != null) ? ((inputScope.tag === 1) ? setReadWriteValue_1 : setReadOnlyValue_1) : setReadOnlyValue_1,\n            SetReadOnlyValue: setReadOnlyValue_1,\n            SetReadWriteValue: setReadWriteValue_1,\n        };\n    }, [inputScope, atom, atomField, readOnlyValue, readWriteValue_1, setReadOnlyValue, setReadWriteValue]);\n}\n\n","import { Priority, FlukeTime } from \"./Model.fs.js\";\n\nexport function FlukeTime_Hour(x) {\n    return x.Hour;\n}\n\nexport function FlukeTime_Minute(x) {\n    return x.Minute;\n}\n\nexport function FlukeTime_create(hour, minute) {\n    return new FlukeTime(hour, minute);\n}\n\nexport function FlukeTime_map(mapHour, mapMinute, record$0027) {\n    return new FlukeTime(mapHour(record$0027.Hour), mapMinute(record$0027.Minute));\n}\n\nexport function Information_toString(x) {\n    switch (x.tag) {\n        case 1: {\n            return \"Area\";\n        }\n        case 2: {\n            return \"Resource\";\n        }\n        case 3: {\n            return \"Archive\";\n        }\n        default: {\n            return \"Project\";\n        }\n    }\n}\n\nexport function Information_fromString(x) {\n    return void 0;\n}\n\nexport function Information_toTag(x) {\n    switch (x.tag) {\n        case 1: {\n            return 1;\n        }\n        case 2: {\n            return 2;\n        }\n        case 3: {\n            return 3;\n        }\n        default: {\n            return 0;\n        }\n    }\n}\n\nexport function Information_isProject(x) {\n    if (x.tag === 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Information_isArea(x) {\n    if (x.tag === 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Information_isResource(x) {\n    if (x.tag === 2) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Information_isArchive(x) {\n    if (x.tag === 3) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Priority_toString(x) {\n    switch (x.tag) {\n        case 1: {\n            return \"Low2\";\n        }\n        case 2: {\n            return \"Low3\";\n        }\n        case 3: {\n            return \"Medium4\";\n        }\n        case 4: {\n            return \"Medium5\";\n        }\n        case 5: {\n            return \"Medium6\";\n        }\n        case 6: {\n            return \"High7\";\n        }\n        case 7: {\n            return \"High8\";\n        }\n        case 8: {\n            return \"High9\";\n        }\n        case 9: {\n            return \"Critical10\";\n        }\n        default: {\n            return \"Low1\";\n        }\n    }\n}\n\nexport function Priority_fromString(x) {\n    switch (x) {\n        case \"Low1\": {\n            return new Priority(0);\n        }\n        case \"Low2\": {\n            return new Priority(1);\n        }\n        case \"Low3\": {\n            return new Priority(2);\n        }\n        case \"Medium4\": {\n            return new Priority(3);\n        }\n        case \"Medium5\": {\n            return new Priority(4);\n        }\n        case \"Medium6\": {\n            return new Priority(5);\n        }\n        case \"High7\": {\n            return new Priority(6);\n        }\n        case \"High8\": {\n            return new Priority(7);\n        }\n        case \"High9\": {\n            return new Priority(8);\n        }\n        case \"Critical10\": {\n            return new Priority(9);\n        }\n        default: {\n            return void 0;\n        }\n    }\n}\n\nexport function Priority_toTag(x) {\n    switch (x.tag) {\n        case 1: {\n            return 1;\n        }\n        case 2: {\n            return 2;\n        }\n        case 3: {\n            return 3;\n        }\n        case 4: {\n            return 4;\n        }\n        case 5: {\n            return 5;\n        }\n        case 6: {\n            return 6;\n        }\n        case 7: {\n            return 7;\n        }\n        case 8: {\n            return 8;\n        }\n        case 9: {\n            return 9;\n        }\n        default: {\n            return 0;\n        }\n    }\n}\n\nexport function Priority_isLow1(x) {\n    if (x.tag === 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Priority_isLow2(x) {\n    if (x.tag === 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Priority_isLow3(x) {\n    if (x.tag === 2) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Priority_isMedium4(x) {\n    if (x.tag === 3) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Priority_isMedium5(x) {\n    if (x.tag === 4) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Priority_isMedium6(x) {\n    if (x.tag === 5) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Priority_isHigh7(x) {\n    if (x.tag === 6) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Priority_isHigh8(x) {\n    if (x.tag === 7) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Priority_isHigh9(x) {\n    if (x.tag === 8) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Priority_isCritical10(x) {\n    if (x.tag === 9) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\n","import { toIterator, getEnumerator } from \"./Util.js\";\r\nimport { iterate, map, iterateIndexed, concat } from \"./Seq.js\";\r\nimport { FSharpRef } from \"./Types.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\r\nimport { some } from \"./Option.js\";\r\n\r\nexport class HashSet {\r\n    constructor(items, comparer) {\r\n        const this$ = new FSharpRef(null);\r\n        this.comparer = comparer;\r\n        this$.contents = this;\r\n        this.hashMap = (new Map([]));\r\n        this[\"init@8-2\"] = 1;\r\n        const enumerator = getEnumerator(items);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                void HashSet__Add_2B595(this$.contents, enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return \"HashSet\";\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const this$ = this;\r\n        return getEnumerator(this$);\r\n    }\r\n    GetEnumerator() {\r\n        const this$ = this;\r\n        return getEnumerator(concat(this$.hashMap.values()));\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\r\n        const this$ = this;\r\n        void HashSet__Add_2B595(this$, item);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\r\n        const this$ = this;\r\n        HashSet__Clear(this$);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\r\n        const this$ = this;\r\n        return HashSet__Contains_2B595(this$, item);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\r\n        const this$ = this;\r\n        iterateIndexed((i, e) => {\r\n            array[arrayIndex + i] = e;\r\n        }, this$);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\r\n        const this$ = this;\r\n        return HashSet__get_Count(this$) | 0;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\r\n        return false;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\r\n        const this$ = this;\r\n        return HashSet__Remove_2B595(this$, item);\r\n    }\r\n    get size() {\r\n        const this$ = this;\r\n        return HashSet__get_Count(this$) | 0;\r\n    }\r\n    add(k) {\r\n        const this$ = this;\r\n        void HashSet__Add_2B595(this$, k);\r\n        return this$;\r\n    }\r\n    clear() {\r\n        const this$ = this;\r\n        HashSet__Clear(this$);\r\n    }\r\n    delete(k) {\r\n        const this$ = this;\r\n        return HashSet__Remove_2B595(this$, k);\r\n    }\r\n    has(k) {\r\n        const this$ = this;\r\n        return HashSet__Contains_2B595(this$, k);\r\n    }\r\n    keys() {\r\n        const this$ = this;\r\n        return map((x) => x, this$);\r\n    }\r\n    values() {\r\n        const this$ = this;\r\n        return map((x) => x, this$);\r\n    }\r\n    entries() {\r\n        const this$ = this;\r\n        return map((v) => [v, v], this$);\r\n    }\r\n    forEach(f, thisArg) {\r\n        const this$ = this;\r\n        iterate((x) => {\r\n            f(x, x, this$);\r\n        }, this$);\r\n    }\r\n}\r\n\r\nexport function HashSet$reflection(gen0) {\r\n    return class_type(\"Fable.Collections.HashSet\", [gen0], HashSet);\r\n}\r\n\r\nexport function HashSet_$ctor_Z6150332D(items, comparer) {\r\n    return new HashSet(items, comparer);\r\n}\r\n\r\nfunction HashSet__TryFindIndex_2B595(this$, k) {\r\n    const h = this$.comparer.GetHashCode(k) | 0;\r\n    let matchValue;\r\n    let outArg = null;\r\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return [true, h, matchValue[1].findIndex((v_1) => this$.comparer.Equals(k, v_1))];\r\n    }\r\n    else {\r\n        return [false, h, -1];\r\n    }\r\n}\r\n\r\nfunction HashSet__TryFind_2B595(this$, k) {\r\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return some(getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]]);\r\n        }\r\n        case 1: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function HashSet__get_Comparer(this$) {\r\n    return this$.comparer;\r\n}\r\n\r\nexport function HashSet__Clear(this$) {\r\n    this$.hashMap.clear();\r\n}\r\n\r\nexport function HashSet__get_Count(this$) {\r\n    let count = 0;\r\n    let enumerator = getEnumerator(this$.hashMap.values());\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const items = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            count = ((count + items.length) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return count | 0;\r\n}\r\n\r\nexport function HashSet__Add_2B595(this$, k) {\r\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return false;\r\n        }\r\n        case 1: {\r\n            if (matchValue[0]) {\r\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push(k));\r\n                return true;\r\n            }\r\n            else {\r\n                this$.hashMap.set(matchValue[1], [k]);\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function HashSet__Contains_2B595(this$, k) {\r\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return true;\r\n        }\r\n        case 1: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function HashSet__Remove_2B595(this$, k) {\r\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\r\n            return true;\r\n        }\r\n        case 1: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n","import { equals, toIterator, getEnumerator } from \"./Util.js\";\r\nimport { iterate, map, delay, toArray, iterateIndexed, concat } from \"./Seq.js\";\r\nimport { FSharpRef } from \"./Types.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\r\nimport { format } from \"./String.js\";\r\n\r\nexport class Dictionary {\r\n    constructor(pairs, comparer) {\r\n        const this$ = new FSharpRef(null);\r\n        this.comparer = comparer;\r\n        this$.contents = this;\r\n        this.hashMap = (new Map([]));\r\n        this[\"init@8-1\"] = 1;\r\n        const enumerator = getEnumerator(pairs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const pair = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                Dictionary__Add_5BDDA1(this$.contents, pair[0], pair[1]);\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return \"Dictionary\";\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const this$ = this;\r\n        return getEnumerator(this$);\r\n    }\r\n    GetEnumerator() {\r\n        const this$ = this;\r\n        return getEnumerator(concat(this$.hashMap.values()));\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\r\n        const this$ = this;\r\n        Dictionary__Add_5BDDA1(this$, item[0], item[1]);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\r\n        const this$ = this;\r\n        Dictionary__Clear(this$);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\r\n        const this$ = this;\r\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\r\n        let pattern_matching_result;\r\n        if (matchValue != null) {\r\n            if (equals(matchValue[1], item[1])) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return true;\r\n            }\r\n            case 1: {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\r\n        const this$ = this;\r\n        iterateIndexed((i, e) => {\r\n            array[arrayIndex + i] = e;\r\n        }, this$);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\r\n        const this$ = this;\r\n        return Dictionary__get_Count(this$) | 0;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\r\n        return false;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\r\n        const this$ = this;\r\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\r\n        if (matchValue != null) {\r\n            if (equals(matchValue[1], item[1])) {\r\n                void Dictionary__Remove_2B595(this$, item[0]);\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.Add5BDDA1\"](key, value) {\r\n        const this$ = this;\r\n        Dictionary__Add_5BDDA1(this$, key, value);\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.ContainsKey2B595\"](key) {\r\n        const this$ = this;\r\n        return Dictionary__ContainsKey_2B595(this$, key);\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.get_Item2B595\"](key) {\r\n        const this$ = this;\r\n        return Dictionary__get_Item_2B595(this$, key);\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.set_Item5BDDA1\"](key, v) {\r\n        const this$ = this;\r\n        Dictionary__set_Item_5BDDA1(this$, key, v);\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.get_Keys\"]() {\r\n        const this$ = this;\r\n        return toArray(delay(() => map((pair) => pair[0], this$)));\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.Remove2B595\"](key) {\r\n        const this$ = this;\r\n        return Dictionary__Remove_2B595(this$, key);\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.TryGetValue23A0B95A\"](key, value) {\r\n        const this$ = this;\r\n        const matchValue = Dictionary__TryFind_2B595(this$, key);\r\n        if (matchValue != null) {\r\n            const pair = matchValue;\r\n            value.contents = pair[1];\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.get_Values\"]() {\r\n        const this$ = this;\r\n        return toArray(delay(() => map((pair) => pair[1], this$)));\r\n    }\r\n    get size() {\r\n        const this$ = this;\r\n        return Dictionary__get_Count(this$) | 0;\r\n    }\r\n    clear() {\r\n        const this$ = this;\r\n        Dictionary__Clear(this$);\r\n    }\r\n    delete(k) {\r\n        const this$ = this;\r\n        return Dictionary__Remove_2B595(this$, k);\r\n    }\r\n    entries() {\r\n        const this$ = this;\r\n        return map((p) => [p[0], p[1]], this$);\r\n    }\r\n    get(k) {\r\n        const this$ = this;\r\n        return Dictionary__get_Item_2B595(this$, k);\r\n    }\r\n    has(k) {\r\n        const this$ = this;\r\n        return Dictionary__ContainsKey_2B595(this$, k);\r\n    }\r\n    keys() {\r\n        const this$ = this;\r\n        return map((p) => p[0], this$);\r\n    }\r\n    set(k, v) {\r\n        const this$ = this;\r\n        Dictionary__set_Item_5BDDA1(this$, k, v);\r\n        return this$;\r\n    }\r\n    values() {\r\n        const this$ = this;\r\n        return map((p) => p[1], this$);\r\n    }\r\n    forEach(f, thisArg) {\r\n        const this$ = this;\r\n        iterate((p) => {\r\n            f(p[1], p[0], this$);\r\n        }, this$);\r\n    }\r\n}\r\n\r\nexport function Dictionary$reflection(gen0, gen1) {\r\n    return class_type(\"Fable.Collections.Dictionary\", [gen0, gen1], Dictionary);\r\n}\r\n\r\nexport function Dictionary_$ctor_6623D9B3(pairs, comparer) {\r\n    return new Dictionary(pairs, comparer);\r\n}\r\n\r\nfunction Dictionary__TryFindIndex_2B595(this$, k) {\r\n    const h = this$.comparer.GetHashCode(k) | 0;\r\n    let matchValue;\r\n    let outArg = null;\r\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return [true, h, matchValue[1].findIndex((pair) => this$.comparer.Equals(k, pair[0]))];\r\n    }\r\n    else {\r\n        return [false, h, -1];\r\n    }\r\n}\r\n\r\nexport function Dictionary__TryFind_2B595(this$, k) {\r\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]];\r\n        }\r\n        case 1: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Dictionary__get_Comparer(this$) {\r\n    return this$.comparer;\r\n}\r\n\r\nexport function Dictionary__Clear(this$) {\r\n    this$.hashMap.clear();\r\n}\r\n\r\nexport function Dictionary__get_Count(this$) {\r\n    let count = 0;\r\n    let enumerator = getEnumerator(this$.hashMap.values());\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const pairs = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            count = ((count + pairs.length) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return count | 0;\r\n}\r\n\r\nexport function Dictionary__get_Item_2B595(this$, k) {\r\n    const matchValue = Dictionary__TryFind_2B595(this$, k);\r\n    if (matchValue != null) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        throw (new Error(\"The item was not found in collection\"));\r\n    }\r\n}\r\n\r\nexport function Dictionary__set_Item_5BDDA1(this$, k, v) {\r\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]] = [k, v];\r\n            break;\r\n        }\r\n        case 1: {\r\n            if (matchValue[0]) {\r\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\r\n            }\r\n            else {\r\n                this$.hashMap.set(matchValue[1], [[k, v]]);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Dictionary__Add_5BDDA1(this$, k, v) {\r\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            const msg = format(\"An item with the same key has already been added. Key: {0}\", k);\r\n            throw (new Error(msg));\r\n            break;\r\n        }\r\n        case 1: {\r\n            if (matchValue[0]) {\r\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\r\n            }\r\n            else {\r\n                this$.hashMap.set(matchValue[1], [[k, v]]);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Dictionary__ContainsKey_2B595(this$, k) {\r\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return true;\r\n        }\r\n        case 1: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Dictionary__Remove_2B595(this$, k) {\r\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\r\n            return true;\r\n        }\r\n        case 1: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n","import { toList, toArray, map, filter, delay } from \"./Seq.js\";\r\nimport { HashSet } from \"./MutableSet.js\";\r\nimport { addToDict, getItemFromDict, tryGetValue, addToSet } from \"./MapUtil.js\";\r\nimport { Dictionary } from \"./MutableMap.js\";\r\nimport { getEnumerator } from \"./Util.js\";\r\nimport { FSharpRef } from \"./Types.js\";\r\n\r\nexport function distinct(xs, comparer) {\r\n    return delay(() => {\r\n        const hashSet = new HashSet([], comparer);\r\n        return filter((x) => addToSet(x, hashSet), xs);\r\n    });\r\n}\r\n\r\nexport function distinctBy(projection, xs, comparer) {\r\n    return delay(() => {\r\n        const hashSet = new HashSet([], comparer);\r\n        return filter((x) => addToSet(projection(x), hashSet), xs);\r\n    });\r\n}\r\n\r\nexport function except(itemsToExclude, xs, comparer) {\r\n    return delay(() => {\r\n        const hashSet = new HashSet(itemsToExclude, comparer);\r\n        return filter((x) => addToSet(x, hashSet), xs);\r\n    });\r\n}\r\n\r\nexport function countBy(projection, xs, comparer) {\r\n    return delay(() => {\r\n        const dict = new Dictionary([], comparer);\r\n        const keys = [];\r\n        const enumerator = getEnumerator(xs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const key = projection(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                let matchValue;\r\n                let outArg = 0;\r\n                matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\r\n                    outArg = (v | 0);\r\n                })), outArg];\r\n                if (matchValue[0]) {\r\n                    dict.set(key, matchValue[1] + 1);\r\n                }\r\n                else {\r\n                    dict.set(key, 1);\r\n                    void (keys.push(key));\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n        return map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys);\r\n    });\r\n}\r\n\r\nexport function groupBy(projection, xs, comparer) {\r\n    return delay(() => {\r\n        const dict = new Dictionary([], comparer);\r\n        const keys = [];\r\n        const enumerator = getEnumerator(xs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                const key = projection(x);\r\n                let matchValue;\r\n                let outArg = null;\r\n                matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\r\n                    outArg = v;\r\n                })), outArg];\r\n                if (matchValue[0]) {\r\n                    void (matchValue[1].push(x));\r\n                }\r\n                else {\r\n                    addToDict(dict, key, [x]);\r\n                    void (keys.push(key));\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n        return map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys);\r\n    });\r\n}\r\n\r\nexport function Array_distinct(xs, comparer) {\r\n    return toArray(distinct(xs, comparer));\r\n}\r\n\r\nexport function Array_distinctBy(projection, xs, comparer) {\r\n    return toArray(distinctBy(projection, xs, comparer));\r\n}\r\n\r\nexport function Array_except(itemsToExclude, xs, comparer) {\r\n    return toArray(except(itemsToExclude, xs, comparer));\r\n}\r\n\r\nexport function Array_countBy(projection, xs, comparer) {\r\n    return toArray(countBy(projection, xs, comparer));\r\n}\r\n\r\nexport function Array_groupBy(projection, xs, comparer) {\r\n    return toArray(map((tupledArg) => [tupledArg[0], toArray(tupledArg[1])], groupBy(projection, xs, comparer)));\r\n}\r\n\r\nexport function List_distinct(xs, comparer) {\r\n    return toList(distinct(xs, comparer));\r\n}\r\n\r\nexport function List_distinctBy(projection, xs, comparer) {\r\n    return toList(distinctBy(projection, xs, comparer));\r\n}\r\n\r\nexport function List_except(itemsToExclude, xs, comparer) {\r\n    return toList(except(itemsToExclude, xs, comparer));\r\n}\r\n\r\nexport function List_countBy(projection, xs, comparer) {\r\n    return toList(countBy(projection, xs, comparer));\r\n}\r\n\r\nexport function List_groupBy(projection, xs, comparer) {\r\n    return toList(map((tupledArg) => [tupledArg[0], toList(tupledArg[1])], groupBy(projection, xs, comparer)));\r\n}\r\n\r\n","import { ofArray, indexed, choose, head, empty, length as length_1, collect as collect_1, map as map_1, sortBy } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/List.js\";\nimport { minBy, tryFindIndex, collect, map, filter, length } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Seq.js\";\nimport { arrayHash, equalArrays, equals, compare as compare_1, int32ToString, comparePrimitives } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Util.js\";\nimport { filter as filter_1, tryFind, FSharpMap__get_Count, exists } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Map.js\";\nimport { FlukeDate, Year, DateId, FlukeDateTime } from \"./Domain/UserInteraction.fs.js\";\nimport { day as day_8, month as month_8, year as year_8, compare, addDays, create } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Date.js\";\nimport { FSharpChoice$2 } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Choice.js\";\nimport { map as map_2, defaultArg } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Option.js\";\nimport { Union } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Types.js\";\nimport { enum_type, int32_type, parseEnum, union_type } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Reflection.js\";\nimport { Day } from \"./Domain/Model.fs.js\";\nimport { List_groupBy } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Seq2.js\";\n\nexport function sortLanesByFrequency(lanes) {\n    return sortBy((tupledArg) => (length(filter((_arg1_1) => {\n        switch (_arg1_1.tag) {\n            case 0:\n            case 1: {\n                return true;\n            }\n            default: {\n                return false;\n            }\n        }\n    }, map((_arg1) => _arg1[1], tupledArg[1]))) - length(collect((cellState) => cellState.Sessions, map((_arg1_2) => _arg1_2[1], tupledArg[0].CellStateMap)))), lanes, {\n        Compare: (x, y) => comparePrimitives(x, y),\n    });\n}\n\nexport function sortLanesByIncomingRecurrency(dayStart, position, lanes) {\n    return sortBy((tupledArg) => {\n        const statusMap = tupledArg[1];\n        if (!exists((dateId, status) => {\n            let matchValue, dateStart, _arg8, dateEnd, matchValue_1, _arg8_1, x;\n            const matchValue_2 = [(matchValue = [dayStart, position, dateId], (((dateStart = ((_arg8 = (new FlukeDateTime(matchValue[2].fields[0], matchValue[0])), create(_arg8.Date.Year.fields[0], _arg8.Date.Month, _arg8.Date.Day.fields[0], _arg8.Time.Hour.fields[0], _arg8.Time.Minute.fields[0], 0))), (dateEnd = addDays(dateStart, 1), (matchValue_1 = ((_arg8_1 = matchValue[1], create(_arg8_1.Date.Year.fields[0], _arg8_1.Date.Month, _arg8_1.Date.Day.fields[0], _arg8_1.Time.Hour.fields[0], _arg8_1.Time.Minute.fields[0], 0))), ((x = matchValue_1, (compare(x, dateStart) >= 0) ? (compare(x, dateEnd) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart, matchValue_1) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))))))).tag === 1) ? true : false), status];\n            let pattern_matching_result;\n            if (matchValue_2[0]) {\n                if (matchValue_2[1].tag === 0) {\n                    pattern_matching_result = 0;\n                }\n                else if (matchValue_2[1].tag === 1) {\n                    pattern_matching_result = 0;\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    return true;\n                }\n                case 1: {\n                    return false;\n                }\n            }\n        }, statusMap)) {\n            return FSharpMap__get_Count(statusMap) | 0;\n        }\n        else {\n            return defaultArg(tryFindIndex((_arg1_2) => {\n                let _arg5, _arg5_1, _arg5_2, _arg5_3;\n                let pattern_matching_result_1;\n                const activePatternResult38216 = _arg1_2;\n                if (activePatternResult38216[1].tag === 2) {\n                    if (compare((_arg5 = activePatternResult38216[0].fields[0], create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0)), (_arg5_1 = position.Date, create(_arg5_1.Year.fields[0], _arg5_1.Month, _arg5_1.Day.fields[0], 12, 0, 0))) > 0) {\n                        pattern_matching_result_1 = 0;\n                    }\n                    else {\n                        pattern_matching_result_1 = 1;\n                    }\n                }\n                else if (activePatternResult38216[1].tag === 5) {\n                    if (activePatternResult38216[1].fields[1].tag === 3) {\n                        if (compare((_arg5_2 = activePatternResult38216[0].fields[0], create(_arg5_2.Year.fields[0], _arg5_2.Month, _arg5_2.Day.fields[0], 12, 0, 0)), (_arg5_3 = position.Date, create(_arg5_3.Year.fields[0], _arg5_3.Month, _arg5_3.Day.fields[0], 12, 0, 0))) > 0) {\n                            pattern_matching_result_1 = 0;\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_1 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_1 = 1;\n                }\n                switch (pattern_matching_result_1) {\n                    case 0: {\n                        return true;\n                    }\n                    case 1: {\n                        return false;\n                    }\n                }\n            }, statusMap), FSharpMap__get_Count(statusMap)) | 0;\n        }\n    }, lanes, {\n        Compare: (x_1, y) => comparePrimitives(x_1, y),\n    });\n}\n\nexport class LaneSortType extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"TaskOrderList\", \"DefaultSort\"];\n    }\n}\n\nexport function LaneSortType$reflection() {\n    return union_type(\"Fluke.Shared.Sorting.LaneSortType\", [], LaneSortType, () => [[], []]);\n}\n\nexport function sortLanesByTimeOfDay(dayStart, position, lanes) {\n    let matchValue, dateStart, _arg8, dateEnd, matchValue_1, _arg8_1, x, date_1, copyOfStruct, _arg5;\n    let currentDateId;\n    const position_1 = position;\n    currentDateId = (new DateId(0, ((matchValue = [dayStart, position_1, new DateId(0, position_1.Date)], (((dateStart = ((_arg8 = (new FlukeDateTime(matchValue[2].fields[0], matchValue[0])), create(_arg8.Date.Year.fields[0], _arg8.Date.Month, _arg8.Date.Day.fields[0], _arg8.Time.Hour.fields[0], _arg8.Time.Minute.fields[0], 0))), (dateEnd = addDays(dateStart, 1), (matchValue_1 = ((_arg8_1 = matchValue[1], create(_arg8_1.Date.Year.fields[0], _arg8_1.Date.Month, _arg8_1.Date.Day.fields[0], _arg8_1.Time.Hour.fields[0], _arg8_1.Time.Minute.fields[0], 0))), ((x = matchValue_1, (compare(x, dateStart) >= 0) ? (compare(x, dateEnd) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart, matchValue_1) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))))))).tag === 1) ? true : false)) ? position_1.Date : ((date_1 = ((copyOfStruct = ((_arg5 = position_1.Date, create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0))), addDays(copyOfStruct, -1))), new FlukeDate(new Year(0, year_8(date_1)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_8(date_1))), new Day(0, day_8(date_1)))))));\n    return map_1((tuple_2) => tuple_2[1], sortBy((tuple_1) => tuple_1[0], collect_1((tupledArg_2) => map_1((tupledArg_3) => [(tupledArg_2[0][0] * 1000) + tupledArg_3[0], tupledArg_3[1]], tupledArg_2[1]), List_groupBy((tupledArg_1) => {\n        const _arg4_1 = tupledArg_1[1];\n        return minBy((tuple) => tuple[0], map((_arg2_1) => {\n            const activePatternResult38271 = _arg2_1;\n            const tupledArg = [activePatternResult38271[0], activePatternResult38271[1]];\n            const $007CPostponedUntil$007CPostponed$007CWasPostponed$007CNotPostponed$007C = (_arg1_1) => {\n                let dayStart_5, time_1, position_9, referenceDay_1, dateToCompare, time_2, this$, time_3, this$_1, date_2, copyOfStruct_1, _arg5_1, _arg8_2, _arg8_3;\n                let pattern_matching_result;\n                if (_arg1_1.tag === 1) {\n                    if (_arg1_1.fields[0] != null) {\n                        if ((dayStart_5 = dayStart, (time_1 = _arg1_1.fields[0], (position_9 = position, (referenceDay_1 = tupledArg[0].fields[0], (dateToCompare = (new FlukeDateTime((((time_2 = time_1, (this$ = dayStart_5, (compare_1(this$.Hour, time_2.Hour) > 0) ? true : (equals(this$.Hour, time_2.Hour) ? (compare_1(this$.Minute, time_2.Minute) >= 0) : false)))) ? ((time_3 = dayStart_5, (this$_1 = position_9.Time, (compare_1(this$_1.Hour, time_3.Hour) > 0) ? true : (equals(this$_1.Hour, time_3.Hour) ? (compare_1(this$_1.Minute, time_3.Minute) >= 0) : false)))) : false) ? ((date_2 = ((copyOfStruct_1 = ((_arg5_1 = referenceDay_1, create(_arg5_1.Year.fields[0], _arg5_1.Month, _arg5_1.Day.fields[0], 12, 0, 0))), addDays(copyOfStruct_1, 1))), new FlukeDate(new Year(0, year_8(date_2)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_8(date_2))), new Day(0, day_8(date_2))))) : referenceDay_1, time_1)), compare((_arg8_2 = position_9, create(_arg8_2.Date.Year.fields[0], _arg8_2.Date.Month, _arg8_2.Date.Day.fields[0], _arg8_2.Time.Hour.fields[0], _arg8_2.Time.Minute.fields[0], 0)), (_arg8_3 = dateToCompare, create(_arg8_3.Date.Year.fields[0], _arg8_3.Date.Month, _arg8_3.Date.Day.fields[0], _arg8_3.Time.Hour.fields[0], _arg8_3.Time.Minute.fields[0], 0))) >= 0)))))) {\n                            pattern_matching_result = 1;\n                        }\n                        else {\n                            pattern_matching_result = 2;\n                        }\n                    }\n                    else {\n                        pattern_matching_result = 0;\n                    }\n                }\n                else {\n                    pattern_matching_result = 2;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        return new FSharpChoice$2(1, void 0);\n                    }\n                    case 1: {\n                        return new FSharpChoice$2(2, void 0);\n                    }\n                    case 2: {\n                        if (_arg1_1.tag === 1) {\n                            return new FSharpChoice$2(0, void 0);\n                        }\n                        else {\n                            return new FSharpChoice$2(3, void 0);\n                        }\n                    }\n                }\n            };\n            const $007CSchedulingRecurrency$007CManualWithSuggestion$007CManualWithoutSuggestion$007CHasSessionToday$007C = (taskState_1) => {\n                if (taskState_1.Task.Scheduling.tag === 1) {\n                    return new FSharpChoice$2(0, void 0);\n                }\n                else if (length_1(defaultArg(map_2((cellState) => cellState.Sessions, tryFind(currentDateId, taskState_1.CellStateMap)), empty())) > 0) {\n                    return new FSharpChoice$2(3, void 0);\n                }\n                else if (taskState_1.Task.Scheduling.tag === 0) {\n                    if (taskState_1.Task.Scheduling.fields[0].tag === 1) {\n                        return new FSharpChoice$2(2, void 0);\n                    }\n                    else {\n                        return new FSharpChoice$2(1, void 0);\n                    }\n                }\n                else {\n                    throw (new Error(\"Match failure: Fluke.Shared.Domain.Model.Scheduling\"));\n                }\n            };\n            return head(choose((_arg13) => {\n                if (_arg13[1] == null) {\n                    return void 0;\n                }\n                else {\n                    return [_arg13[0], _arg13[1]];\n                }\n            }, indexed(map_1((orderFn) => orderFn([tupledArg[1], _arg4_1[0]]), ofArray([(_arg2) => ((_arg2[0].tag === 4) ? (new LaneSortType(0)) : (void 0)), (_arg3) => ((_arg3[0].tag === 5) ? ((_arg3[0].fields[1].tag === 3) ? (new LaneSortType(0)) : (void 0)) : (void 0)), (_arg4) => ((_arg4[0].tag === 5) ? (($007CPostponedUntil$007CPostponed$007CWasPostponed$007CNotPostponed$007C(_arg4[0].fields[1]).tag === 2) ? (new LaneSortType(0)) : (void 0)) : ((_arg4[0].tag === 2) ? (new LaneSortType(0)) : (void 0))), (_arg5_2) => ((_arg5_2[0].tag === 5) ? (($007CPostponedUntil$007CPostponed$007CWasPostponed$007CNotPostponed$007C(_arg5_2[0].fields[1]).tag === 0) ? (new LaneSortType(0)) : (void 0)) : (void 0)), (_arg6) => ((_arg6[0].tag === 1) ? (($007CSchedulingRecurrency$007CManualWithSuggestion$007CManualWithoutSuggestion$007CHasSessionToday$007C(_arg6[1]).tag === 0) ? (new LaneSortType(0)) : (void 0)) : (void 0)), (_arg7) => ((_arg7[0].tag === 1) ? (($007CSchedulingRecurrency$007CManualWithSuggestion$007CManualWithoutSuggestion$007CHasSessionToday$007C(_arg7[1]).tag === 1) ? (new LaneSortType(0)) : (void 0)) : (void 0)), (_arg8_4) => ((_arg8_4[0].tag === 5) ? ((_arg8_4[0].fields[1].tag === 0) ? (new LaneSortType(1)) : (void 0)) : (void 0)), (_arg9_1) => ((_arg9_1[0].tag === 5) ? ((_arg9_1[0].fields[1].tag === 2) ? (new LaneSortType(1)) : (void 0)) : (void 0)), (_arg10) => ((_arg10[0].tag === 5) ? (($007CPostponedUntil$007CPostponed$007CWasPostponed$007CNotPostponed$007C(_arg10[0].fields[1]).tag === 1) ? (new LaneSortType(0)) : (void 0)) : (void 0)), (_arg11) => (($007CSchedulingRecurrency$007CManualWithSuggestion$007CManualWithoutSuggestion$007CHasSessionToday$007C(_arg11[1]).tag === 3) ? (new LaneSortType(1)) : (void 0)), (_arg12) => (new LaneSortType(1))])))));\n        }, filter_1((dateId_2, _arg1_2) => {\n            let dateStart_1, _arg8_5, dateEnd_1, matchValue_4, _arg8_6, x_1;\n            const matchValue_3 = [dayStart, position, dateId_2];\n            if (((dateStart_1 = ((_arg8_5 = (new FlukeDateTime(matchValue_3[2].fields[0], matchValue_3[0])), create(_arg8_5.Date.Year.fields[0], _arg8_5.Date.Month, _arg8_5.Date.Day.fields[0], _arg8_5.Time.Hour.fields[0], _arg8_5.Time.Minute.fields[0], 0))), (dateEnd_1 = addDays(dateStart_1, 1), (matchValue_4 = ((_arg8_6 = matchValue_3[1], create(_arg8_6.Date.Year.fields[0], _arg8_6.Date.Month, _arg8_6.Date.Day.fields[0], _arg8_6.Time.Hour.fields[0], _arg8_6.Time.Minute.fields[0], 0))), ((x_1 = matchValue_4, (compare(x_1, dateStart_1) >= 0) ? (compare(x_1, dateEnd_1) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_1, matchValue_4) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))))))).tag === 1) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }, _arg4_1[1])), {\n            Compare: (x_2, y) => comparePrimitives(x_2, y),\n        });\n    }, indexed(lanes), {\n        Equals: (x_3, y_1) => equalArrays(x_3, y_1),\n        GetHashCode: (x_3) => arrayHash(x_3),\n    })), {\n        Compare: (x_4, y_2) => comparePrimitives(x_4, y_2),\n    }));\n}\n\n","import { Union } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Types.js\";\nimport { union_type } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Reflection.js\";\nimport { defaultArg, map } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Option.js\";\nimport { compare, create } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Date.js\";\nimport { empty as empty_1, map as map_1, collect, sortByDescending, sortBy, isEmpty, tryLast, tryHead } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/List.js\";\nimport { empty, exists, filter } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Seq.js\";\nimport { safeHash, comparePrimitives, equals } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Util.js\";\nimport { CellStatus } from \"./Domain/State.fs.js\";\nimport { tryFind, ofSeq, toSeq } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Map.js\";\nimport { Priority_toTag } from \"./Domain/ModelGenerated.fs.js\";\nimport { sortLanesByFrequency, sortLanesByIncomingRecurrency, sortLanesByTimeOfDay } from \"./Sorting.fs.js\";\nimport { List_groupBy } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Seq2.js\";\n\nexport class View extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Information\", \"HabitTracker\", \"Priority\", \"BulletJournal\"];\n    }\n}\n\nexport function View$reflection() {\n    return union_type(\"Fluke.Shared.View.View\", [], View, () => [[], [], [], []]);\n}\n\nexport function getDateRange(dateSequence) {\n    const matchValue = [map((arg00) => {\n        const _arg5 = arg00;\n        return create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0);\n    }, tryHead(dateSequence)), map((arg00_1) => {\n        const _arg5_1 = arg00_1;\n        return create(_arg5_1.Year.fields[0], _arg5_1.Month, _arg5_1.Day.fields[0], 12, 0, 0);\n    }, tryLast(dateSequence))];\n    let pattern_matching_result, dateRangeEnd_1, dateRangeStart_1;\n    if (matchValue[0] != null) {\n        if (matchValue[1] != null) {\n            pattern_matching_result = 0;\n            dateRangeEnd_1 = matchValue[1];\n            dateRangeStart_1 = matchValue[0];\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return [dateRangeStart_1, dateRangeEnd_1];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function filterTaskStateSeq(view, dateSequence, taskStateSeq) {\n    const matchValue = [getDateRange(dateSequence), view];\n    let pattern_matching_result, dateRangeEnd, dateRangeStart;\n    if (matchValue[1].tag === 1) {\n        if (matchValue[0] != null) {\n            pattern_matching_result = 1;\n            dateRangeEnd = matchValue[0][1];\n            dateRangeStart = matchValue[0][0];\n        }\n        else {\n            pattern_matching_result = 3;\n        }\n    }\n    else if (matchValue[1].tag === 3) {\n        if (matchValue[0] != null) {\n            pattern_matching_result = 1;\n            dateRangeEnd = matchValue[0][1];\n            dateRangeStart = matchValue[0][0];\n        }\n        else {\n            pattern_matching_result = 3;\n        }\n    }\n    else if (matchValue[1].tag === 2) {\n        pattern_matching_result = 2;\n    }\n    else {\n        pattern_matching_result = 0;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return filter((_arg1) => {\n                let pattern_matching_result_1;\n                if (_arg1.Task.Scheduling.tag === 0) {\n                    if (_arg1.Task.Scheduling.fields[0].tag === 1) {\n                        pattern_matching_result_1 = 0;\n                    }\n                    else {\n                        pattern_matching_result_1 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_1 = 1;\n                }\n                switch (pattern_matching_result_1) {\n                    case 0: {\n                        return true;\n                    }\n                    case 1: {\n                        return false;\n                    }\n                }\n            }, taskStateSeq);\n        }\n        case 1: {\n            return filter((_arg2) => {\n                let pattern_matching_result_2, taskState;\n                if (_arg2.Task.Scheduling.tag === 0) {\n                    if (_arg2.Task.Scheduling.fields[0].tag === 1) {\n                        pattern_matching_result_2 = 0;\n                        taskState = _arg2;\n                    }\n                    else {\n                        pattern_matching_result_2 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_2 = 1;\n                }\n                switch (pattern_matching_result_2) {\n                    case 0: {\n                        return exists((tupledArg) => {\n                            let x, _arg5;\n                            const cellState = tupledArg[1];\n                            if ((x = ((_arg5 = tupledArg[0].fields[0], create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0))), (compare(x, dateRangeStart) >= 0) ? (compare(x, dateRangeEnd) <= 0) : false)) {\n                                if ((!isEmpty(cellState.Sessions)) ? true : (!isEmpty(cellState.Attachments))) {\n                                    return true;\n                                }\n                                else {\n                                    return !equals(cellState.Status, new CellStatus(0));\n                                }\n                            }\n                            else {\n                                return false;\n                            }\n                        }, toSeq(taskState.CellStateMap));\n                    }\n                    case 1: {\n                        return true;\n                    }\n                }\n            }, taskStateSeq);\n        }\n        case 2: {\n            return filter((_arg3_1) => {\n                let pattern_matching_result_3;\n                if (_arg3_1.Task.Information.tag === 3) {\n                    pattern_matching_result_3 = 0;\n                }\n                else if (_arg3_1.Task.Priority != null) {\n                    if (isEmpty(_arg3_1.Sessions)) {\n                        if ((Priority_toTag(_arg3_1.Task.Priority) + 1) < 5) {\n                            pattern_matching_result_3 = 1;\n                        }\n                        else {\n                            pattern_matching_result_3 = 2;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_3 = 2;\n                    }\n                }\n                else {\n                    pattern_matching_result_3 = 2;\n                }\n                switch (pattern_matching_result_3) {\n                    case 0: {\n                        return false;\n                    }\n                    case 1: {\n                        return false;\n                    }\n                    case 2: {\n                        if (_arg3_1.Task.Scheduling.tag === 0) {\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    }\n                }\n            }, taskStateSeq);\n        }\n        case 3: {\n            return empty();\n        }\n    }\n}\n\nexport function sortLanes(input) {\n    const lanes = sortBy((tupledArg) => tupledArg[0].Task.Name.fields[0], input.Lanes, {\n        Compare: (x, y) => comparePrimitives(x, y),\n    });\n    const matchValue = input.View;\n    switch (matchValue.tag) {\n        case 1: {\n            return sortLanesByTimeOfDay(input.DayStart, input.Position, sortLanesByIncomingRecurrency(input.DayStart, input.Position, sortLanesByFrequency(lanes)));\n        }\n        case 2: {\n            return sortByDescending((tupledArg_2) => defaultArg(map((x_2) => Priority_toTag(x_2), tupledArg_2[0].Task.Priority), -1), lanes, {\n                Compare: (x_3, y_2) => comparePrimitives(x_3, y_2),\n            });\n        }\n        case 3: {\n            return lanes;\n        }\n        default: {\n            const lanes_1 = ofSeq(List_groupBy((tupledArg_1) => tupledArg_1[0].Task.Information, lanes, {\n                Equals: (x_1, y_1) => equals(x_1, y_1),\n                GetHashCode: (x_1) => safeHash(x_1),\n            }));\n            return collect((tuple) => tuple[1], map_1((informationState) => [informationState.Information, defaultArg(tryFind(informationState.Information, lanes_1), empty_1())], input.InformationStateList));\n        }\n    }\n}\n\n","import { Union } from \"../.fable/fable-library.3.2.7/Types.js\";\nimport { string_type, union_type } from \"../.fable/fable-library.3.2.7/Reflection.js\";\nimport { Minute$reflection } from \"../../Fluke.Shared/Domain/Model.fs.js\";\nimport { interpolate, toText } from \"../.fable/fable-library.3.2.7/String.js\";\n\nexport class Hover extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Cell\", \"Task\", \"Information\", \"None\"];\n    }\n}\n\nexport function Hover$reflection() {\n    return union_type(\"Fluke.UI.Frontend.TempUI.Hover\", [], Hover, () => [[], [], [], []]);\n}\n\nexport class DockType extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Databases\", \"Settings\", \"Database\", \"Information\", \"Task\", \"Cell\"];\n    }\n}\n\nexport function DockType$reflection() {\n    return union_type(\"Fluke.UI.Frontend.TempUI.DockType\", [], DockType, () => [[], [], [], [], [], []]);\n}\n\nexport class ActiveSession extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ActiveSession\"];\n    }\n}\n\nexport function ActiveSession$reflection() {\n    return union_type(\"Fluke.UI.Frontend.TempUI.ActiveSession\", [], ActiveSession, () => [[[\"taskName\", string_type], [\"duration\", Minute$reflection()]]]);\n}\n\nexport function informationColor(_arg1) {\n    switch (_arg1.tag) {\n        case 1: {\n            return \"#666\";\n        }\n        case 2: {\n            return \"#333\";\n        }\n        case 3: {\n            return toText(interpolate(\"[%P()]\", [informationColor(_arg1.fields[0])]));\n        }\n        default: {\n            return \"#999\";\n        }\n    }\n}\n\nexport function manualCellStatusColor(_arg1) {\n    if (_arg1.tag === 0) {\n        return \"#339933\";\n    }\n    else if (_arg1.tag === 2) {\n        return \"#673ab7\";\n    }\n    else if (_arg1.tag === 3) {\n        return \"#003038\";\n    }\n    else if (_arg1.fields[0] != null) {\n        return \"#604800\";\n    }\n    else {\n        return \"#b08200\";\n    }\n}\n\nexport function cellStatusColor(_arg1) {\n    switch (_arg1.tag) {\n        case 1: {\n            return \"#4c664e\";\n        }\n        case 2: {\n            return \"#262626\";\n        }\n        case 3: {\n            return \"#990022\";\n        }\n        case 4: {\n            return \"#530011\";\n        }\n        case 5: {\n            return manualCellStatusColor(_arg1.fields[1]);\n        }\n        default: {\n            return \"#595959\";\n        }\n    }\n}\n\n","import { sort as sort_1, toArray as toArray_1, map as map_1, toList, empty, singleton, append, delay } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Seq.js\";\nimport { dayOfWeek as dayOfWeek_1, day as day_45, month as month_44, year as year_43, create, addDays, compare } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Date.js\";\nimport { ofArray, filter, cons, tail as tail_1, exists, empty as empty_1, isEmpty, last as last_1, head as head_1, map, sort, toArray } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/List.js\";\nimport { DateId, FlukeDateTime, FlukeDate, Year } from \"./Domain/UserInteraction.fs.js\";\nimport { union_type, enum_type, int32_type, parseEnum } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Reflection.js\";\nimport { max as max_15, min as min_15, equals, compare as compare_1, int32ToString } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Util.js\";\nimport { Day } from \"./Domain/Model.fs.js\";\nimport { equalsWith, last, head } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Array.js\";\nimport { Union } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Types.js\";\nimport { CellStatus, CellStatus$reflection } from \"./Domain/State.fs.js\";\nimport { FSharpChoice$2 } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Choice.js\";\nimport { ofSeq, tryFind } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Map.js\";\n\nexport function getDateSequence(paddingLeft, paddingRight, cellDates) {\n    const dateLoop = (date, maxDate) => delay(() => ((compare(date, maxDate) <= 0) ? append(singleton(date), delay(() => dateLoop(addDays(date, 1), maxDate))) : empty()));\n    const dates = toArray(sort(map((arg00) => {\n        const _arg5 = arg00;\n        return create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0);\n    }, cellDates), {\n        Compare: (x, y) => compare(x, y),\n    }));\n    return toList(map_1((arg00_1) => {\n        const date_1 = arg00_1;\n        return new FlukeDate(new Year(0, year_43(date_1)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_44(date_1))), new Day(0, day_45(date_1)));\n    }, dateLoop(addDays(head(dates), -paddingLeft), addDays(last(dates), paddingRight))));\n}\n\nexport class LaneCellRenderState extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"WaitingFirstEvent\", \"WaitingEvent\", \"DayMatch\", \"Counting\"];\n    }\n}\n\nexport function LaneCellRenderState$reflection() {\n    return union_type(\"Fluke.Shared.Rendering.LaneCellRenderState\", [], LaneCellRenderState, () => [[], [], [], [[\"Item\", int32_type]]]);\n}\n\nexport class LaneCellRenderOutput extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"EmptyCell\", \"StatusCell\", \"TodayCell\"];\n    }\n}\n\nexport function LaneCellRenderOutput$reflection() {\n    return union_type(\"Fluke.Shared.Rendering.LaneCellRenderOutput\", [], LaneCellRenderOutput, () => [[], [[\"Item\", CellStatus$reflection()]], []]);\n}\n\nexport function renderTaskStatusMap(dayStart, position, dateSequence, taskState) {\n    let dates, dates_1, date_2, e2, _arg8, date_3, e2_1, _arg8_1;\n    const firstDateRange = new FlukeDateTime(head_1(dateSequence), dayStart);\n    const lastDateRange = new FlukeDateTime(last_1(dateSequence), dayStart);\n    const loop = (renderState, _arg1_1) => {\n        let matchValue, dateStart, _arg8_2, dateEnd, matchValue_1, _arg8_3, x_4, date_7, copyOfStruct, _arg5_1, x_5, tupledArg_1, dateStart_2, _arg8_6, dateEnd_2, matchValue_5, _arg8_7, x_6, tupledArg_2, dateStart_3, _arg8_8, dateEnd_3, matchValue_6, _arg8_9, x_7, matchValue_7, tupledArg_3, dateStart_4, _arg8_10, dateEnd_4, matchValue_8, _arg8_11, x_8, dayStart_13, time_8, position_33, referenceDay_7, dateToCompare, time_9, this$, time_10, this$_1, date_12, copyOfStruct_1, _arg5_2, _arg8_12, _arg8_13, until_1, matchValue_21, tupledArg_11, dateStart_12, _arg8_28, dateEnd_12, matchValue_20, _arg8_29, x_17, tupledArg_10, dateStart_11, _arg8_26, dateEnd_11, matchValue_19, _arg8_27, x_16, tupledArg_9, dateStart_10, _arg8_24, dateEnd_10, matchValue_17, _arg8_25, x_15, x_13, tupledArg_8, dateStart_9, _arg8_22, dateEnd_9, matchValue_16, _arg8_23, x_14, matchValue_22, dayStart_30, time_19, position_82, referenceDay_16, dateToCompare_1, time_20, this$_2, time_21, this$_3, date_21, copyOfStruct_3, _arg5_4, _arg8_30, _arg8_31, missedAfter_1, dayStart_31, time_22, position_83, referenceDay_17, dateToCompare_2, time_23, this$_4, time_24, this$_5, date_22, copyOfStruct_4, _arg5_5, _arg8_32, _arg8_33, pendingAfter_1;\n        if (isEmpty(_arg1_1)) {\n            return empty_1();\n        }\n        else {\n            const moment = head_1(_arg1_1);\n            let dateId_1;\n            const position_1 = moment;\n            dateId_1 = (new DateId(0, ((matchValue = [dayStart, position_1, new DateId(0, position_1.Date)], (((dateStart = ((_arg8_2 = (new FlukeDateTime(matchValue[2].fields[0], matchValue[0])), create(_arg8_2.Date.Year.fields[0], _arg8_2.Date.Month, _arg8_2.Date.Day.fields[0], _arg8_2.Time.Hour.fields[0], _arg8_2.Time.Minute.fields[0], 0))), (dateEnd = addDays(dateStart, 1), (matchValue_1 = ((_arg8_3 = matchValue[1], create(_arg8_3.Date.Year.fields[0], _arg8_3.Date.Month, _arg8_3.Date.Day.fields[0], _arg8_3.Time.Hour.fields[0], _arg8_3.Time.Minute.fields[0], 0))), ((x_4 = matchValue_1, (compare(x_4, dateStart) >= 0) ? (compare(x_4, dateEnd) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart, matchValue_1) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))))))).tag === 1) ? true : false)) ? position_1.Date : ((date_7 = ((copyOfStruct = ((_arg5_1 = position_1.Date, create(_arg5_1.Year.fields[0], _arg5_1.Month, _arg5_1.Day.fields[0], 12, 0, 0))), addDays(copyOfStruct, -1))), new FlukeDate(new Year(0, year_43(date_7)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_44(date_7))), new Day(0, day_45(date_7)))))));\n            const referenceDay_2 = dateId_1.fields[0];\n            const cellState = tryFind(dateId_1, taskState.CellStateMap);\n            const group = [dayStart, position, dateId_1];\n            let patternInput_1;\n            let pattern_matching_result, _user, manualCellStatus, userStatus;\n            if (cellState != null) {\n                if (cellState.Status.tag === 5) {\n                    pattern_matching_result = 0;\n                    _user = cellState.Status.fields[0];\n                    manualCellStatus = cellState.Status.fields[1];\n                    userStatus = cellState.Status;\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    let renderState_1;\n                    const matchValue_3 = [manualCellStatus, group];\n                    let pattern_matching_result_1;\n                    if (matchValue_3[0].tag === 1) {\n                        if (matchValue_3[0].fields[0] == null) {\n                            let activePatternResult38167;\n                            const tupledArg = matchValue_3[1];\n                            let dateStart_1;\n                            const _arg8_4 = new FlukeDateTime(tupledArg[2].fields[0], tupledArg[0]);\n                            dateStart_1 = create(_arg8_4.Date.Year.fields[0], _arg8_4.Date.Month, _arg8_4.Date.Day.fields[0], _arg8_4.Time.Hour.fields[0], _arg8_4.Time.Minute.fields[0], 0);\n                            const dateEnd_1 = addDays(dateStart_1, 1);\n                            let matchValue_4;\n                            const _arg8_5 = tupledArg[1];\n                            matchValue_4 = create(_arg8_5.Date.Year.fields[0], _arg8_5.Date.Month, _arg8_5.Date.Day.fields[0], _arg8_5.Time.Hour.fields[0], _arg8_5.Time.Minute.fields[0], 0);\n                            activePatternResult38167 = (((x_5 = matchValue_4, (compare(x_5, dateStart_1) >= 0) ? (compare(x_5, dateEnd_1) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_1, matchValue_4) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))));\n                            if (activePatternResult38167.tag === 0) {\n                                pattern_matching_result_1 = 1;\n                            }\n                            else if (activePatternResult38167.tag === 1) {\n                                pattern_matching_result_1 = 2;\n                            }\n                            else {\n                                pattern_matching_result_1 = 3;\n                            }\n                        }\n                        else if (((tupledArg_1 = matchValue_3[1], (dateStart_2 = ((_arg8_6 = (new FlukeDateTime(tupledArg_1[2].fields[0], tupledArg_1[0])), create(_arg8_6.Date.Year.fields[0], _arg8_6.Date.Month, _arg8_6.Date.Day.fields[0], _arg8_6.Time.Hour.fields[0], _arg8_6.Time.Minute.fields[0], 0))), (dateEnd_2 = addDays(dateStart_2, 1), (matchValue_5 = ((_arg8_7 = tupledArg_1[1], create(_arg8_7.Date.Year.fields[0], _arg8_7.Date.Month, _arg8_7.Date.Day.fields[0], _arg8_7.Time.Hour.fields[0], _arg8_7.Time.Minute.fields[0], 0))), ((x_6 = matchValue_5, (compare(x_6, dateStart_2) >= 0) ? (compare(x_6, dateEnd_2) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_2, matchValue_5) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0)))))))).tag === 0) {\n                            pattern_matching_result_1 = 0;\n                        }\n                        else {\n                            pattern_matching_result_1 = 3;\n                        }\n                    }\n                    else if (matchValue_3[0].tag === 3) {\n                        if (((tupledArg_2 = matchValue_3[1], (dateStart_3 = ((_arg8_8 = (new FlukeDateTime(tupledArg_2[2].fields[0], tupledArg_2[0])), create(_arg8_8.Date.Year.fields[0], _arg8_8.Date.Month, _arg8_8.Date.Day.fields[0], _arg8_8.Time.Hour.fields[0], _arg8_8.Time.Minute.fields[0], 0))), (dateEnd_3 = addDays(dateStart_3, 1), (matchValue_6 = ((_arg8_9 = tupledArg_2[1], create(_arg8_9.Date.Year.fields[0], _arg8_9.Date.Month, _arg8_9.Date.Day.fields[0], _arg8_9.Time.Hour.fields[0], _arg8_9.Time.Minute.fields[0], 0))), ((x_7 = matchValue_6, (compare(x_7, dateStart_3) >= 0) ? (compare(x_7, dateEnd_3) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_3, matchValue_6) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0)))))))).tag === 0) {\n                            pattern_matching_result_1 = 1;\n                        }\n                        else {\n                            pattern_matching_result_1 = 3;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_1 = 3;\n                    }\n                    switch (pattern_matching_result_1) {\n                        case 0: {\n                            renderState_1 = renderState;\n                            break;\n                        }\n                        case 1: {\n                            renderState_1 = (new LaneCellRenderState(1));\n                            break;\n                        }\n                        case 2: {\n                            renderState_1 = (new LaneCellRenderState(2));\n                            break;\n                        }\n                        case 3: {\n                            renderState_1 = (new LaneCellRenderState(3, 1));\n                            break;\n                        }\n                    }\n                    patternInput_1 = [new LaneCellRenderOutput(1, (matchValue_7 = [manualCellStatus, group], (matchValue_7[0].tag === 1) ? ((matchValue_7[0].fields[0] != null) ? ((((tupledArg_3 = matchValue_7[1], (dateStart_4 = ((_arg8_10 = (new FlukeDateTime(tupledArg_3[2].fields[0], tupledArg_3[0])), create(_arg8_10.Date.Year.fields[0], _arg8_10.Date.Month, _arg8_10.Date.Day.fields[0], _arg8_10.Time.Hour.fields[0], _arg8_10.Time.Minute.fields[0], 0))), (dateEnd_4 = addDays(dateStart_4, 1), (matchValue_8 = ((_arg8_11 = tupledArg_3[1], create(_arg8_11.Date.Year.fields[0], _arg8_11.Date.Month, _arg8_11.Date.Day.fields[0], _arg8_11.Time.Hour.fields[0], _arg8_11.Time.Minute.fields[0], 0))), ((x_8 = matchValue_8, (compare(x_8, dateStart_4) >= 0) ? (compare(x_8, dateEnd_4) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_4, matchValue_8) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0)))))))).tag === 1) ? (((dayStart_13 = dayStart, (time_8 = matchValue_7[0].fields[0], (position_33 = position, (referenceDay_7 = dateId_1.fields[0], (dateToCompare = (new FlukeDateTime((((time_9 = time_8, (this$ = dayStart_13, (compare_1(this$.Hour, time_9.Hour) > 0) ? true : (equals(this$.Hour, time_9.Hour) ? (compare_1(this$.Minute, time_9.Minute) >= 0) : false)))) ? ((time_10 = dayStart_13, (this$_1 = position_33.Time, (compare_1(this$_1.Hour, time_10.Hour) > 0) ? true : (equals(this$_1.Hour, time_10.Hour) ? (compare_1(this$_1.Minute, time_10.Minute) >= 0) : false)))) : false) ? ((date_12 = ((copyOfStruct_1 = ((_arg5_2 = referenceDay_7, create(_arg5_2.Year.fields[0], _arg5_2.Month, _arg5_2.Day.fields[0], 12, 0, 0))), addDays(copyOfStruct_1, 1))), new FlukeDate(new Year(0, year_43(date_12)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_44(date_12))), new Day(0, day_45(date_12))))) : referenceDay_7, time_8)), compare((_arg8_12 = position_33, create(_arg8_12.Date.Year.fields[0], _arg8_12.Date.Month, _arg8_12.Date.Day.fields[0], _arg8_12.Time.Hour.fields[0], _arg8_12.Time.Minute.fields[0], 0)), (_arg8_13 = dateToCompare, create(_arg8_13.Date.Year.fields[0], _arg8_13.Date.Month, _arg8_13.Date.Day.fields[0], _arg8_13.Time.Hour.fields[0], _arg8_13.Time.Minute.fields[0], 0))) >= 0)))))) ? ((until_1 = matchValue_7[0].fields[0], new CellStatus(2))) : userStatus) : userStatus) : userStatus) : userStatus)), renderState_1];\n                    break;\n                }\n                case 1: {\n                    const getStatus = (renderState_2) => {\n                        let x_9, x_10, x_11;\n                        const matchValue_9 = [renderState_2, group];\n                        if (matchValue_9[0].tag === 2) {\n                            let activePatternResult38176;\n                            const tupledArg_4 = matchValue_9[1];\n                            let dateStart_5;\n                            const _arg8_14 = new FlukeDateTime(tupledArg_4[2].fields[0], tupledArg_4[0]);\n                            dateStart_5 = create(_arg8_14.Date.Year.fields[0], _arg8_14.Date.Month, _arg8_14.Date.Day.fields[0], _arg8_14.Time.Hour.fields[0], _arg8_14.Time.Minute.fields[0], 0);\n                            const dateEnd_5 = addDays(dateStart_5, 1);\n                            let matchValue_10;\n                            const _arg8_15 = tupledArg_4[1];\n                            matchValue_10 = create(_arg8_15.Date.Year.fields[0], _arg8_15.Date.Month, _arg8_15.Date.Day.fields[0], _arg8_15.Time.Hour.fields[0], _arg8_15.Time.Minute.fields[0], 0);\n                            activePatternResult38176 = (((x_9 = matchValue_10, (compare(x_9, dateStart_5) >= 0) ? (compare(x_9, dateEnd_5) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_5, matchValue_10) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))));\n                            if (activePatternResult38176.tag === 1) {\n                                return [new LaneCellRenderOutput(2), new LaneCellRenderState(3, 1)];\n                            }\n                            else if (activePatternResult38176.tag === 2) {\n                                return [new LaneCellRenderOutput(1, new CellStatus(2)), new LaneCellRenderState(3, 1)];\n                            }\n                            else {\n                                return [new LaneCellRenderOutput(1, new CellStatus(3)), new LaneCellRenderState(1)];\n                            }\n                        }\n                        else if (matchValue_9[0].tag === 1) {\n                            let activePatternResult38177;\n                            const tupledArg_5 = matchValue_9[1];\n                            let dateStart_6;\n                            const _arg8_16 = new FlukeDateTime(tupledArg_5[2].fields[0], tupledArg_5[0]);\n                            dateStart_6 = create(_arg8_16.Date.Year.fields[0], _arg8_16.Date.Month, _arg8_16.Date.Day.fields[0], _arg8_16.Time.Hour.fields[0], _arg8_16.Time.Minute.fields[0], 0);\n                            const dateEnd_6 = addDays(dateStart_6, 1);\n                            let matchValue_11;\n                            const _arg8_17 = tupledArg_5[1];\n                            matchValue_11 = create(_arg8_17.Date.Year.fields[0], _arg8_17.Date.Month, _arg8_17.Date.Day.fields[0], _arg8_17.Time.Hour.fields[0], _arg8_17.Time.Minute.fields[0], 0);\n                            activePatternResult38177 = (((x_10 = matchValue_11, (compare(x_10, dateStart_6) >= 0) ? (compare(x_10, dateEnd_6) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_6, matchValue_11) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))));\n                            if (activePatternResult38177.tag === 1) {\n                                return [new LaneCellRenderOutput(2), new LaneCellRenderState(3, 1)];\n                            }\n                            else if (activePatternResult38177.tag === 2) {\n                                return [new LaneCellRenderOutput(1, new CellStatus(2)), new LaneCellRenderState(3, 1)];\n                            }\n                            else {\n                                return [new LaneCellRenderOutput(1, new CellStatus(3)), new LaneCellRenderState(1)];\n                            }\n                        }\n                        else if (matchValue_9[0].tag === 3) {\n                            return [new LaneCellRenderOutput(0), new LaneCellRenderState(3, matchValue_9[0].fields[0] + 1)];\n                        }\n                        else {\n                            let activePatternResult38175;\n                            const tupledArg_6 = matchValue_9[1];\n                            let dateStart_7;\n                            const _arg8_18 = new FlukeDateTime(tupledArg_6[2].fields[0], tupledArg_6[0]);\n                            dateStart_7 = create(_arg8_18.Date.Year.fields[0], _arg8_18.Date.Month, _arg8_18.Date.Day.fields[0], _arg8_18.Time.Hour.fields[0], _arg8_18.Time.Minute.fields[0], 0);\n                            const dateEnd_7 = addDays(dateStart_7, 1);\n                            let matchValue_12;\n                            const _arg8_19 = tupledArg_6[1];\n                            matchValue_12 = create(_arg8_19.Date.Year.fields[0], _arg8_19.Date.Month, _arg8_19.Date.Day.fields[0], _arg8_19.Time.Hour.fields[0], _arg8_19.Time.Minute.fields[0], 0);\n                            activePatternResult38175 = (((x_11 = matchValue_12, (compare(x_11, dateStart_7) >= 0) ? (compare(x_11, dateEnd_7) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_7, matchValue_12) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))));\n                            if (activePatternResult38175.tag === 1) {\n                                return [new LaneCellRenderOutput(2), new LaneCellRenderState(3, 1)];\n                            }\n                            else if (activePatternResult38175.tag === 2) {\n                                return [new LaneCellRenderOutput(0), new LaneCellRenderState(0)];\n                            }\n                            else {\n                                return [new LaneCellRenderOutput(0), new LaneCellRenderState(0)];\n                            }\n                        }\n                    };\n                    const matchValue_13 = taskState.Task.Scheduling;\n                    if (matchValue_13.tag === 0) {\n                        const matchValue_18 = [renderState, group, matchValue_13.fields[0]];\n                        let pattern_matching_result_2;\n                        if (matchValue_18[0].tag === 0) {\n                            if (((tupledArg_10 = matchValue_18[1], (dateStart_11 = ((_arg8_26 = (new FlukeDateTime(tupledArg_10[2].fields[0], tupledArg_10[0])), create(_arg8_26.Date.Year.fields[0], _arg8_26.Date.Month, _arg8_26.Date.Day.fields[0], _arg8_26.Time.Hour.fields[0], _arg8_26.Time.Minute.fields[0], 0))), (dateEnd_11 = addDays(dateStart_11, 1), (matchValue_19 = ((_arg8_27 = tupledArg_10[1], create(_arg8_27.Date.Year.fields[0], _arg8_27.Date.Month, _arg8_27.Date.Day.fields[0], _arg8_27.Time.Hour.fields[0], _arg8_27.Time.Minute.fields[0], 0))), ((x_16 = matchValue_19, (compare(x_16, dateStart_11) >= 0) ? (compare(x_16, dateEnd_11) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_11, matchValue_19) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0)))))))).tag === 1) {\n                                if (matchValue_18[2].tag === 0) {\n                                    if (equals(taskState.Task.PendingAfter, void 0)) {\n                                        pattern_matching_result_2 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                patternInput_1 = [new LaneCellRenderOutput(1, new CellStatus(1)), new LaneCellRenderState(3, 1)];\n                                break;\n                            }\n                            case 1: {\n                                let pattern_matching_result_3;\n                                if (matchValue_18[0].tag === 0) {\n                                    if (((tupledArg_11 = matchValue_18[1], (dateStart_12 = ((_arg8_28 = (new FlukeDateTime(tupledArg_11[2].fields[0], tupledArg_11[0])), create(_arg8_28.Date.Year.fields[0], _arg8_28.Date.Month, _arg8_28.Date.Day.fields[0], _arg8_28.Time.Hour.fields[0], _arg8_28.Time.Minute.fields[0], 0))), (dateEnd_12 = addDays(dateStart_12, 1), (matchValue_20 = ((_arg8_29 = tupledArg_11[1], create(_arg8_29.Date.Year.fields[0], _arg8_29.Date.Month, _arg8_29.Date.Day.fields[0], _arg8_29.Time.Hour.fields[0], _arg8_29.Time.Minute.fields[0], 0))), ((x_17 = matchValue_20, (compare(x_17, dateStart_12) >= 0) ? (compare(x_17, dateEnd_12) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_12, matchValue_20) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0)))))))).tag === 1) {\n                                        if (matchValue_18[2].tag === 0) {\n                                            pattern_matching_result_3 = 0;\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 2;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        patternInput_1 = [new LaneCellRenderOutput(2), new LaneCellRenderState(3, 1)];\n                                        break;\n                                    }\n                                    case 1: {\n                                        patternInput_1 = [new LaneCellRenderOutput(1, new CellStatus(1)), new LaneCellRenderState(3, 1)];\n                                        break;\n                                    }\n                                    case 2: {\n                                        const patternInput = getStatus(renderState);\n                                        patternInput_1 = [(matchValue_21 = [patternInput[0], matchValue_13.fields[0]], (matchValue_21[0].tag === 0) ? ((matchValue_21[1].tag === 0) ? (new LaneCellRenderOutput(1, new CellStatus(1))) : matchValue_21[0]) : ((matchValue_21[0].tag === 2) ? (new LaneCellRenderOutput(1, new CellStatus(2))) : matchValue_21[0])), patternInput[1]];\n                                        break;\n                                    }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    else if (matchValue_13.fields[0].tag === 1) {\n                        const isDateMatched = exists((x_12) => x_12, map((_arg2_1) => {\n                            let copyOfStruct_2, _arg5_3;\n                            switch (_arg2_1.tag) {\n                                case 1: {\n                                    return equals(_arg2_1.fields[0], referenceDay_2.Day);\n                                }\n                                case 2: {\n                                    if (equals(_arg2_1.fields[0], referenceDay_2.Day)) {\n                                        return _arg2_1.fields[1] === referenceDay_2.Month;\n                                    }\n                                    else {\n                                        return false;\n                                    }\n                                }\n                                default: {\n                                    return _arg2_1.fields[0] === ((copyOfStruct_2 = ((_arg5_3 = referenceDay_2, create(_arg5_3.Year.fields[0], _arg5_3.Month, _arg5_3.Day.fields[0], 12, 0, 0))), dayOfWeek_1(copyOfStruct_2)));\n                                }\n                            }\n                        }, matchValue_13.fields[0].fields[0]));\n                        const matchValue_14 = [renderState, group];\n                        let pattern_matching_result_4;\n                        if (matchValue_14[0].tag === 0) {\n                            let activePatternResult38184;\n                            const tupledArg_7 = matchValue_14[1];\n                            let dateStart_8;\n                            const _arg8_20 = new FlukeDateTime(tupledArg_7[2].fields[0], tupledArg_7[0]);\n                            dateStart_8 = create(_arg8_20.Date.Year.fields[0], _arg8_20.Date.Month, _arg8_20.Date.Day.fields[0], _arg8_20.Time.Hour.fields[0], _arg8_20.Time.Minute.fields[0], 0);\n                            const dateEnd_8 = addDays(dateStart_8, 1);\n                            let matchValue_15;\n                            const _arg8_21 = tupledArg_7[1];\n                            matchValue_15 = create(_arg8_21.Date.Year.fields[0], _arg8_21.Date.Month, _arg8_21.Date.Day.fields[0], _arg8_21.Time.Hour.fields[0], _arg8_21.Time.Minute.fields[0], 0);\n                            activePatternResult38184 = (((x_13 = matchValue_15, (compare(x_13, dateStart_8) >= 0) ? (compare(x_13, dateEnd_8) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_8, matchValue_15) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))));\n                            if (activePatternResult38184.tag === 0) {\n                                pattern_matching_result_4 = 0;\n                            }\n                            else if (activePatternResult38184.tag === 1) {\n                                if (isDateMatched) {\n                                    pattern_matching_result_4 = 1;\n                                }\n                                else {\n                                    pattern_matching_result_4 = 2;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_4 = 2;\n                            }\n                        }\n                        else if (((tupledArg_8 = matchValue_14[1], (dateStart_9 = ((_arg8_22 = (new FlukeDateTime(tupledArg_8[2].fields[0], tupledArg_8[0])), create(_arg8_22.Date.Year.fields[0], _arg8_22.Date.Month, _arg8_22.Date.Day.fields[0], _arg8_22.Time.Hour.fields[0], _arg8_22.Time.Minute.fields[0], 0))), (dateEnd_9 = addDays(dateStart_9, 1), (matchValue_16 = ((_arg8_23 = tupledArg_8[1], create(_arg8_23.Date.Year.fields[0], _arg8_23.Date.Month, _arg8_23.Date.Day.fields[0], _arg8_23.Time.Hour.fields[0], _arg8_23.Time.Minute.fields[0], 0))), ((x_14 = matchValue_16, (compare(x_14, dateStart_9) >= 0) ? (compare(x_14, dateEnd_9) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_9, matchValue_16) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0)))))))).tag === 1) {\n                            if (isDateMatched) {\n                                pattern_matching_result_4 = 1;\n                            }\n                            else {\n                                pattern_matching_result_4 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                        switch (pattern_matching_result_4) {\n                            case 0: {\n                                patternInput_1 = [new LaneCellRenderOutput(0), new LaneCellRenderState(0)];\n                                break;\n                            }\n                            case 1: {\n                                patternInput_1 = [new LaneCellRenderOutput(2), new LaneCellRenderState(3, 1)];\n                                break;\n                            }\n                            case 2: {\n                                let pattern_matching_result_5;\n                                if (matchValue_14[0].tag === 0) {\n                                    if (((tupledArg_9 = matchValue_14[1], (dateStart_10 = ((_arg8_24 = (new FlukeDateTime(tupledArg_9[2].fields[0], tupledArg_9[0])), create(_arg8_24.Date.Year.fields[0], _arg8_24.Date.Month, _arg8_24.Date.Day.fields[0], _arg8_24.Time.Hour.fields[0], _arg8_24.Time.Minute.fields[0], 0))), (dateEnd_10 = addDays(dateStart_10, 1), (matchValue_17 = ((_arg8_25 = tupledArg_9[1], create(_arg8_25.Date.Year.fields[0], _arg8_25.Date.Month, _arg8_25.Date.Day.fields[0], _arg8_25.Time.Hour.fields[0], _arg8_25.Time.Minute.fields[0], 0))), ((x_15 = matchValue_17, (compare(x_15, dateStart_10) >= 0) ? (compare(x_15, dateEnd_10) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_10, matchValue_17) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0)))))))).tag === 1) {\n                                        pattern_matching_result_5 = 0;\n                                    }\n                                    else if (isDateMatched) {\n                                        pattern_matching_result_5 = 1;\n                                    }\n                                    else {\n                                        pattern_matching_result_5 = 2;\n                                    }\n                                }\n                                else if (isDateMatched) {\n                                    pattern_matching_result_5 = 1;\n                                }\n                                else {\n                                    pattern_matching_result_5 = 2;\n                                }\n                                switch (pattern_matching_result_5) {\n                                    case 0: {\n                                        patternInput_1 = [new LaneCellRenderOutput(0), new LaneCellRenderState(3, 1)];\n                                        break;\n                                    }\n                                    case 1: {\n                                        patternInput_1 = getStatus(new LaneCellRenderState(1));\n                                        break;\n                                    }\n                                    case 2: {\n                                        patternInput_1 = getStatus(renderState);\n                                        break;\n                                    }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        let days_1;\n                        const _arg2 = matchValue_13.fields[0].fields[0];\n                        switch (_arg2.tag) {\n                            case 1: {\n                                days_1 = (_arg2.fields[0] * 7);\n                                break;\n                            }\n                            case 2: {\n                                days_1 = (_arg2.fields[0] * 28);\n                                break;\n                            }\n                            default: {\n                                days_1 = _arg2.fields[0];\n                            }\n                        }\n                        patternInput_1 = getStatus((renderState.tag === 3) ? ((renderState.fields[0] === days_1) ? (new LaneCellRenderState(2)) : renderState) : renderState);\n                    }\n                    break;\n                }\n            }\n            const tempStatus = patternInput_1[0];\n            return cons([moment, (tempStatus.tag === 1) ? tempStatus.fields[0] : ((tempStatus.tag === 2) ? ((matchValue_22 = [taskState.Task.MissedAfter, taskState.Task.PendingAfter], (matchValue_22[0] != null) ? (((dayStart_30 = dayStart, (time_19 = matchValue_22[0], (position_82 = position, (referenceDay_16 = dateId_1.fields[0], (dateToCompare_1 = (new FlukeDateTime((((time_20 = time_19, (this$_2 = dayStart_30, (compare_1(this$_2.Hour, time_20.Hour) > 0) ? true : (equals(this$_2.Hour, time_20.Hour) ? (compare_1(this$_2.Minute, time_20.Minute) >= 0) : false)))) ? ((time_21 = dayStart_30, (this$_3 = position_82.Time, (compare_1(this$_3.Hour, time_21.Hour) > 0) ? true : (equals(this$_3.Hour, time_21.Hour) ? (compare_1(this$_3.Minute, time_21.Minute) >= 0) : false)))) : false) ? ((date_21 = ((copyOfStruct_3 = ((_arg5_4 = referenceDay_16, create(_arg5_4.Year.fields[0], _arg5_4.Month, _arg5_4.Day.fields[0], 12, 0, 0))), addDays(copyOfStruct_3, 1))), new FlukeDate(new Year(0, year_43(date_21)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_44(date_21))), new Day(0, day_45(date_21))))) : referenceDay_16, time_19)), compare((_arg8_30 = position_82, create(_arg8_30.Date.Year.fields[0], _arg8_30.Date.Month, _arg8_30.Date.Day.fields[0], _arg8_30.Time.Hour.fields[0], _arg8_30.Time.Minute.fields[0], 0)), (_arg8_31 = dateToCompare_1, create(_arg8_31.Date.Year.fields[0], _arg8_31.Date.Month, _arg8_31.Date.Day.fields[0], _arg8_31.Time.Hour.fields[0], _arg8_31.Time.Minute.fields[0], 0))) >= 0)))))) ? ((missedAfter_1 = matchValue_22[0], new CellStatus(4))) : ((matchValue_22[1] != null) ? (((dayStart_31 = dayStart, (time_22 = matchValue_22[1], (position_83 = position, (referenceDay_17 = dateId_1.fields[0], (dateToCompare_2 = (new FlukeDateTime((((time_23 = time_22, (this$_4 = dayStart_31, (compare_1(this$_4.Hour, time_23.Hour) > 0) ? true : (equals(this$_4.Hour, time_23.Hour) ? (compare_1(this$_4.Minute, time_23.Minute) >= 0) : false)))) ? ((time_24 = dayStart_31, (this$_5 = position_83.Time, (compare_1(this$_5.Hour, time_24.Hour) > 0) ? true : (equals(this$_5.Hour, time_24.Hour) ? (compare_1(this$_5.Minute, time_24.Minute) >= 0) : false)))) : false) ? ((date_22 = ((copyOfStruct_4 = ((_arg5_5 = referenceDay_17, create(_arg5_5.Year.fields[0], _arg5_5.Month, _arg5_5.Day.fields[0], 12, 0, 0))), addDays(copyOfStruct_4, 1))), new FlukeDate(new Year(0, year_43(date_22)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_44(date_22))), new Day(0, day_45(date_22))))) : referenceDay_17, time_22)), compare((_arg8_32 = position_83, create(_arg8_32.Date.Year.fields[0], _arg8_32.Date.Month, _arg8_32.Date.Day.fields[0], _arg8_32.Time.Hour.fields[0], _arg8_32.Time.Minute.fields[0], 0)), (_arg8_33 = dateToCompare_2, create(_arg8_33.Date.Year.fields[0], _arg8_33.Date.Month, _arg8_33.Date.Day.fields[0], _arg8_33.Time.Hour.fields[0], _arg8_33.Time.Minute.fields[0], 0))) >= 0)))))) ? ((pendingAfter_1 = matchValue_22[1], new CellStatus(2))) : ((matchValue_22[1] == null) ? (new CellStatus(2)) : (new CellStatus(1)))) : ((matchValue_22[1] == null) ? (new CellStatus(2)) : (new CellStatus(1))))) : ((matchValue_22[1] != null) ? (((dayStart_31 = dayStart, (time_22 = matchValue_22[1], (position_83 = position, (referenceDay_17 = dateId_1.fields[0], (dateToCompare_2 = (new FlukeDateTime((((time_23 = time_22, (this$_4 = dayStart_31, (compare_1(this$_4.Hour, time_23.Hour) > 0) ? true : (equals(this$_4.Hour, time_23.Hour) ? (compare_1(this$_4.Minute, time_23.Minute) >= 0) : false)))) ? ((time_24 = dayStart_31, (this$_5 = position_83.Time, (compare_1(this$_5.Hour, time_24.Hour) > 0) ? true : (equals(this$_5.Hour, time_24.Hour) ? (compare_1(this$_5.Minute, time_24.Minute) >= 0) : false)))) : false) ? ((date_22 = ((copyOfStruct_4 = ((_arg5_5 = referenceDay_17, create(_arg5_5.Year.fields[0], _arg5_5.Month, _arg5_5.Day.fields[0], 12, 0, 0))), addDays(copyOfStruct_4, 1))), new FlukeDate(new Year(0, year_43(date_22)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_44(date_22))), new Day(0, day_45(date_22))))) : referenceDay_17, time_22)), compare((_arg8_32 = position_83, create(_arg8_32.Date.Year.fields[0], _arg8_32.Date.Month, _arg8_32.Date.Day.fields[0], _arg8_32.Time.Hour.fields[0], _arg8_32.Time.Minute.fields[0], 0)), (_arg8_33 = dateToCompare_2, create(_arg8_33.Date.Year.fields[0], _arg8_33.Date.Month, _arg8_33.Date.Day.fields[0], _arg8_33.Time.Hour.fields[0], _arg8_33.Time.Minute.fields[0], 0))) >= 0)))))) ? ((pendingAfter_1 = matchValue_22[1], new CellStatus(2))) : ((matchValue_22[1] == null) ? (new CellStatus(2)) : (new CellStatus(1)))) : ((matchValue_22[1] == null) ? (new CellStatus(2)) : (new CellStatus(1)))))) : (new CellStatus(0)))], loop(patternInput_1[1], tail_1(_arg1_1)));\n        }\n    };\n    return ofSeq(map((tupledArg_13) => {\n        let position_84, matchValue_23, dateStart_13, _arg8_34, dateEnd_13, matchValue_24, _arg8_35, x_19, date_24, copyOfStruct_5, _arg5_6;\n        return [(position_84 = tupledArg_13[0], new DateId(0, ((matchValue_23 = [dayStart, position_84, new DateId(0, position_84.Date)], (((dateStart_13 = ((_arg8_34 = (new FlukeDateTime(matchValue_23[2].fields[0], matchValue_23[0])), create(_arg8_34.Date.Year.fields[0], _arg8_34.Date.Month, _arg8_34.Date.Day.fields[0], _arg8_34.Time.Hour.fields[0], _arg8_34.Time.Minute.fields[0], 0))), (dateEnd_13 = addDays(dateStart_13, 1), (matchValue_24 = ((_arg8_35 = matchValue_23[1], create(_arg8_35.Date.Year.fields[0], _arg8_35.Date.Month, _arg8_35.Date.Day.fields[0], _arg8_35.Time.Hour.fields[0], _arg8_35.Time.Minute.fields[0], 0))), ((x_19 = matchValue_24, (compare(x_19, dateStart_13) >= 0) ? (compare(x_19, dateEnd_13) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare(dateStart_13, matchValue_24) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))))))).tag === 1) ? true : false)) ? position_84.Date : ((date_24 = ((copyOfStruct_5 = ((_arg5_6 = position_84.Date, create(_arg5_6.Year.fields[0], _arg5_6.Month, _arg5_6.Day.fields[0], 12, 0, 0))), addDays(copyOfStruct_5, -1))), new FlukeDate(new Year(0, year_43(date_24)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_44(date_24))), new Day(0, day_45(date_24))))))), tupledArg_13[1]];\n    }, filter((tupledArg_12) => {\n        const x_18 = tupledArg_12[0];\n        if (compare_1(x_18, firstDateRange) >= 0) {\n            return compare_1(x_18, lastDateRange) <= 0;\n        }\n        else {\n            return false;\n        }\n    }, loop(new LaneCellRenderState(0), (dates = toArray_1(sort_1(map_1((arg) => {\n        const _arg5 = arg.fields[0];\n        return create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0);\n    }, map_1((_arg1) => _arg1[0], taskState.CellStateMap)), {\n        Compare: (x, y) => compare(x, y),\n    })), map((date_4) => (new FlukeDateTime(date_4, dayStart)), ((!equalsWith((x_1, y_1) => compare(x_1, y_1), dates, null)) ? (dates.length === 0) : false) ? dateSequence : ((dates_1 = dates, getDateSequence(0, 0, ofArray([(date_2 = ((e2 = head(dates_1), min_15((x_2, y_2) => compare(x_2, y_2), (_arg8 = firstDateRange, create(_arg8.Date.Year.fields[0], _arg8.Date.Month, _arg8.Date.Day.fields[0], _arg8.Time.Hour.fields[0], _arg8.Time.Minute.fields[0], 0)), e2))), new FlukeDate(new Year(0, year_43(date_2)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_44(date_2))), new Day(0, day_45(date_2)))), (date_3 = ((e2_1 = last(dates_1), max_15((x_3, y_3) => compare(x_3, y_3), (_arg8_1 = lastDateRange, create(_arg8_1.Date.Year.fields[0], _arg8_1.Date.Month, _arg8_1.Date.Day.fields[0], _arg8_1.Time.Hour.fields[0], _arg8_1.Time.Minute.fields[0], 0)), e2_1))), new FlukeDate(new Year(0, year_43(date_3)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_44(date_3))), new Day(0, day_45(date_3))))]))))))))));\n}\n\n","import { compare } from \"./Util.js\";\r\nimport { unfold, delay } from \"./Seq.js\";\r\nimport { op_Addition, fromZero } from \"./BigInt.js\";\r\nimport { op_Addition as op_Addition_1, fromParts } from \"./Decimal.js\";\r\nimport { op_Addition as op_Addition_2, fromBits } from \"./Long.js\";\r\n\r\nexport function makeRangeStepFunction(step, stop, zero, add) {\r\n    const stepComparedWithZero = compare(step, zero) | 0;\r\n    if (stepComparedWithZero === 0) {\r\n        throw (new Error(\"The step of a range cannot be zero\"));\r\n    }\r\n    const stepGreaterThanZero = stepComparedWithZero > 0;\r\n    return (x) => {\r\n        const comparedWithLast = compare(x, stop) | 0;\r\n        return ((stepGreaterThanZero ? (comparedWithLast <= 0) : false) ? true : ((!stepGreaterThanZero) ? (comparedWithLast >= 0) : false)) ? [x, add(x, step)] : (void 0);\r\n    };\r\n}\r\n\r\nexport function integralRangeStep(start, step, stop, zero, add) {\r\n    const stepFn = makeRangeStepFunction(step, stop, zero, add);\r\n    return delay(() => unfold(stepFn, start));\r\n}\r\n\r\nexport function rangeBigInt(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromZero(), (x, y) => op_Addition(x, y));\r\n}\r\n\r\nexport function rangeDecimal(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromParts(0, 0, 0, false, 0), (x, y) => op_Addition_1(x, y));\r\n}\r\n\r\nexport function rangeDouble(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, 0, (x, y) => (x + y));\r\n}\r\n\r\nexport function rangeInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, false), (x, y) => op_Addition_2(x, y));\r\n}\r\n\r\nexport function rangeUInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, true), (x, y) => op_Addition_2(x, y));\r\n}\r\n\r\nexport function rangeChar(start, stop) {\r\n    const intStop = stop.charCodeAt(0) | 0;\r\n    return delay(() => unfold((c) => {\r\n        if (c <= intStop) {\r\n            return [String.fromCharCode(c), c + 1];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, start.charCodeAt(0)));\r\n}\r\n\r\n","import { Record, Union } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Types.js\";\nimport { class_type, record_type, tuple_type, list_type, int32_type, union_type, option_type, string_type } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Reflection.js\";\nimport { User, Color, Username, TaskInteraction, Session, Attachment, Comment$, UserInteraction, Interaction, CellInteraction, CellStatusChange, DateId, FlukeDateTime, FlukeDate, Year, UserInteraction$reflection, FlukeDate$reflection, FlukeDateTime$reflection } from \"./Domain/UserInteraction.fs.js\";\nimport { FixedRecurrency, Recurrency, RecurrencyOffset, Task as Task_1, Scheduling as Scheduling_96, ManualScheduling, Information as Information_48, Area, AreaName, TaskName, TaskId, FlukeTime, Minute, Hour, Day, Information$reflection, Task$reflection, FlukeTime$reflection, Scheduling$reflection, TaskName$reflection, Priority$reflection } from \"./Domain/Model.fs.js\";\nimport { Database, DatabaseAccess, DatabaseName, DatabaseId, CellState, DatabaseState, InformationState, TaskState, CellStatus, ManualCellStatus, TaskState$reflection, InformationState$reflection, CellStatus$reflection, ManualCellStatus$reflection } from \"./Domain/State.fs.js\";\nimport { cons, unzip, append, fold, map as map_1, collect, singleton, ofArray, empty } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/List.js\";\nimport { map, delay, toList } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Seq.js\";\nimport { rangeDouble } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Range.js\";\nimport { FSharpMap__get_Item, add, fold as fold_1, empty as empty_1, FSharpMap__get_Count, tryFind, ofSeq } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Map.js\";\nimport { toFail, interpolate, toText } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/String.js\";\nimport { uncurry, equals } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Util.js\";\nimport { defaultArgWith, defaultArg, map as map_2 } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Option.js\";\nimport { newGuid } from \"../Fluke.UI.Frontend/.fable/fable-library.3.2.7/Guid.js\";\n\nexport class DslTask extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DslTaskComment\", \"DslSession\", \"DslPriority\", \"DslStatusEntry\", \"DslCellComment\", \"DslTaskSet\", \"DslTaskSort\"];\n    }\n}\n\nexport function DslTask$reflection() {\n    return union_type(\"Fluke.Shared.Templates.DslTask\", [], DslTask, () => [[[\"comment\", string_type]], [[\"start\", FlukeDateTime$reflection()]], [[\"priority\", Priority$reflection()]], [[\"date\", FlukeDate$reflection()], [\"manualCellStatus\", ManualCellStatus$reflection()]], [[\"date\", FlukeDate$reflection()], [\"comment\", string_type]], [[\"taskSet\", DslTaskSet$reflection()]], [[\"top\", option_type(TaskName$reflection())], [\"bottom\", option_type(TaskName$reflection())]]]);\n}\n\nexport class DslTaskSet extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DslSetScheduling\", \"DslSetPendingAfter\", \"DslSetMissedAfter\", \"DslSetDuration\"];\n    }\n}\n\nexport function DslTaskSet$reflection() {\n    return union_type(\"Fluke.Shared.Templates.DslTaskSet\", [], DslTaskSet, () => [[[\"scheduling\", Scheduling$reflection()], [\"start\", option_type(FlukeDate$reflection())]], [[\"start\", FlukeTime$reflection()]], [[\"start\", FlukeTime$reflection()]], [[\"duration\", int32_type]]]);\n}\n\nexport class TemplateExpect extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Status\", \"Session\"];\n    }\n}\n\nexport function TemplateExpect$reflection() {\n    return union_type(\"Fluke.Shared.Templates.TemplateExpect\", [], TemplateExpect, () => [[[\"status\", CellStatus$reflection()]], [[\"count\", int32_type]]]);\n}\n\nexport class TemplateTask extends Record {\n    constructor(Task, Events, Expected) {\n        super();\n        this.Task = Task;\n        this.Events = Events;\n        this.Expected = Expected;\n    }\n}\n\nexport function TemplateTask$reflection() {\n    return record_type(\"Fluke.Shared.Templates.TemplateTask\", [], TemplateTask, () => [[\"Task\", Task$reflection()], [\"Events\", list_type(DslTask$reflection())], [\"Expected\", list_type(tuple_type(FlukeDate$reflection(), list_type(TemplateExpect$reflection())))]]);\n}\n\nexport class DslTemplate extends Record {\n    constructor(Position, Tasks) {\n        super();\n        this.Position = Position;\n        this.Tasks = Tasks;\n    }\n}\n\nexport function DslTemplate$reflection() {\n    return record_type(\"Fluke.Shared.Templates.DslTemplate\", [], DslTemplate, () => [[\"Position\", FlukeDateTime$reflection()], [\"Tasks\", list_type(TemplateTask$reflection())]]);\n}\n\nexport class DslData extends Record {\n    constructor(InformationStateMap, TaskStateList) {\n        super();\n        this.InformationStateMap = InformationStateMap;\n        this.TaskStateList = TaskStateList;\n    }\n}\n\nexport function DslData$reflection() {\n    return record_type(\"Fluke.Shared.Templates.DslData\", [], DslData, () => [[\"InformationStateMap\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [Information$reflection(), InformationState$reflection()])], [\"TaskStateList\", list_type(tuple_type(TaskState$reflection(), list_type(UserInteraction$reflection())))]]);\n}\n\nexport class Template extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Single\", \"Multiple\"];\n    }\n}\n\nexport function Template$reflection() {\n    return union_type(\"Fluke.Shared.Templates.Template\", [], Template, () => [[[\"Item\", DslTemplate$reflection()]], [[\"Item\", DslTemplate$reflection()]]]);\n}\n\nexport function getDatabase(user) {\n    let inputRecord, inputRecord_1, inputRecord_2, inputRecord_3, inputRecord_4, inputRecord_5, inputRecord_6, inputRecord_7, inputRecord_8, inputRecord_9, inputRecord_10, inputRecord_11, inputRecord_12, inputRecord_13, inputRecord_14, inputRecord_15, inputRecord_16, inputRecord_17, inputRecord_18, inputRecord_19, inputRecord_20, inputRecord_21, inputRecord_22, inputRecord_23, inputRecord_24, inputRecord_25, inputRecord_26, inputRecord_27, inputRecord_28, inputRecord_29, inputRecord_30, inputRecord_31, inputRecord_32, inputRecord_33, inputRecord_34, inputRecord_35, inputRecord_36, inputRecord_37, inputRecord_38, inputRecord_39, inputRecord_40, inputRecord_41, inputRecord_42, inputRecord_43, inputRecord_44, inputRecord_45, inputRecord_46, inputRecord_47;\n    return ofArray([[\"Lane Sorting\", singleton([\"Default\", singleton([\"All task types mixed\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new FlukeTime(new Hour(0, 14), new Minute(0, 0))), ofArray([new TemplateTask((inputRecord = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord.Id, new TaskName(0, \"01\"), inputRecord.Information, inputRecord.Duration, inputRecord.PendingAfter, inputRecord.MissedAfter, new Scheduling_96(0, new ManualScheduling(0)), inputRecord.Priority)), empty(), empty()), new TemplateTask((inputRecord_1 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_1.Id, new TaskName(0, \"02\"), inputRecord_1.Information, inputRecord_1.Duration, inputRecord_1.PendingAfter, inputRecord_1.MissedAfter, new Scheduling_96(0, new ManualScheduling(0)), inputRecord_1.Priority)), ofArray([new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), new ManualCellStatus(1, void 0)), new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(1, void 0))]), empty()), new TemplateTask((inputRecord_2 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_2.Id, new TaskName(0, \"03\"), inputRecord_2.Information, inputRecord_2.Duration, inputRecord_2.PendingAfter, inputRecord_2.MissedAfter, new Scheduling_96(0, new ManualScheduling(1)), inputRecord_2.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), new ManualCellStatus(3))), empty()), new TemplateTask((inputRecord_3 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_3.Id, new TaskName(0, \"04\"), inputRecord_3.Information, inputRecord_3.Duration, new FlukeTime(new Hour(0, 20), new Minute(0, 0)), inputRecord_3.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_3.Priority)), empty(), empty()), new TemplateTask((inputRecord_4 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_4.Id, new TaskName(0, \"05\"), inputRecord_4.Information, inputRecord_4.Duration, inputRecord_4.PendingAfter, inputRecord_4.MissedAfter, new Scheduling_96(0, new ManualScheduling(1)), inputRecord_4.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(3))), empty()), new TemplateTask((inputRecord_5 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_5.Id, new TaskName(0, \"06\"), inputRecord_5.Information, inputRecord_5.Duration, inputRecord_5.PendingAfter, inputRecord_5.MissedAfter, new Scheduling_96(0, new ManualScheduling(1)), inputRecord_5.Priority)), ofArray([new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 4)), new ManualCellStatus(3)), new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 6)), new ManualCellStatus(2))]), empty()), new TemplateTask((inputRecord_6 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_6.Id, new TaskName(0, \"07\"), inputRecord_6.Information, inputRecord_6.Duration, inputRecord_6.PendingAfter, inputRecord_6.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 4))), inputRecord_6.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 8)), new ManualCellStatus(0))), empty()), new TemplateTask((inputRecord_7 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_7.Id, new TaskName(0, \"08\"), inputRecord_7.Information, inputRecord_7.Duration, inputRecord_7.PendingAfter, inputRecord_7.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 2))), inputRecord_7.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(1, void 0))), empty()), new TemplateTask((inputRecord_8 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_8.Id, new TaskName(0, \"09\"), inputRecord_8.Information, inputRecord_8.Duration, inputRecord_8.PendingAfter, inputRecord_8.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 2))), inputRecord_8.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(2))), empty()), new TemplateTask((inputRecord_9 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_9.Id, new TaskName(0, \"10\"), inputRecord_9.Information, inputRecord_9.Duration, inputRecord_9.PendingAfter, inputRecord_9.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 2))), inputRecord_9.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(0))), empty()), new TemplateTask((inputRecord_10 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_10.Id, new TaskName(0, \"11\"), inputRecord_10.Information, inputRecord_10.Duration, inputRecord_10.PendingAfter, inputRecord_10.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_10.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(1, new FlukeTime(new Hour(0, 15), new Minute(0, 0))))), empty()), new TemplateTask((inputRecord_11 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_11.Id, new TaskName(0, \"12\"), inputRecord_11.Information, inputRecord_11.Duration, inputRecord_11.PendingAfter, inputRecord_11.MissedAfter, new Scheduling_96(0, new ManualScheduling(1)), inputRecord_11.Priority)), empty(), empty()), new TemplateTask((inputRecord_12 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_12.Id, new TaskName(0, \"13\"), inputRecord_12.Information, inputRecord_12.Duration, inputRecord_12.PendingAfter, inputRecord_12.MissedAfter, new Scheduling_96(1, new Recurrency(1, singleton(new FixedRecurrency(0, 2)))), inputRecord_12.Priority)), empty(), empty()), new TemplateTask((inputRecord_13 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_13.Id, new TaskName(0, \"14\"), inputRecord_13.Information, inputRecord_13.Duration, inputRecord_13.PendingAfter, inputRecord_13.MissedAfter, new Scheduling_96(1, new Recurrency(1, singleton(new FixedRecurrency(0, 3)))), inputRecord_13.Priority)), empty(), empty()), new TemplateTask((inputRecord_14 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_14.Id, new TaskName(0, \"15\"), inputRecord_14.Information, inputRecord_14.Duration, inputRecord_14.PendingAfter, inputRecord_14.MissedAfter, new Scheduling_96(1, new Recurrency(1, singleton(new FixedRecurrency(0, 5)))), inputRecord_14.Priority)), ofArray([new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 7)), new ManualCellStatus(1, void 0)), new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), new ManualCellStatus(2))]), empty()), new TemplateTask((inputRecord_15 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_15.Id, new TaskName(0, \"16\"), inputRecord_15.Information, inputRecord_15.Duration, inputRecord_15.PendingAfter, new FlukeTime(new Hour(0, 13), new Minute(0, 0)), new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_15.Priority)), empty(), empty()), new TemplateTask((inputRecord_16 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_16.Id, new TaskName(0, \"17\"), inputRecord_16.Information, inputRecord_16.Duration, inputRecord_16.PendingAfter, inputRecord_16.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_16.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(1, new FlukeTime(new Hour(0, 13), new Minute(0, 0))))), empty()), new TemplateTask((inputRecord_17 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_17.Id, new TaskName(0, \"18\"), inputRecord_17.Information, inputRecord_17.Duration, inputRecord_17.PendingAfter, inputRecord_17.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_17.Priority)), empty(), empty())]))])])], [\"Lane Rendering\", ofArray([[\"Manual\", ofArray([[\"Empty manual task\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), user.DayStart), singleton(new TemplateTask((inputRecord_18 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_18.Id, inputRecord_18.Name, inputRecord_18.Information, inputRecord_18.Duration, inputRecord_18.PendingAfter, inputRecord_18.MissedAfter, new Scheduling_96(0, new ManualScheduling(1)), inputRecord_18.Priority)), empty(), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 13)), singleton(new TemplateExpect(0, new CellStatus(0)))]]))))], [\"ManualPending task scheduled for today after missing\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), user.DayStart), singleton(new TemplateTask((inputRecord_19 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_19.Id, inputRecord_19.Name, inputRecord_19.Information, inputRecord_19.Duration, inputRecord_19.PendingAfter, inputRecord_19.MissedAfter, new Scheduling_96(0, new ManualScheduling(1)), inputRecord_19.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), new ManualCellStatus(3))), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 8)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(3))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(3)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 13)), singleton(new TemplateExpect(0, new CellStatus(0)))]]))))], [\"Manual Suggested task Suggested before PendingAfter\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new FlukeTime(new Hour(0, 19), new Minute(0, 30))), singleton(new TemplateTask((inputRecord_20 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_20.Id, inputRecord_20.Name, inputRecord_20.Information, inputRecord_20.Duration, new FlukeTime(new Hour(0, 20), new Minute(0, 0)), inputRecord_20.MissedAfter, new Scheduling_96(0, new ManualScheduling(0)), inputRecord_20.Priority)), empty(), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(1)))]]))))], [\"Manual Suggested task Pending after PendingAfter\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 1, new Day(0, 1)), new FlukeTime(new Hour(0, 21), new Minute(0, 0))), singleton(new TemplateTask((inputRecord_21 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_21.Id, inputRecord_21.Name, inputRecord_21.Information, inputRecord_21.Duration, new FlukeTime(new Hour(0, 20), new Minute(0, 0)), inputRecord_21.MissedAfter, new Scheduling_96(0, new ManualScheduling(0)), inputRecord_21.Priority)), empty(), ofArray([[new FlukeDate(new Year(0, 2019), 12, new Day(0, 31)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 1, new Day(0, 1)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 1, new Day(0, 2)), singleton(new TemplateExpect(0, new CellStatus(1)))]]))))], [\"Manual Suggested task: Missed ManualPending propagates until today\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 28)), user.DayStart), singleton(new TemplateTask((inputRecord_22 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_22.Id, inputRecord_22.Name, inputRecord_22.Information, inputRecord_22.Duration, inputRecord_22.PendingAfter, inputRecord_22.MissedAfter, new Scheduling_96(0, new ManualScheduling(0)), inputRecord_22.Priority)), ofArray([new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 26)), new ManualCellStatus(3)), new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 30)), new ManualCellStatus(3))]), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 25)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 26)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(3))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 27)), singleton(new TemplateExpect(0, new CellStatus(3)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 28)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 29)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 30)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(3))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 31)), singleton(new TemplateExpect(0, new CellStatus(1)))]]))))], [\"Manual Suggested task: Suggested mode restored after completing a forgotten ManualPending event\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 28)), user.DayStart), singleton(new TemplateTask((inputRecord_23 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_23.Id, inputRecord_23.Name, inputRecord_23.Information, inputRecord_23.Duration, inputRecord_23.PendingAfter, inputRecord_23.MissedAfter, new Scheduling_96(0, new ManualScheduling(0)), inputRecord_23.Priority)), ofArray([new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 25)), new ManualCellStatus(3)), new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 26)), new ManualCellStatus(0))]), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 24)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 25)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(3))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 26)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(0))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 27)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 28)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 29)), singleton(new TemplateExpect(0, new CellStatus(1)))]]))))], [\"Manual Suggested task: Pending today after missing a ManualPending event\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 28)), user.DayStart), singleton(new TemplateTask((inputRecord_24 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_24.Id, inputRecord_24.Name, inputRecord_24.Information, inputRecord_24.Duration, inputRecord_24.PendingAfter, inputRecord_24.MissedAfter, new Scheduling_96(0, new ManualScheduling(0)), inputRecord_24.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 25)), new ManualCellStatus(3))), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 24)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 25)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(3))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 26)), singleton(new TemplateExpect(0, new CellStatus(3)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 27)), singleton(new TemplateExpect(0, new CellStatus(3)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 28)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 29)), singleton(new TemplateExpect(0, new CellStatus(1)))]]))))]])], [\"Recurrency Offset\", ofArray([[\"Start scheduling today without any events\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), user.DayStart), singleton(new TemplateTask((inputRecord_25 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_25.Id, inputRecord_25.Name, inputRecord_25.Information, inputRecord_25.Duration, inputRecord_25.PendingAfter, inputRecord_25.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 2))), inputRecord_25.Priority)), empty(), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 7)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 8)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(0)))]]))))], [\"Disabled today after a Completed event yesterday\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), user.DayStart), singleton(new TemplateTask((inputRecord_26 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_26.Id, inputRecord_26.Name, inputRecord_26.Information, inputRecord_26.Duration, inputRecord_26.PendingAfter, inputRecord_26.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 3))), inputRecord_26.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 8)), new ManualCellStatus(0))), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 8)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(0))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 13)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 14)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 15)), singleton(new TemplateExpect(0, new CellStatus(0)))]]))))], [\"Postponing today should schedule for tomorrow\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), user.DayStart), singleton(new TemplateTask((inputRecord_27 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_27.Id, inputRecord_27.Name, inputRecord_27.Information, inputRecord_27.Duration, inputRecord_27.PendingAfter, inputRecord_27.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 2))), inputRecord_27.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(1, void 0))), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(1, void 0))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 13)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))], [\"Postponing today should schedule for tomorrow with PendingAfter\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), user.DayStart), singleton(new TemplateTask((inputRecord_28 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_28.Id, inputRecord_28.Name, inputRecord_28.Information, inputRecord_28.Duration, new FlukeTime(new Hour(0, 3), new Minute(0, 0)), inputRecord_28.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 2))), inputRecord_28.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(1, void 0))), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(1, void 0))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 13)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))], [\"(Postponed None) yesterday schedules for today\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), user.DayStart), singleton(new TemplateTask((inputRecord_29 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_29.Id, inputRecord_29.Name, inputRecord_29.Information, inputRecord_29.Duration, inputRecord_29.PendingAfter, inputRecord_29.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 2))), inputRecord_29.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(1, void 0))), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(1, void 0))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 13)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))], [\"Pending today after missing yesterday, then resetting the schedule with a future Completed event\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), user.DayStart), singleton(new TemplateTask((inputRecord_30 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_30.Id, inputRecord_30.Name, inputRecord_30.Information, inputRecord_30.Duration, inputRecord_30.PendingAfter, inputRecord_30.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 2))), inputRecord_30.Priority)), ofArray([new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 8)), new ManualCellStatus(0)), new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), new ManualCellStatus(0))]), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 7)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 8)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(0))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(3)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(0))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 13)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 14)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))], [\"Recurring task only Suggested before PendingAfter\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new FlukeTime(new Hour(0, 19), new Minute(0, 30))), singleton(new TemplateTask((inputRecord_31 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_31.Id, inputRecord_31.Name, inputRecord_31.Information, inputRecord_31.Duration, new FlukeTime(new Hour(0, 20), new Minute(0, 0)), inputRecord_31.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_31.Priority)), empty(), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))], [\"Recurring task Pending after PendingAfter\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new FlukeTime(new Hour(0, 21), new Minute(0, 0))), singleton(new TemplateTask((inputRecord_32 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_32.Id, inputRecord_32.Name, inputRecord_32.Information, inputRecord_32.Duration, new FlukeTime(new Hour(0, 20), new Minute(0, 0)), inputRecord_32.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_32.Priority)), empty(), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))], [\"Recurrency for the next days should work normally while today is still suggested (before PendingAfter)\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 27)), new FlukeTime(new Hour(0, 17), new Minute(0, 0))), singleton(new TemplateTask((inputRecord_33 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_33.Id, inputRecord_33.Name, inputRecord_33.Information, inputRecord_33.Duration, new FlukeTime(new Hour(0, 18), new Minute(0, 0)), inputRecord_33.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 2))), inputRecord_33.Priority)), empty(), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 25)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 26)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 27)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 28)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 29)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 30)), singleton(new TemplateExpect(0, new CellStatus(0)))]]))))], [\"Reset counting after a future ManualPending event\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 28)), user.DayStart), singleton(new TemplateTask((inputRecord_34 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_34.Id, inputRecord_34.Name, inputRecord_34.Information, inputRecord_34.Duration, inputRecord_34.PendingAfter, inputRecord_34.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 3))), inputRecord_34.Priority)), ofArray([new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 30)), new ManualCellStatus(3)), new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 31)), new ManualCellStatus(3))]), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 27)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 28)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 29)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 30)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(3))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 31)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(3))))], [new FlukeDate(new Year(0, 2020), 4, new Day(0, 1)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 4, new Day(0, 2)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 4, new Day(0, 3)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))]])], [\"Recurrency Fixed\", ofArray([[\"Weekly task, pending today, initialized by past completion\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 21)), user.DayStart), singleton(new TemplateTask((inputRecord_35 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_35.Id, inputRecord_35.Name, inputRecord_35.Information, inputRecord_35.Duration, inputRecord_35.PendingAfter, inputRecord_35.MissedAfter, new Scheduling_96(1, new Recurrency(1, singleton(new FixedRecurrency(0, 6)))), inputRecord_35.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 14)), new ManualCellStatus(0))), toList(delay(() => map((d) => [new FlukeDate(new Year(0, 2020), 3, new Day(0, d)), singleton(new TemplateExpect(0, (d === 14) ? (new CellStatus(5, user.Username, new ManualCellStatus(0))) : ((d === 21) ? (new CellStatus(2)) : ((d === 28) ? (new CellStatus(2)) : (new CellStatus(0))))))], rangeDouble(13, 1, 29)))))))], [\"Weekly task, missed until today, initialized by past completion\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 20)), user.DayStart), singleton(new TemplateTask((inputRecord_36 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_36.Id, inputRecord_36.Name, inputRecord_36.Information, inputRecord_36.Duration, inputRecord_36.PendingAfter, inputRecord_36.MissedAfter, new Scheduling_96(1, new Recurrency(1, singleton(new FixedRecurrency(0, 3)))), inputRecord_36.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 13)), new ManualCellStatus(0))), toList(delay(() => map((d_1) => [new FlukeDate(new Year(0, 2020), 3, new Day(0, d_1)), singleton(new TemplateExpect(0, (d_1 === 13) ? (new CellStatus(5, user.Username, new ManualCellStatus(0))) : ((d_1 === 18) ? (new CellStatus(3)) : ((d_1 === 19) ? (new CellStatus(3)) : ((d_1 === 20) ? (new CellStatus(2)) : ((d_1 === 25) ? (new CellStatus(2)) : (new CellStatus(0))))))))], rangeDouble(10, 1, 26)))))))], [\"Weekly task, (Postponed None) then missed until today, pending tomorrow\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 20)), user.DayStart), singleton(new TemplateTask((inputRecord_37 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_37.Id, inputRecord_37.Name, inputRecord_37.Information, inputRecord_37.Duration, inputRecord_37.PendingAfter, inputRecord_37.MissedAfter, new Scheduling_96(1, new Recurrency(1, singleton(new FixedRecurrency(0, 6)))), inputRecord_37.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 18)), new ManualCellStatus(1, void 0))), toList(delay(() => map((d_2) => [new FlukeDate(new Year(0, 2020), 3, new Day(0, d_2)), singleton(new TemplateExpect(0, (d_2 === 18) ? (new CellStatus(5, user.Username, new ManualCellStatus(1, void 0))) : ((d_2 === 19) ? (new CellStatus(3)) : ((d_2 === 20) ? (new CellStatus(2)) : ((d_2 === 21) ? (new CellStatus(2)) : ((d_2 === 28) ? (new CellStatus(2)) : (new CellStatus(0))))))))], rangeDouble(13, 1, 29)))))))], [\"Weekly task, without past events, pending in a few days\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 20)), user.DayStart), singleton(new TemplateTask((inputRecord_38 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_38.Id, inputRecord_38.Name, inputRecord_38.Information, inputRecord_38.Duration, inputRecord_38.PendingAfter, inputRecord_38.MissedAfter, new Scheduling_96(1, new Recurrency(1, singleton(new FixedRecurrency(0, 3)))), inputRecord_38.Priority)), empty(), toList(delay(() => map((d_3) => [new FlukeDate(new Year(0, 2020), 3, new Day(0, d_3)), singleton(new TemplateExpect(0, (d_3 === 25) ? (new CellStatus(2)) : (new CellStatus(0))))], rangeDouble(17, 1, 26)))))))], [\"Fixed weekly task, without past events, pending tomorrow\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 20)), user.DayStart), singleton(new TemplateTask((inputRecord_39 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_39.Id, inputRecord_39.Name, inputRecord_39.Information, inputRecord_39.Duration, inputRecord_39.PendingAfter, inputRecord_39.MissedAfter, new Scheduling_96(1, new Recurrency(1, singleton(new FixedRecurrency(0, 6)))), inputRecord_39.Priority)), empty(), toList(delay(() => map((d_4) => [new FlukeDate(new Year(0, 2020), 3, new Day(0, d_4)), singleton(new TemplateExpect(0, (d_4 === 21) ? (new CellStatus(2)) : ((d_4 === 28) ? (new CellStatus(2)) : (new CellStatus(0)))))], rangeDouble(13, 1, 29)))))))], [\"Fixed weekly task only Suggested before PendingAfter\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 8, new Day(0, 26)), user.DayStart), singleton(new TemplateTask((inputRecord_40 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_40.Id, inputRecord_40.Name, inputRecord_40.Information, inputRecord_40.Duration, new FlukeTime(new Hour(0, 19), new Minute(0, 0)), inputRecord_40.MissedAfter, new Scheduling_96(1, new Recurrency(1, ofArray([new FixedRecurrency(0, 1), new FixedRecurrency(0, 2), new FixedRecurrency(0, 3), new FixedRecurrency(0, 4), new FixedRecurrency(0, 5)]))), inputRecord_40.Priority)), empty(), ofArray([[new FlukeDate(new Year(0, 2020), 8, new Day(0, 25)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 8, new Day(0, 26)), singleton(new TemplateExpect(0, new CellStatus(1)))], [new FlukeDate(new Year(0, 2020), 8, new Day(0, 27)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))]])], [\"Postponed Until\", ofArray([[\"Postponed until later\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), user.DayStart), singleton(new TemplateTask((inputRecord_41 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_41.Id, inputRecord_41.Name, inputRecord_41.Information, inputRecord_41.Duration, inputRecord_41.PendingAfter, inputRecord_41.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_41.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(1, new FlukeTime(new Hour(0, 23), new Minute(0, 0))))), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(1, new FlukeTime(new Hour(0, 23), new Minute(0, 0))))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))], [\"Postponed until after midnight\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), user.DayStart), singleton(new TemplateTask((inputRecord_42 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_42.Id, inputRecord_42.Name, inputRecord_42.Information, inputRecord_42.Duration, inputRecord_42.PendingAfter, inputRecord_42.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_42.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(1, new FlukeTime(new Hour(0, 1), new Minute(0, 0))))), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(1, new FlukeTime(new Hour(0, 1), new Minute(0, 0))))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))], [\"Pending after expiration of Postponed (before midnight)\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), new FlukeTime(new Hour(0, 2), new Minute(0, 0))), singleton(new TemplateTask((inputRecord_43 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_43.Id, inputRecord_43.Name, inputRecord_43.Information, inputRecord_43.Duration, inputRecord_43.PendingAfter, inputRecord_43.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_43.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(1, new FlukeTime(new Hour(0, 23), new Minute(0, 0))))), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))], [\"Pending after expiration of Postponed (after midnight)\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), new FlukeTime(new Hour(0, 2), new Minute(0, 0))), singleton(new TemplateTask((inputRecord_44 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_44.Id, inputRecord_44.Name, inputRecord_44.Information, inputRecord_44.Duration, inputRecord_44.PendingAfter, inputRecord_44.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_44.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(1, new FlukeTime(new Hour(0, 1), new Minute(0, 0))))), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))], [\"Past PostponedUntil events are shown\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 13)), new FlukeTime(new Hour(0, 2), new Minute(0, 0))), singleton(new TemplateTask((inputRecord_45 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_45.Id, inputRecord_45.Name, inputRecord_45.Information, inputRecord_45.Duration, inputRecord_45.PendingAfter, inputRecord_45.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_45.Priority)), ofArray([new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 8)), new ManualCellStatus(0)), new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), new ManualCellStatus(1, new FlukeTime(new Hour(0, 1), new Minute(0, 0))))]), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 7)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 8)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(0))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(3)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(1, new FlukeTime(new Hour(0, 1), new Minute(0, 0))))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(3)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 13)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))], [\"Future PostponedUntil events are shown\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), user.DayStart), singleton(new TemplateTask((inputRecord_46 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_46.Id, inputRecord_46.Name, inputRecord_46.Information, inputRecord_46.Duration, inputRecord_46.PendingAfter, inputRecord_46.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_46.Priority)), singleton(new DslTask(3, new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), new ManualCellStatus(1, new FlukeTime(new Hour(0, 13), new Minute(0, 0))))), ofArray([[new FlukeDate(new Year(0, 2020), 3, new Day(0, 9)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 10)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 11)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 12)), singleton(new TemplateExpect(0, new CellStatus(5, user.Username, new ManualCellStatus(1, new FlukeTime(new Hour(0, 13), new Minute(0, 0))))))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 13)), singleton(new TemplateExpect(0, new CellStatus(2)))]]))))]])]])], [\"Session Data\", singleton([\"Sessions\", singleton([\"Respect dayStart on session events\", new DslTemplate(new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 4)), user.DayStart), singleton(new TemplateTask((inputRecord_47 = (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)), new Task_1(inputRecord_47.Id, inputRecord_47.Name, inputRecord_47.Information, inputRecord_47.Duration, inputRecord_47.PendingAfter, inputRecord_47.MissedAfter, new Scheduling_96(1, new Recurrency(0, new RecurrencyOffset(0, 1))), inputRecord_47.Priority)), ofArray([new DslTask(1, new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 1)), new FlukeTime(new Hour(0, 11), new Minute(0, 0)))), new DslTask(1, new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 1)), new FlukeTime(new Hour(0, 13), new Minute(0, 0)))), new DslTask(1, new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 8)), new FlukeTime(new Hour(0, 11), new Minute(0, 0)))), new DslTask(1, new FlukeDateTime(new FlukeDate(new Year(0, 2020), 3, new Day(0, 8)), new FlukeTime(new Hour(0, 13), new Minute(0, 0))))]), ofArray([[new FlukeDate(new Year(0, 2020), 2, new Day(0, 29)), ofArray([new TemplateExpect(0, new CellStatus(0)), new TemplateExpect(1, 1)])], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 1)), ofArray([new TemplateExpect(0, new CellStatus(0)), new TemplateExpect(1, 1)])], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 2)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 3)), singleton(new TemplateExpect(0, new CellStatus(0)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 4)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 5)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 6)), singleton(new TemplateExpect(0, new CellStatus(2)))], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 7)), ofArray([new TemplateExpect(0, new CellStatus(2)), new TemplateExpect(1, 1)])], [new FlukeDate(new Year(0, 2020), 3, new Day(0, 8)), ofArray([new TemplateExpect(0, new CellStatus(2)), new TemplateExpect(1, 1)])]]))))])])]]);\n}\n\nexport function getDatabaseMap(user) {\n    return ofSeq(collect((tupledArg) => collect((tupledArg_1) => map_1((tupledArg_2) => {\n        const dslTemplate = tupledArg_2[1];\n        const name = toText(interpolate(\"%P()/%P()/%P()\", [tupledArg[0], tupledArg_1[0], tupledArg_2[0]]));\n        return [name, new DslTemplate(dslTemplate.Position, map_1((templateTask) => {\n            let inputRecord;\n            return new TemplateTask((inputRecord = templateTask.Task, new Task_1(inputRecord.Id, equals(templateTask.Task.Name, (new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0)).Name) ? (new TaskName(0, name)) : templateTask.Task.Name, inputRecord.Information, inputRecord.Duration, inputRecord.PendingAfter, inputRecord.MissedAfter, inputRecord.Scheduling, inputRecord.Priority)), templateTask.Events, templateTask.Expected);\n        }, dslTemplate.Tasks))];\n    }, tupledArg_1[1]), tupledArg[1]), getDatabase(user)));\n}\n\nexport function createCellStatusChangeInteraction(user, task, date, manualCellStatus) {\n    return new UserInteraction(0, new FlukeDateTime(date, user.DayStart), user.Username, new Interaction(2, task.Id, new DateId(0, date), new CellInteraction(1, (manualCellStatus.tag === 2) ? (new CellStatusChange(2)) : ((manualCellStatus.tag === 1) ? (new CellStatusChange(0, manualCellStatus.fields[0])) : ((manualCellStatus.tag === 3) ? (new CellStatusChange(3)) : (new CellStatusChange(1)))))));\n}\n\nexport function createTaskState(moment, task, sortTaskMap, dslTasks) {\n    let inputRecord;\n    const patternInput = fold(uncurry(2, (tupledArg) => {\n        const taskState = tupledArg[0];\n        const userInteractions = tupledArg[1];\n        return (tupledArg_1) => {\n            let sortTaskMap_1, getTask, inputRecord_1, inputRecord_3, inputRecord_4, inputRecord_5, inputRecord_2;\n            const dslTask = tupledArg_1[0];\n            const user = tupledArg_1[1];\n            switch (dslTask.tag) {\n                case 4: {\n                    return [taskState, append(userInteractions, singleton(new UserInteraction(0, moment, user.Username, new Interaction(2, task.Id, new DateId(0, dslTask.fields[0]), new CellInteraction(0, new Attachment(0, new Comment$(0, dslTask.fields[1])))))))];\n                }\n                case 1: {\n                    return [taskState, append(userInteractions, singleton(new UserInteraction(0, moment, user.Username, new Interaction(1, task.Id, new TaskInteraction(2, new Session(0, dslTask.fields[0]))))))];\n                }\n                case 6: {\n                    return [taskState, (sortTaskMap == null) ? userInteractions : ((sortTaskMap_1 = sortTaskMap, (getTask = ((taskName) => map_2((taskName_1) => {\n                        const _arg1 = tryFind(taskName_1, sortTaskMap_1);\n                        if (_arg1 == null) {\n                            return toFail(interpolate(\"DslTaskSort. Task not found: %P(). Map length: %P()\", [taskName_1, FSharpMap__get_Count(sortTaskMap_1)]));\n                        }\n                        else {\n                            return _arg1;\n                        }\n                    }, taskName)), append(userInteractions, singleton(new UserInteraction(0, moment, user.Username, new Interaction(1, task.Id, new TaskInteraction(3, map_2((task_2) => task_2.Id, getTask(dslTask.fields[0])), map_2((task_3) => task_3.Id, getTask(dslTask.fields[1]))))))))))];\n                }\n                case 3: {\n                    return [taskState, append(userInteractions, singleton(createCellStatusChangeInteraction(user, task, dslTask.fields[0], dslTask.fields[1])))];\n                }\n                case 2: {\n                    return [new TaskState((inputRecord_1 = taskState.Task, new Task_1(inputRecord_1.Id, inputRecord_1.Name, inputRecord_1.Information, inputRecord_1.Duration, inputRecord_1.PendingAfter, inputRecord_1.MissedAfter, inputRecord_1.Scheduling, dslTask.fields[0])), taskState.Sessions, taskState.Attachments, taskState.SortList, taskState.CellStateMap), userInteractions];\n                }\n                case 5: {\n                    const set$ = dslTask.fields[0];\n                    switch (set$.tag) {\n                        case 1: {\n                            return [new TaskState((inputRecord_3 = taskState.Task, new Task_1(inputRecord_3.Id, inputRecord_3.Name, inputRecord_3.Information, inputRecord_3.Duration, set$.fields[0], inputRecord_3.MissedAfter, inputRecord_3.Scheduling, inputRecord_3.Priority)), taskState.Sessions, taskState.Attachments, taskState.SortList, taskState.CellStateMap), userInteractions];\n                        }\n                        case 2: {\n                            return [new TaskState((inputRecord_4 = taskState.Task, new Task_1(inputRecord_4.Id, inputRecord_4.Name, inputRecord_4.Information, inputRecord_4.Duration, inputRecord_4.PendingAfter, set$.fields[0], inputRecord_4.Scheduling, inputRecord_4.Priority)), taskState.Sessions, taskState.Attachments, taskState.SortList, taskState.CellStateMap), userInteractions];\n                        }\n                        case 3: {\n                            return [new TaskState((inputRecord_5 = taskState.Task, new Task_1(inputRecord_5.Id, inputRecord_5.Name, inputRecord_5.Information, new Minute(0, set$.fields[0]), inputRecord_5.PendingAfter, inputRecord_5.MissedAfter, inputRecord_5.Scheduling, inputRecord_5.Priority)), taskState.Sessions, taskState.Attachments, taskState.SortList, taskState.CellStateMap), userInteractions];\n                        }\n                        default: {\n                            return [new TaskState((inputRecord_2 = taskState.Task, new Task_1(inputRecord_2.Id, inputRecord_2.Name, inputRecord_2.Information, inputRecord_2.Duration, inputRecord_2.PendingAfter, inputRecord_2.MissedAfter, set$.fields[0], inputRecord_2.Priority)), taskState.Sessions, taskState.Attachments, taskState.SortList, taskState.CellStateMap), userInteractions];\n                        }\n                    }\n                }\n                default: {\n                    return [taskState, append(userInteractions, singleton(new UserInteraction(0, moment, user.Username, new Interaction(1, task.Id, new TaskInteraction(0, new Attachment(0, new Comment$(0, dslTask.fields[0])))))))];\n                }\n            }\n        };\n    }), [(inputRecord = (new TaskState(new Task_1(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_48(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_96(0, new ManualScheduling(1)), void 0), empty(), empty(), empty(), empty_1())), new TaskState(task, inputRecord.Sessions, inputRecord.Attachments, inputRecord.SortList, inputRecord.CellStateMap)), empty()], dslTasks);\n    return [patternInput[0], patternInput[1]];\n}\n\nexport function createLaneRenderingDslData(input) {\n    const TaskStateList = singleton(createTaskState(input.Position, input.Task, void 0, map_1((x) => [x, input.User], input.Events)));\n    return new DslData(ofSeq(map_1((information) => [information, new InformationState(information, empty(), empty())], singleton(input.Task.Information))), TaskStateList);\n}\n\nexport function mergeDslDataIntoDatabaseState(dslData, databaseState) {\n    const newInformationStateMap = fold_1((m, k, v$0027) => {\n        let matchValue, newValue, oldValue;\n        return add(k, (matchValue = tryFind(k, m), (matchValue == null) ? v$0027 : ((newValue = v$0027, (oldValue = matchValue, new InformationState(oldValue.Information, append(oldValue.Attachments, newValue.Attachments), append(oldValue.SortList, newValue.SortList)))))), m);\n    }, databaseState.InformationStateMap, dslData.InformationStateMap);\n    const patternInput = unzip(dslData.TaskStateList);\n    const userInteractions = collect((x) => x, patternInput[1]);\n    return fold((databaseState_3, _arg1) => {\n        let cellStatusChange;\n        const moment = _arg1.fields[0];\n        const interaction = _arg1.fields[2];\n        switch (interaction.tag) {\n            case 1: {\n                const taskInteraction = interaction.fields[1];\n                const taskId = interaction.fields[0];\n                const taskState_1 = FSharpMap__get_Item(databaseState_3.TaskStateMap, taskId);\n                return new DatabaseState(databaseState_3.Database, databaseState_3.InformationStateMap, add(taskId, (taskInteraction.tag === 3) ? (new TaskState(taskState_1.Task, taskState_1.Sessions, taskState_1.Attachments, cons([taskInteraction.fields[0], taskInteraction.fields[1]], taskState_1.SortList), taskState_1.CellStateMap)) : ((taskInteraction.tag === 2) ? (new TaskState(taskState_1.Task, cons(taskInteraction.fields[0], taskState_1.Sessions), taskState_1.Attachments, taskState_1.SortList, taskState_1.CellStateMap)) : ((taskInteraction.tag === 1) ? taskState_1 : (new TaskState(taskState_1.Task, taskState_1.Sessions, cons([moment, taskInteraction.fields[0]], taskState_1.Attachments), taskState_1.SortList, taskState_1.CellStateMap)))), databaseState_3.TaskStateMap));\n            }\n            case 2: {\n                const taskId_1 = interaction.fields[0];\n                const dateId = interaction.fields[1];\n                const cellInteraction = interaction.fields[2];\n                const taskState_2 = FSharpMap__get_Item(databaseState_3.TaskStateMap, taskId_1);\n                let cellState;\n                const value_1 = new CellState(new CellStatus(0), empty(), empty());\n                cellState = defaultArg(tryFind(dateId, taskState_2.CellStateMap), value_1);\n                return new DatabaseState(databaseState_3.Database, databaseState_3.InformationStateMap, add(taskId_1, new TaskState(taskState_2.Task, taskState_2.Sessions, taskState_2.Attachments, taskState_2.SortList, add(dateId, (cellInteraction.tag === 1) ? ((cellStatusChange = cellInteraction.fields[0], new CellState(new CellStatus(5, _arg1.fields[1], (cellStatusChange.tag === 2) ? (new ManualCellStatus(2)) : ((cellStatusChange.tag === 0) ? (new ManualCellStatus(1, cellStatusChange.fields[0])) : ((cellStatusChange.tag === 3) ? (new ManualCellStatus(3)) : (new ManualCellStatus(0))))), cellState.Attachments, cellState.Sessions))) : (new CellState(cellState.Status, cons([moment, cellInteraction.fields[0]], cellState.Attachments), cellState.Sessions)), taskState_2.CellStateMap)), databaseState_3.TaskStateMap));\n            }\n            default: {\n                const informationInteraction = interaction.fields[1];\n                const information = interaction.fields[0];\n                let informationState;\n                const value = new InformationState(information, empty(), empty());\n                informationState = defaultArg(tryFind(information, databaseState_3.InformationStateMap), value);\n                return new DatabaseState(databaseState_3.Database, add(information, (informationInteraction.tag === 1) ? (new InformationState(informationState.Information, informationState.Attachments, cons([informationInteraction.fields[0], informationInteraction.fields[1]], informationState.SortList))) : (new InformationState(informationState.Information, cons([moment, informationInteraction.fields[0]], informationState.Attachments), informationState.SortList)), databaseState_3.InformationStateMap), databaseState_3.TaskStateMap);\n            }\n        }\n    }, new DatabaseState(databaseState.Database, newInformationStateMap, fold((taskStateMap, taskState) => {\n        let oldValue_1, newValue_1;\n        const oldTaskState = tryFind(taskState.Task.Id, databaseState.TaskStateMap);\n        return add(taskState.Task.Id, (oldTaskState == null) ? taskState : ((oldValue_1 = oldTaskState, (newValue_1 = taskState, new TaskState(oldValue_1.Task, append(oldValue_1.Sessions, newValue_1.Sessions), append(oldValue_1.Attachments, newValue_1.Attachments), append(oldValue_1.SortList, newValue_1.SortList), fold_1((m_1, k_1, v$0027_1) => {\n            let matchValue_1, newValue_2, oldValue_2, Sessions;\n            return add(k_1, (matchValue_1 = tryFind(k_1, m_1), (matchValue_1 == null) ? v$0027_1 : ((newValue_2 = v$0027_1, (oldValue_2 = matchValue_1, (Sessions = append(oldValue_2.Sessions, newValue_2.Sessions), new CellState(newValue_2.Status, append(oldValue_2.Attachments, newValue_2.Attachments), Sessions)))))), m_1);\n        }, oldValue_1.CellStateMap, newValue_1.CellStateMap))))), taskStateMap);\n    }, databaseState.TaskStateMap, patternInput[0])), userInteractions);\n}\n\nexport function databaseStateFromDslTemplate(user, databaseId, templateName, dslTemplate) {\n    const dslDataList = map_1((templateTask) => createLaneRenderingDslData({\n        Events: templateTask.Events,\n        Position: dslTemplate.Position,\n        Task: templateTask.Task,\n        User: user,\n    }), dslTemplate.Tasks);\n    return fold((databaseState_1, dslData) => mergeDslDataIntoDatabaseState(dslData, databaseState_1), new DatabaseState(new Database(defaultArgWith(databaseId, () => (new DatabaseId(0, newGuid()))), new DatabaseName(0, templateName), user.Username, defaultArg(new DatabaseAccess(0), new DatabaseAccess(1, empty())), dslTemplate.Position), empty_1(), empty_1()), dslDataList);\n}\n\nexport const templatesUser = new User(new Username(0, \"Fluke\"), new Color(0, \"#000000\"), 0, new FlukeTime(new Hour(0, 12), new Minute(0, 0)), new Minute(0, 25), new Minute(0, 5));\n\n","import { seqToString, toString, Union } from \"../.fable/fable-library.3.2.7/Types.js\";\nimport { parseEnum, list_type, tuple_type, array_type, enum_type, class_type, int32_type, option_type, bool_type, union_type, string_type } from \"../.fable/fable-library.3.2.7/Reflection.js\";\nimport { TaskState, CellStatus, CellState, InformationState, Access, ManualCellStatus$reflection, DatabaseAccess$reflection, DatabaseName$reflection, Database, DatabaseAccess, DatabaseName, DatabaseId, DatabaseId$reflection } from \"../../Fluke.Shared/Domain/State.fs.js\";\nimport { Information_Name_Z233FE4C2, Day, Priority$reflection, Scheduling$reflection, TaskName$reflection, Task, Scheduling as Scheduling_1, ManualScheduling, Information as Information_1, Area, AreaName, TaskName, TaskId, Information$reflection, Minute$reflection, FlukeTime$reflection, FlukeTime, Minute, Hour, TaskId$reflection } from \"../../Fluke.Shared/Domain/Model.fs.js\";\nimport { isNullOrWhiteSpace, toConsole, interpolate, toText } from \"../.fable/fable-library.3.2.7/String.js\";\nimport { JS_deviceInfo, JS_ofNonEmptyObj, JS_debounce, JS_isDebug } from \"./Bindings/JS.fs.js\";\nimport { waitForAll, Selectors_gunAtomNode, Atoms_username, atomWithStorage } from \"./Bindings/Store.fs.js\";\nimport { collect, item, indexed as indexed_1, length as length_1, toArray as toArray_1, sortBy, exists, reverse, tryPick, tail, mapIndexed as mapIndexed_1, filter as filter_1, head, map as map_3, append, isEmpty, sortByDescending, choose, sortWith, tryHead, ofArray, singleton, empty } from \"../.fable/fable-library.3.2.7/List.js\";\nimport { Jotai_registerAtom, Jotai_jotai, Jotai_jotaiUtils, Jotai_AtomReference$1, Jotai_queryAtomPath } from \"./Bindings/Jotai.fs.js\";\nimport { bind, defaultArg, some, ofNullable, map as map_1, value as value_22 } from \"../.fable/fable-library.3.2.7/Option.js\";\nimport { compare } from \"./Bindings/DeepEqual.fs.js\";\nimport { batchSubscribe, getGunNodePath } from \"./Bindings/Gun.fs.js\";\nimport { addCount } from \"./Bindings/Profiling.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { comparePrimitives, stringHash, safeHash, uncurry, int32ToString, compare as compare_2, Lazy, equals } from \"../.fable/fable-library.3.2.7/Util.js\";\nimport { Auto_unsafeFromString_Z5CB6BD } from \"../.fable/Thoth.Json.5.1.0/Decode.fs.js\";\nimport { compare as compare_1 } from \"../.fable/fable-library.3.2.7/Long.js\";\nimport { minute as minute_6, hour as hour_6, dayOfWeek, op_Subtraction, day as day_9, month as month_9, year as year_9, compare as compare_3, addDays, create, getTicks, now } from \"../.fable/fable-library.3.2.7/Date.js\";\nimport { Auto_toString_5A41365E } from \"../.fable/Thoth.Json.5.1.0/Encode.fs.js\";\nimport { DateTime_ticksDiff } from \"../../Fluke.Shared/Core.fs.js\";\nimport { isEmpty as isEmpty_1, FSharpSet__get_Count, contains, ofSeq as ofSeq_1, union, remove as remove_1, add as add_1, FSharpSet__Contains, toArray, empty as empty_1 } from \"../.fable/fable-library.3.2.7/Set.js\";\nimport { sortLanes, filterTaskStateSeq, View$reflection, View } from \"../../Fluke.Shared/View.fs.js\";\nimport { FlukeDate, Year, FlukeDateTime, DateId, Session$reflection, Attachment$reflection, FlukeDateTime$reflection, Username$reflection, Username, DateId$reflection, AttachmentId$reflection, Language$reflection, Language } from \"../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { ActiveSession, DockType$reflection } from \"./TempUI.fs.js\";\nimport { FSharpMap__get_Item, FSharpMap__get_IsEmpty, remove, map as map_4, ofSeq, add, fold, filter, tryFind, ofArray as ofArray_1, empty as empty_2 } from \"../.fable/fable-library.3.2.7/Map.js\";\nimport { renderTaskStatusMap, getDateSequence } from \"../../Fluke.Shared/Rendering.fs.js\";\nimport { FSharpChoice$2 } from \"../.fable/fable-library.3.2.7/Choice.js\";\nimport { zip, indexed, map as map_2, mapIndexed } from \"../.fable/fable-library.3.2.7/Array.js\";\nimport { templatesUser } from \"../../Fluke.Shared/Templates.fs.js\";\nimport { exists as exists_1, filter as filter_2, reduce, choose as choose_1, length, map as map_5, toList } from \"../.fable/fable-library.3.2.7/Seq.js\";\nimport { totalMinutes } from \"../.fable/fable-library.3.2.7/TimeSpan.js\";\nimport { List_groupBy, distinct } from \"../.fable/fable-library.3.2.7/Seq2.js\";\nimport { Information_toString, Information_toTag } from \"../../Fluke.Shared/Domain/ModelGenerated.fs.js\";\nimport { addDays as addDays_1 } from \"date-fns\";\nimport { rangeDouble } from \"../.fable/fable-library.3.2.7/Range.js\";\nimport { sortLanesByTimeOfDay } from \"../../Fluke.Shared/Sorting.fs.js\";\n\nexport class TextKey extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"TextKey\"];\n    }\n}\n\nexport function TextKey$reflection() {\n    return union_type(\"Fluke.UI.Frontend.State.TextKey\", [], TextKey, () => [[[\"key\", string_type]]]);\n}\n\nexport class Join extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Database\", \"Task\"];\n    }\n}\n\nexport function Join$reflection() {\n    return union_type(\"Fluke.UI.Frontend.State.Join\", [], Join, () => [[[\"Item\", DatabaseId$reflection()]], [[\"Item1\", DatabaseId$reflection()], [\"Item2\", TaskId$reflection()]]]);\n}\n\nexport const Atoms_debug = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"debug\"]));\n    const defaultValue = JS_isDebug();\n    const storageAtom = atomWithStorage(atomPath, defaultValue, (x) => x);\n    let syncAtom;\n    const atomPath_1 = atomPath;\n    const defaultValue_1 = defaultValue;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_2, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_2 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue_1), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x_1) => x_1, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(bool_type),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => bool_type,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_3 = atomPath_1;\n        return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_3);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue_1, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    syncAtom = wrapper;\n    let lastSetAtom = void 0;\n    let lastValue_3 = void 0;\n    let wrapper_3;\n    const atomPath_4 = atomPath;\n    wrapper_3 = Jotai_registerAtom(atomPath_4, void 0, Jotai_jotai.atom((getter_12) => {\n        let lastSetAtom_1;\n        addCount(atomPath_4);\n        const getter_7 = getter_12;\n        const matchValue_5 = [getter_7(syncAtom), getter_7(storageAtom)];\n        if (compare(defaultValue, matchValue_5[0]) ? ((compare(defaultValue, matchValue_5[1]) ? true : (getter_7(Atoms_username) == null)) ? true : (lastValue_3 == null)) : false) {\n            return getter_7(storageAtom);\n        }\n        else {\n            const syncValue_2 = matchValue_5[0];\n            let pattern_matching_result_5, lastSetAtom_2;\n            if (lastSetAtom != null) {\n                if ((lastSetAtom_1 = lastSetAtom, (lastValue_3 == null) ? true : (!compare(syncValue_2, lastValue_3)))) {\n                    pattern_matching_result_5 = 0;\n                    lastSetAtom_2 = lastSetAtom;\n                }\n                else {\n                    pattern_matching_result_5 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_5 = 1;\n            }\n            switch (pattern_matching_result_5) {\n                case 0: {\n                    lastValue_3 = syncValue_2;\n                    lastSetAtom_2(syncValue_2);\n                    break;\n                }\n            }\n            return syncValue_2;\n        }\n    }, (getter_13, setter_6, value_21) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_4])));\n        const newValue_4 = value_21;\n        const setter_3 = setter_6;\n        if ((lastValue_3 == null) ? true : (!compare(newValue_4, lastValue_3))) {\n            lastValue_3 = newValue_4;\n            setter_3(syncAtom, newValue_4);\n        }\n        setter_3(storageAtom, newValue_4);\n    }))[0];\n    wrapper_3.onMount = ((setAtom_3) => {\n        lastSetAtom = setAtom_3;\n        return () => {\n            lastSetAtom = (void 0);\n        };\n    });\n    return wrapper_3;\n})();\n\nexport const Atoms_lastTotal = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"lastTotal\"]));\n    const defaultValue = -1;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(option_type(int32_type)),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => option_type(int32_type),\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_sessionRestored = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"sessionRestored\"]));\n    return Jotai_registerAtom(atomPath, void 0, Jotai_jotai.atom((addCount(atomPath), false)))[0];\n})();\n\nexport const Atoms_initialPeerSkipped = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"initialPeerSkipped\"]));\n    return Jotai_registerAtom(atomPath, void 0, Jotai_jotai.atom((addCount(atomPath), false)))[0];\n})();\n\nexport const Atoms_position = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"position\"]));\n    return Jotai_registerAtom(atomPath, void 0, Jotai_jotai.atom((addCount(atomPath), void 0)))[0];\n})();\n\nexport const Atoms_ctrlPressed = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"ctrlPressed\"]));\n    return Jotai_registerAtom(atomPath, void 0, Jotai_jotai.atom((addCount(atomPath), false)))[0];\n})();\n\nexport const Atoms_shiftPressed = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"shiftPressed\"]));\n    return Jotai_registerAtom(atomPath, void 0, Jotai_jotai.atom((addCount(atomPath), false)))[0];\n})();\n\nexport const Atoms_databaseIdSet = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"databaseIdSet\"]));\n    const defaultValue = empty_1({\n        Compare: (x, y) => compare_2(x, y),\n    });\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x_1) => x_1, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [DatabaseId$reflection()])),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [DatabaseId$reflection()]),\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_expandedDatabaseIdSetDefault = empty_1({\n    Compare: (x, y) => compare_2(x, y),\n});\n\nexport const Atoms_expandedDatabaseIdSet = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"expandedDatabaseIdSet\"]));\n    const defaultValue = Atoms_expandedDatabaseIdSetDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [DatabaseId$reflection()])),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [DatabaseId$reflection()]),\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_selectedDatabaseIdSetDefault = empty_1({\n    Compare: (x, y) => compare_2(x, y),\n});\n\nexport const Atoms_selectedDatabaseIdSet = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"selectedDatabaseIdSet\"]));\n    const defaultValue = Atoms_selectedDatabaseIdSetDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [DatabaseId$reflection()])),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [DatabaseId$reflection()]),\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_viewDefault = new View(0);\n\nexport const Atoms_view = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"view\"]));\n    const defaultValue = Atoms_viewDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(View$reflection()),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: View$reflection,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_languageDefault = new Language(0);\n\nexport const Atoms_language = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"language\"]));\n    const defaultValue = Atoms_languageDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(Language$reflection()),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: Language$reflection,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_color = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"color\"]));\n    const defaultValue = void 0;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(option_type(string_type)),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => option_type(string_type),\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_weekStartDefault = 0;\n\nexport const Atoms_weekStart = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"weekStart\"]));\n    const defaultValue = Atoms_weekStartDefault | 0;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(enum_type(\"System.DayOfWeek\", int32_type, [[\"Sunday\", 0], [\"Monday\", 1], [\"Tuesday\", 2], [\"Wednesday\", 3], [\"Thursday\", 4], [\"Friday\", 5], [\"Saturday\", 6]])),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = (lastValue[1] | 0), ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = ((lastValue != null) ? lastValue[1] : null) | 0;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => enum_type(\"System.DayOfWeek\", int32_type, [[\"Sunday\", 0], [\"Monday\", 1], [\"Tuesday\", 2], [\"Wednesday\", 3], [\"Thursday\", 4], [\"Friday\", 5], [\"Saturday\", 6]]),\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result | 0;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12 | 0;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = (((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn) | 0;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2 | 0;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_dayStartDefault = new FlukeTime(new Hour(0, 0), new Minute(0, 0));\n\nexport const Atoms_dayStart = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"dayStart\"]));\n    const defaultValue = Atoms_dayStartDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(FlukeTime$reflection()),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: FlukeTime$reflection,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_sessionDurationDefault = new Minute(0, 25);\n\nexport const Atoms_sessionDuration = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"sessionDuration\"]));\n    const defaultValue = Atoms_sessionDurationDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(Minute$reflection()),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: Minute$reflection,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_sessionBreakDurationDefault = new Minute(0, 5);\n\nexport const Atoms_sessionBreakDuration = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"sessionBreakDuration\"]));\n    const defaultValue = Atoms_sessionBreakDurationDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(Minute$reflection()),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: Minute$reflection,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_daysBeforeDefault = 7;\n\nexport const Atoms_daysBefore = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"daysBefore\"]));\n    const defaultValue = Atoms_daysBeforeDefault | 0;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(int32_type),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = (lastValue[1] | 0), ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = ((lastValue != null) ? lastValue[1] : null) | 0;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, int32ToString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => int32_type,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result | 0;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12 | 0;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = (((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn) | 0;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2 | 0;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_daysAfterDefault = 7;\n\nexport const Atoms_daysAfter = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"daysAfter\"]));\n    const defaultValue = Atoms_daysAfterDefault | 0;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(int32_type),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = (lastValue[1] | 0), ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = ((lastValue != null) ? lastValue[1] : null) | 0;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, int32ToString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => int32_type,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result | 0;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12 | 0;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = (((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn) | 0;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2 | 0;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_searchTextDefault = \"\";\n\nexport const Atoms_searchText = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"searchText\"]));\n    const defaultValue = Atoms_searchTextDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(string_type),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, copyOfStruct)) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_cellSizeDefault = 19;\n\nexport const Atoms_cellSize = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"cellSize\"]));\n    const defaultValue = Atoms_cellSizeDefault | 0;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(int32_type),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = (lastValue[1] | 0), ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = ((lastValue != null) ? lastValue[1] : null) | 0;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, int32ToString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => int32_type,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result | 0;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12 | 0;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = (((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn) | 0;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2 | 0;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_fontSizeDefault = 15;\n\nexport const Atoms_fontSize = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"fontSize\"]));\n    const defaultValue = Atoms_fontSizeDefault | 0;\n    const storageAtom = atomWithStorage(atomPath, defaultValue, (x) => x);\n    let syncAtom;\n    const atomPath_1 = atomPath;\n    const defaultValue_1 = defaultValue | 0;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_2, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_2 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue_1), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x_1) => x_1, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(int32_type),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = (lastValue[1] | 0), ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = ((lastValue != null) ? lastValue[1] : null) | 0;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, int32ToString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => int32_type,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_3 = atomPath_1;\n        return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_3);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result | 0;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n            const newValueFn = value_12 | 0;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = (((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn) | 0;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue_1, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2 | 0;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    syncAtom = wrapper;\n    let lastSetAtom = void 0;\n    let lastValue_3 = void 0;\n    let wrapper_3;\n    const atomPath_4 = atomPath;\n    wrapper_3 = Jotai_registerAtom(atomPath_4, void 0, Jotai_jotai.atom((getter_12) => {\n        let lastSetAtom_1;\n        addCount(atomPath_4);\n        const getter_7 = getter_12;\n        const matchValue_5 = [getter_7(syncAtom), getter_7(storageAtom)];\n        if (compare(defaultValue, matchValue_5[0]) ? ((compare(defaultValue, matchValue_5[1]) ? true : (getter_7(Atoms_username) == null)) ? true : (lastValue_3 == null)) : false) {\n            return getter_7(storageAtom);\n        }\n        else {\n            const syncValue_2 = matchValue_5[0] | 0;\n            let pattern_matching_result_5, lastSetAtom_2;\n            if (lastSetAtom != null) {\n                if ((lastSetAtom_1 = lastSetAtom, (lastValue_3 == null) ? true : (!compare(syncValue_2, lastValue_3)))) {\n                    pattern_matching_result_5 = 0;\n                    lastSetAtom_2 = lastSetAtom;\n                }\n                else {\n                    pattern_matching_result_5 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_5 = 1;\n            }\n            switch (pattern_matching_result_5) {\n                case 0: {\n                    lastValue_3 = syncValue_2;\n                    lastSetAtom_2(syncValue_2);\n                    break;\n                }\n            }\n            return syncValue_2 | 0;\n        }\n    }, (getter_13, setter_6, value_21) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_4])));\n        const newValue_4 = value_21 | 0;\n        const setter_3 = setter_6;\n        if ((lastValue_3 == null) ? true : (!compare(newValue_4, lastValue_3))) {\n            lastValue_3 = newValue_4;\n            setter_3(syncAtom, newValue_4);\n        }\n        setter_3(storageAtom, newValue_4);\n    }))[0];\n    wrapper_3.onMount = ((setAtom_3) => {\n        lastSetAtom = setAtom_3;\n        return () => {\n            lastSetAtom = (void 0);\n        };\n    });\n    return wrapper_3;\n})();\n\nexport const Atoms_darkModeDefault = false;\n\nexport const Atoms_darkMode = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"darkMode\"]));\n    const defaultValue = Atoms_darkModeDefault;\n    const storageAtom = atomWithStorage(atomPath, defaultValue, (x) => x);\n    let syncAtom;\n    const atomPath_1 = atomPath;\n    const defaultValue_1 = defaultValue;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_2, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_2 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue_1), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x_1) => x_1, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(bool_type),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => bool_type,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_3 = atomPath_1;\n        return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_3);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue_1, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    syncAtom = wrapper;\n    let lastSetAtom = void 0;\n    let lastValue_3 = void 0;\n    let wrapper_3;\n    const atomPath_4 = atomPath;\n    wrapper_3 = Jotai_registerAtom(atomPath_4, void 0, Jotai_jotai.atom((getter_12) => {\n        let lastSetAtom_1;\n        addCount(atomPath_4);\n        const getter_7 = getter_12;\n        const matchValue_5 = [getter_7(syncAtom), getter_7(storageAtom)];\n        if (compare(defaultValue, matchValue_5[0]) ? ((compare(defaultValue, matchValue_5[1]) ? true : (getter_7(Atoms_username) == null)) ? true : (lastValue_3 == null)) : false) {\n            return getter_7(storageAtom);\n        }\n        else {\n            const syncValue_2 = matchValue_5[0];\n            let pattern_matching_result_5, lastSetAtom_2;\n            if (lastSetAtom != null) {\n                if ((lastSetAtom_1 = lastSetAtom, (lastValue_3 == null) ? true : (!compare(syncValue_2, lastValue_3)))) {\n                    pattern_matching_result_5 = 0;\n                    lastSetAtom_2 = lastSetAtom;\n                }\n                else {\n                    pattern_matching_result_5 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_5 = 1;\n            }\n            switch (pattern_matching_result_5) {\n                case 0: {\n                    lastValue_3 = syncValue_2;\n                    lastSetAtom_2(syncValue_2);\n                    break;\n                }\n            }\n            return syncValue_2;\n        }\n    }, (getter_13, setter_6, value_21) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_4])));\n        const newValue_4 = value_21;\n        const setter_3 = setter_6;\n        if ((lastValue_3 == null) ? true : (!compare(newValue_4, lastValue_3))) {\n            lastValue_3 = newValue_4;\n            setter_3(syncAtom, newValue_4);\n        }\n        setter_3(storageAtom, newValue_4);\n    }))[0];\n    wrapper_3.onMount = ((setAtom_3) => {\n        lastSetAtom = setAtom_3;\n        return () => {\n            lastSetAtom = (void 0);\n        };\n    });\n    return wrapper_3;\n})();\n\nexport const Atoms_systemUiFontDefault = true;\n\nexport const Atoms_systemUiFont = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"systemUiFont\"]));\n    const defaultValue = Atoms_systemUiFontDefault;\n    const storageAtom = atomWithStorage(atomPath, defaultValue, (x) => x);\n    let syncAtom;\n    const atomPath_1 = atomPath;\n    const defaultValue_1 = defaultValue;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_2, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_2 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue_1), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x_1) => x_1, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(bool_type),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => bool_type,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_3 = atomPath_1;\n        return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_3);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue_1, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    syncAtom = wrapper;\n    let lastSetAtom = void 0;\n    let lastValue_3 = void 0;\n    let wrapper_3;\n    const atomPath_4 = atomPath;\n    wrapper_3 = Jotai_registerAtom(atomPath_4, void 0, Jotai_jotai.atom((getter_12) => {\n        let lastSetAtom_1;\n        addCount(atomPath_4);\n        const getter_7 = getter_12;\n        const matchValue_5 = [getter_7(syncAtom), getter_7(storageAtom)];\n        if (compare(defaultValue, matchValue_5[0]) ? ((compare(defaultValue, matchValue_5[1]) ? true : (getter_7(Atoms_username) == null)) ? true : (lastValue_3 == null)) : false) {\n            return getter_7(storageAtom);\n        }\n        else {\n            const syncValue_2 = matchValue_5[0];\n            let pattern_matching_result_5, lastSetAtom_2;\n            if (lastSetAtom != null) {\n                if ((lastSetAtom_1 = lastSetAtom, (lastValue_3 == null) ? true : (!compare(syncValue_2, lastValue_3)))) {\n                    pattern_matching_result_5 = 0;\n                    lastSetAtom_2 = lastSetAtom;\n                }\n                else {\n                    pattern_matching_result_5 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_5 = 1;\n            }\n            switch (pattern_matching_result_5) {\n                case 0: {\n                    lastValue_3 = syncValue_2;\n                    lastSetAtom_2(syncValue_2);\n                    break;\n                }\n            }\n            return syncValue_2;\n        }\n    }, (getter_13, setter_6, value_21) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_4])));\n        const newValue_4 = value_21;\n        const setter_3 = setter_6;\n        if ((lastValue_3 == null) ? true : (!compare(newValue_4, lastValue_3))) {\n            lastValue_3 = newValue_4;\n            setter_3(syncAtom, newValue_4);\n        }\n        setter_3(storageAtom, newValue_4);\n    }))[0];\n    wrapper_3.onMount = ((setAtom_3) => {\n        lastSetAtom = setAtom_3;\n        return () => {\n            lastSetAtom = (void 0);\n        };\n    });\n    return wrapper_3;\n})();\n\nexport const Atoms_leftDockDefault = void 0;\n\nexport const Atoms_leftDock = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"leftDock\"]));\n    const defaultValue = Atoms_leftDockDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(option_type(DockType$reflection())),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => option_type(DockType$reflection()),\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_rightDockDefault = void 0;\n\nexport const Atoms_rightDock = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"rightDock\"]));\n    const defaultValue = Atoms_rightDockDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(option_type(DockType$reflection())),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => option_type(DockType$reflection()),\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_hideTemplatesDefault = false;\n\nexport const Atoms_hideTemplates = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"hideTemplates\"]));\n    const defaultValue = Atoms_hideTemplatesDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(bool_type),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => bool_type,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_hideSchedulingOverlayDefault = false;\n\nexport const Atoms_hideSchedulingOverlay = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"hideSchedulingOverlay\"]));\n    const defaultValue = Atoms_hideSchedulingOverlayDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(bool_type),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => bool_type,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_showViewOptionsDefault = false;\n\nexport const Atoms_showViewOptions = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"showViewOptions\"]));\n    const defaultValue = Atoms_showViewOptionsDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(bool_type),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => bool_type,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_filterTasksByViewDefault = true;\n\nexport const Atoms_filterTasksByView = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"filterTasksByView\"]));\n    const defaultValue = Atoms_filterTasksByViewDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(bool_type),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => bool_type,\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport const Atoms_informationAttachmentMapDefault = empty_2();\n\nexport const Atoms_informationAttachmentMap = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"informationAttachmentMap\"]));\n    const defaultValue = Atoms_informationAttachmentMapDefault;\n    const keyIdentifier = empty();\n    let lastGunAtomNode = void 0;\n    let lastUsername = void 0;\n    let lastValue = void 0;\n    let lastGunValue = void 0;\n    let lastAtomPath = void 0;\n    let lastUserAtomId = void 0;\n    let lastWrapperSet = void 0;\n    const assignLastGunAtomNode = (getter, atom) => {\n        if (lastAtomPath == null) {\n            lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n        }\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n        }\n        const username = getter(Atoms_username);\n        const matchValue = [username, lastAtomPath];\n        let pattern_matching_result, atomPath_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                atomPath_1 = value_22(matchValue[1]);\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_1]));\n                if (matchValue_1 != null) {\n                    const gunAtomNode = matchValue_1;\n                    lastUsername = username_1;\n                    lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_1, username_1])), gunAtomNode];\n                }\n                else {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                }\n                break;\n            }\n            case 1: {\n                lastUsername = (void 0);\n                lastGunAtomNode = (void 0);\n                break;\n            }\n        }\n        return username;\n    };\n    const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n    const gunNodePath = getGunNodePath(atomPath, keyIdentifier);\n    addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n    const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n    if (JS_isDebug()) {\n        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n    }\n    let lastSubscription = void 0;\n    const subscribe = (setAtom_1) => {\n        let copyOfStruct_1;\n        lastWrapperSet = setAtom_1;\n        if (lastGunAtomNode == null) {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n            }\n        }\n        else {\n            const key_1 = lastGunAtomNode[0];\n            const gunAtomNode_3 = lastGunAtomNode[1];\n            addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath, key_1]))]));\n            }\n            batchSubscribe({\n                Fn: (tupledArg) => {\n                    const data = tupledArg[1];\n                    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user = gunAtomNode_3.user();\n                        const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                        let pattern_matching_result_1, keys_1;\n                        if (matchValue_3 != null) {\n                            if (value_22(matchValue_3) != null) {\n                                pattern_matching_result_1 = 0;\n                                keys_1 = value_22(matchValue_3);\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                        switch (pattern_matching_result_1) {\n                            case 0: {\n                                return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                    const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                        ResolveType: () => option_type(class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [Information$reflection(), class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [AttachmentId$reflection()])])),\n                                    });\n                                    return Promise.resolve(decoded);\n                                })))));\n                            }\n                            case 1: {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                })());\n                            }\n                        }\n                    }).catch(((_arg3) => {\n                        const ex = _arg3;\n                        console.error(some(\"[exception5]\"), ex);\n                        return Promise.resolve((() => {\n                            throw ex;\n                        })());\n                    })))))).then(((_arg1_1) => {\n                        let copyOfStruct, lastValueTicks, lastValue_1;\n                        const newValue = _arg1_1;\n                        lastGunValue = newValue;\n                        let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                        if (lastValue != null) {\n                            if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                pattern_matching_result_2 = 0;\n                                lastValue_2 = lastValue[1];\n                                lastValueTicks_1 = lastValue[0];\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                        switch (pattern_matching_result_2) {\n                            case 0: {\n                                addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                            case 1: {\n                                addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                }\n                                setAtom_1(newValue);\n                                return Promise.resolve();\n                            }\n                        }\n                    })))).catch(((_arg2_1) => {\n                        console.error(some(\"[exception1]\"), _arg2_1);\n                        return Promise.resolve();\n                    })))));\n                },\n                GunAtomNode: gunAtomNode_3,\n            });\n            lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n        }\n    };\n    const debounceGunPut = JS_debounce((newValue_1) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n            }\n            return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (lastGunAtomNode == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    const key_2 = lastGunAtomNode[0];\n                    const gunAtomNode_4 = lastGunAtomNode[1];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                    }\n                    return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const user_1 = gunAtomNode_4.user();\n                        const keys_2 = (user_1._).sea;\n                        if (keys_2 == null) {\n                            return Promise.resolve((() => {\n                                throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                            })());\n                        }\n                        else {\n                            const keys_3 = keys_2;\n                            const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [Information$reflection(), class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [AttachmentId$reflection()])]),\n                            }), void 0, void 0, void 0, {\n                                ResolveType: () => string_type,\n                            });\n                            return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                        }\n                    }).catch(((_arg3_1) => {\n                        const ex_2 = _arg3_1;\n                        console.error(some(\"[exception4]\"), ex_2);\n                        return Promise.resolve((() => {\n                            throw ex_2;\n                        })());\n                    })))))).then(((_arg3_2) => {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                        }\n                        if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                            return (new Promise(((res, _err) => {\n                                void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                    if (ack.err != null) {\n                                        res(void 0);\n                                    }\n                                    else {\n                                        res([ack, node]);\n                                    }\n                                });\n                            }))).then(((_arg4) => {\n                                let node_1;\n                                const putResult = _arg4;\n                                let pattern_matching_result_3, ack_2, node_2;\n                                if (putResult != null) {\n                                    if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                        pattern_matching_result_3 = 0;\n                                        ack_2 = putResult[0];\n                                        node_2 = putResult[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                                switch (pattern_matching_result_3) {\n                                    case 0: {\n                                        window.lastAck = ack_2;\n                                        window.lastNode = node_2;\n                                        if (JS_isDebug()) {\n                                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                    case 1: {\n                                        window.lastPutResult = putResult;\n                                        console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                        return Promise.resolve();\n                                    }\n                                }\n                            }));\n                        }\n                        else {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                            }\n                            return Promise.resolve();\n                        }\n                    }));\n                }\n            }).catch(((_arg5) => {\n                console.error(some(\"[exception2]\"), _arg5);\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    }, 1000);\n    const wrapper_2 = () => {\n        const atomPath_2 = atomPath;\n        return Jotai_registerAtom(atomPath_2, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n            let copyOfStruct_2;\n            addCount(atomPath_2);\n            const getter_3 = getter_5;\n            const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n            const result = getter_3(userAtom);\n            addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n            }\n            const userAtomId = userAtom.toString();\n            if (!equals(userAtomId, lastUserAtomId)) {\n                lastUserAtomId = userAtomId;\n                if (lastWrapperSet == null) {\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                }\n                else {\n                    const lastWrapperSet_1 = lastWrapperSet;\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                    }\n                    subscribe(lastWrapperSet_1);\n                }\n            }\n            lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n            return result;\n        }, (getter_6, setter_2, value_12) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            const newValueFn = value_12;\n            const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n            setter_2(userAtom_1, (oldValue) => {\n                let copyOfStruct_3;\n                const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                    addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    debounceGunPut(newValue_2);\n                }\n                lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                }\n                return newValue_2;\n            });\n        }))[0];\n    };\n    const wrapper_1 = new Lazy(wrapper_2);\n    const wrapper = wrapper_1.Value;\n    wrapper.onMount = ((setAtom_2) => {\n        subscribe(setAtom_2);\n        return () => {\n            let pattern_matching_result_4;\n            if (lastSubscription != null) {\n                if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                    pattern_matching_result_4 = 0;\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 1;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    break;\n                }\n                case 1: {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const key = lastGunAtomNode[0];\n                        const gunAtomNode_2 = lastGunAtomNode[1];\n                        addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                        }\n                        void gunAtomNode_2.off();\n                        lastSubscription = (void 0);\n                    }\n                    break;\n                }\n            }\n        };\n    });\n    return wrapper;\n})();\n\nexport class Atoms_UIFlag extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"None\", \"Database\", \"Information\", \"Task\", \"Cell\"];\n    }\n}\n\nexport function Atoms_UIFlag$reflection() {\n    return union_type(\"Fluke.UI.Frontend.State.Atoms.UIFlag\", [], Atoms_UIFlag, () => [[], [[\"Item\", DatabaseId$reflection()]], [[\"Item\", Information$reflection()]], [[\"Item1\", DatabaseId$reflection()], [\"Item2\", TaskId$reflection()]], [[\"Item1\", TaskId$reflection()], [\"Item2\", DateId$reflection()]]]);\n}\n\nexport class Atoms_UIFlagType extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Database\", \"Information\", \"Task\", \"Cell\"];\n    }\n}\n\nexport function Atoms_UIFlagType$reflection() {\n    return union_type(\"Fluke.UI.Frontend.State.Atoms.UIFlagType\", [], Atoms_UIFlagType, () => [[], [], [], []]);\n}\n\nexport const Atoms_uiFlagDefault = new Atoms_UIFlag(0);\n\nexport const Atoms_uiFlag = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"uiFlag\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = Atoms_uiFlagDefault;\n        const keyIdentifier = singleton(toString(param));\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(Atoms_UIFlag$reflection()),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: Atoms_UIFlag$reflection,\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_14) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_14;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_uiVisibleFlagDefault = false;\n\nexport const Atoms_uiVisibleFlag = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"uiVisibleFlag\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = Atoms_uiVisibleFlagDefault;\n        const keyIdentifier = singleton(toString(param));\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(bool_type),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => bool_type,\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_14) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_14;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_accordionFlagDefault = [];\n\nexport const Atoms_accordionFlag = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"accordionFlag\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = Atoms_accordionFlagDefault;\n        const keyIdentifier = singleton(param.fields[0]);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_3 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_3]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1_1) => ((Gun.SEA).decrypt(_arg1_1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(array_type(string_type)),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_2) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_2;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, seqToString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_4 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_4]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => array_type(string_type),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_3) => ((Gun.SEA).sign(_arg1_3, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_4]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_4, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_4, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_4, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_13) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_13;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key_2 = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key_2, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport function Atoms_Database_databaseIdIdentifier(databaseId) {\n    return singleton(databaseId.fields[0]);\n}\n\nexport const Atoms_Database_taskIdSet = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Database\", \"taskIdSet\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = empty_1({\n            Compare: (x, y) => compare_2(x, y),\n        });\n        const keyIdentifier = Atoms_Database_databaseIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x_1) => x_1, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [TaskId$reflection()])),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [TaskId$reflection()]),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Database_name = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Database\", \"name\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Name;\n        const keyIdentifier = Atoms_Database_databaseIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(DatabaseName$reflection()),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: DatabaseName$reflection,\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Database_owner = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Database\", \"owner\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Owner;\n        const keyIdentifier = Atoms_Database_databaseIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(Username$reflection()),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: Username$reflection,\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Database_sharedWith = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Database\", \"sharedWith\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).SharedWith;\n        const keyIdentifier = Atoms_Database_databaseIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(DatabaseAccess$reflection()),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: DatabaseAccess$reflection,\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Database_position = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Database\", \"position\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Position;\n        const keyIdentifier = Atoms_Database_databaseIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(option_type(FlukeDateTime$reflection())),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => option_type(FlukeDateTime$reflection()),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport function Atoms_Attachment_attachmentIdIdentifier(attachmentId) {\n    return singleton(attachmentId.fields[0]);\n}\n\nexport const Atoms_Attachment_timestamp = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Attachment\", \"timestamp\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = void 0;\n        const keyIdentifier = Atoms_Attachment_attachmentIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(option_type(FlukeDateTime$reflection())),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => option_type(FlukeDateTime$reflection()),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Attachment_attachment = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Attachment\", \"attachment\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = void 0;\n        const keyIdentifier = Atoms_Attachment_attachmentIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(option_type(Attachment$reflection())),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => option_type(Attachment$reflection()),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport function Atoms_Task_taskIdIdentifier(taskId) {\n    return singleton(taskId.fields[0]);\n}\n\nexport const Atoms_Task_statusMap = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"statusMap\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = empty_2();\n        const keyIdentifier = Atoms_Task_taskIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [DateId$reflection(), tuple_type(Username$reflection(), ManualCellStatus$reflection())])),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [DateId$reflection(), tuple_type(Username$reflection(), ManualCellStatus$reflection())]),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Task_sessions = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"sessions\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = empty();\n        const keyIdentifier = Atoms_Task_taskIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(list_type(Session$reflection())),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, seqToString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => list_type(Session$reflection()),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Task_attachmentIdSet = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"attachmentIdSet\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = empty_1({\n            Compare: (x, y) => compare_2(x, y),\n        });\n        const keyIdentifier = Atoms_Task_taskIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x_1) => x_1, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [AttachmentId$reflection()])),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [AttachmentId$reflection()]),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Task_cellAttachmentMap = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"cellAttachmentMap\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = empty_2();\n        const keyIdentifier = Atoms_Task_taskIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [DateId$reflection(), class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [AttachmentId$reflection()])])),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [DateId$reflection(), class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [AttachmentId$reflection()])]),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Task_selectionSet = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"selectionSet\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = empty_1({\n            Compare: (x, y) => compare_2(x, y),\n        });\n        const keyIdentifier = Atoms_Task_taskIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x_1) => x_1, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [DateId$reflection()])),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [DateId$reflection()]),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Task_information = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"information\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_1(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_1(0, new ManualScheduling(1)), void 0)).Information;\n        const keyIdentifier = Atoms_Task_taskIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(Information$reflection()),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: Information$reflection,\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Task_name = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"name\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_1(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_1(0, new ManualScheduling(1)), void 0)).Name;\n        const keyIdentifier = Atoms_Task_taskIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(TaskName$reflection()),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: TaskName$reflection,\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Task_scheduling = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"scheduling\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_1(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_1(0, new ManualScheduling(1)), void 0)).Scheduling;\n        const keyIdentifier = Atoms_Task_taskIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(Scheduling$reflection()),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: Scheduling$reflection,\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Task_pendingAfter = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"pendingAfter\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_1(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_1(0, new ManualScheduling(1)), void 0)).PendingAfter;\n        const keyIdentifier = Atoms_Task_taskIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(option_type(FlukeTime$reflection())),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => option_type(FlukeTime$reflection()),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Task_missedAfter = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"missedAfter\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_1(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_1(0, new ManualScheduling(1)), void 0)).MissedAfter;\n        const keyIdentifier = Atoms_Task_taskIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(option_type(FlukeTime$reflection())),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => option_type(FlukeTime$reflection()),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Task_priority = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"priority\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_1(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_1(0, new ManualScheduling(1)), void 0)).Priority;\n        const keyIdentifier = Atoms_Task_taskIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(option_type(Priority$reflection())),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => option_type(Priority$reflection()),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport const Atoms_Task_duration = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"duration\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const defaultValue = (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_1(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_1(0, new ManualScheduling(1)), void 0)).Duration;\n        const keyIdentifier = Atoms_Task_taskIdIdentifier(param);\n        let lastGunAtomNode = void 0;\n        let lastUsername = void 0;\n        let lastValue = void 0;\n        let lastGunValue = void 0;\n        let lastAtomPath = void 0;\n        let lastUserAtomId = void 0;\n        let lastWrapperSet = void 0;\n        const assignLastGunAtomNode = (getter, atom) => {\n            if (lastAtomPath == null) {\n                lastAtomPath = Jotai_queryAtomPath(new Jotai_AtomReference$1(0, atom));\n            }\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"assignLastGunAtomNode atom=%P() lastAtomPath=%P()\", [atom, lastAtomPath]))]));\n            }\n            const username = getter(Atoms_username);\n            const matchValue = [username, lastAtomPath];\n            let pattern_matching_result, atomPath_2, username_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    atomPath_2 = value_22(matchValue[1]);\n                    username_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    const matchValue_1 = getter(Selectors_gunAtomNode([username_1, atomPath_2]));\n                    if (matchValue_1 != null) {\n                        const gunAtomNode = matchValue_1;\n                        lastUsername = username_1;\n                        lastGunAtomNode = [toText(interpolate(\"atom=%P() atomPath=%P() username=%P()\", [atom, atomPath_2, username_1])), gunAtomNode];\n                    }\n                    else {\n                        lastUsername = (void 0);\n                        lastGunAtomNode = (void 0);\n                    }\n                    break;\n                }\n                case 1: {\n                    lastUsername = (void 0);\n                    lastGunAtomNode = (void 0);\n                    break;\n                }\n            }\n            return username;\n        };\n        const internalAtom = Jotai_jotaiUtils.atomFamily((_username) => Jotai_jotai.atom(defaultValue), (a, b) => compare(a, b));\n        const gunNodePath = getGunNodePath(atomPath_1, keyIdentifier);\n        addCount(toText(interpolate(\"%P() constructor\", [gunNodePath])));\n        const baseInfo = () => toText(interpolate(\"gunNodePath=%P()\\n                atomPath=%P()\\n                keyIdentifier=%P()\\n                lastValue=%P()\\n                lastUsername=%P()\\n                lastGunAtomNode=%P()\\n                lastAtomPath=%P()\\n                lastUserAtomId=%P()\\n                \", [gunNodePath, atomPath_1, keyIdentifier, lastValue, lastUsername, lastGunAtomNode, lastAtomPath, lastUserAtomId]));\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily constructor\\n                %P()\", [baseInfo()]))]));\n        }\n        let lastSubscription = void 0;\n        const subscribe = (setAtom_1) => {\n            let copyOfStruct_1;\n            lastWrapperSet = setAtom_1;\n            if (lastGunAtomNode == null) {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()]\\n                                %P()\\n                             skipping subscribe, no gun atom node.\", [baseInfo()]))]));\n                }\n            }\n            else {\n                const key_1 = lastGunAtomNode[0];\n                const gunAtomNode_3 = lastGunAtomNode[1];\n                addCount(toText(interpolate(\"%P() subscribe\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.on()] atomPath=%P() %P()\", [atomPath_1, key_1]))]));\n                }\n                batchSubscribe({\n                    Fn: (tupledArg) => {\n                        const data = tupledArg[1];\n                        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(data, null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user = gunAtomNode_3.user();\n                            const matchValue_3 = map_1((x) => x, ofNullable((user._).sea));\n                            let pattern_matching_result_1, keys_1;\n                            if (matchValue_3 != null) {\n                                if (value_22(matchValue_3) != null) {\n                                    pattern_matching_result_1 = 0;\n                                    keys_1 = value_22(matchValue_3);\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                            switch (pattern_matching_result_1) {\n                                case 0: {\n                                    return (Gun.SEA).verify(data, keys_1.pub).then(((_arg1) => ((Gun.SEA).decrypt(_arg1, keys_1).then(((_arg2) => {\n                                        const decoded = Auto_unsafeFromString_Z5CB6BD(_arg2, void 0, void 0, {\n                                            ResolveType: () => option_type(option_type(Minute$reflection())),\n                                        });\n                                        return Promise.resolve(decoded);\n                                    })))));\n                                }\n                                case 1: {\n                                    return Promise.resolve((() => {\n                                        throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user.is]))));\n                                    })());\n                                }\n                            }\n                        }).catch(((_arg3) => {\n                            const ex = _arg3;\n                            console.error(some(\"[exception5]\"), ex);\n                            return Promise.resolve((() => {\n                                throw ex;\n                            })());\n                        })))))).then(((_arg1_1) => {\n                            let copyOfStruct, lastValueTicks, lastValue_1;\n                            const newValue = _arg1_1;\n                            lastGunValue = newValue;\n                            let pattern_matching_result_2, lastValue_2, lastValueTicks_1;\n                            if (lastValue != null) {\n                                if ((lastValueTicks = lastValue[0], (lastValue_1 = lastValue[1], ((compare_1(lastValueTicks, tupledArg[0]) > 0) ? true : compare(newValue, lastValue_1)) ? true : (equals(lastValue_1, null) ? equals(newValue, null) : false)))) {\n                                    pattern_matching_result_2 = 0;\n                                    lastValue_2 = lastValue[1];\n                                    lastValueTicks_1 = lastValue[0];\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    addCount(toText(interpolate(\"%P() on() skip\", [gunNodePath])));\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"gun.on() value. skipping.\\n                                                    jsTypeof-newValue=%P()\\n                                                    newValue=%P()\\n                                                    lastValue=%P()\\n                                                    %P()\\n                                 \", [typeof newValue, newValue, lastValue_2, baseInfo()]))]));\n                                    }\n                                    return Promise.resolve();\n                                }\n                                case 1: {\n                                    addCount(toText(interpolate(\"%P() on() assign\", [gunNodePath])));\n                                    const _lastValue = (lastValue != null) ? lastValue[1] : null;\n                                    if (JS_isDebug()) {\n                                        toConsole(interpolate(\"[log] %P()\", [((((copyOfStruct = _lastValue, toString(copyOfStruct))) === toString(newValue)) ? console.error(some(toText(interpolate(\"should have skipped assign\\n                                        _lastValue=%P()\\n                                        typeof lastValue=%P()\\n                                        newValue=%P()\\n                                        typeof newValue=%P()\\n                                        %P()\\n                                        \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))) : (void 0), toText(interpolate(\"gun.on() value. triggering.\\n                            _lastValue=%P()\\n                            typeof lastValue=%P()\\n                            newValue=%P()\\n                            typeof newValue=%P()\\n                            %P()\\n                            \", [_lastValue, typeof _lastValue, newValue, typeof newValue, baseInfo()])))]));\n                                    }\n                                    setAtom_1(newValue);\n                                    return Promise.resolve();\n                                }\n                            }\n                        })))).catch(((_arg2_1) => {\n                            console.error(some(\"[exception1]\"), _arg2_1);\n                            return Promise.resolve();\n                        })))));\n                    },\n                    GunAtomNode: gunAtomNode_3,\n                });\n                lastSubscription = ((copyOfStruct_1 = now(), getTicks(copyOfStruct_1)));\n            }\n        };\n        const debounceGunPut = JS_debounce((newValue_1) => {\n            const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #1\", []))]));\n                }\n                return PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (lastGunAtomNode == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.debounceGunPut promise]\\n                                        skipping gun put. no gun atom node.\\n                                        %P()\\n                                        \", [baseInfo()]))]));\n                        }\n                        return Promise.resolve();\n                    }\n                    else {\n                        const key_2 = lastGunAtomNode[0];\n                        const gunAtomNode_4 = lastGunAtomNode[1];\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #2 before encode %P()\", [key_2]))]));\n                        }\n                        return ((JS_ofNonEmptyObj(newValue_1) == null) ? (Promise.resolve(null)) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const user_1 = gunAtomNode_4.user();\n                            const keys_2 = (user_1._).sea;\n                            if (keys_2 == null) {\n                                return Promise.resolve((() => {\n                                    throw (new Error(toText(interpolate(\"No keys found for user %P()\", [user_1.is]))));\n                                })());\n                            }\n                            else {\n                                const keys_3 = keys_2;\n                                const json = Auto_toString_5A41365E(0, Auto_toString_5A41365E(0, newValue_1, void 0, void 0, void 0, {\n                                    ResolveType: () => option_type(Minute$reflection()),\n                                }), void 0, void 0, void 0, {\n                                    ResolveType: () => string_type,\n                                });\n                                return (Gun.SEA).encrypt(json, keys_3).then(((_arg1_2) => ((Gun.SEA).sign(_arg1_2, keys_3).then(((_arg2_2) => (Promise.resolve(_arg2_2)))))));\n                            }\n                        }).catch(((_arg3_1) => {\n                            const ex_2 = _arg3_1;\n                            console.error(some(\"[exception4]\"), ex_2);\n                            return Promise.resolve((() => {\n                                throw ex_2;\n                            })());\n                        })))))).then(((_arg3_2) => {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise. #3. before put %P()\", [key_2]))]));\n                            }\n                            if (((lastGunValue == null) ? true : (!compare(newValue_1, lastGunValue))) ? true : equals(newValue_1, null)) {\n                                return (new Promise(((res, _err) => {\n                                    void gunAtomNode_4.put(_arg3_2, (ack, node) => {\n                                        if (ack.err != null) {\n                                            res(void 0);\n                                        }\n                                        else {\n                                            res([ack, node]);\n                                        }\n                                    });\n                                }))).then(((_arg4) => {\n                                    let node_1;\n                                    const putResult = _arg4;\n                                    let pattern_matching_result_3, ack_2, node_2;\n                                    if (putResult != null) {\n                                        if ((node_1 = putResult[1], equals(putResult[0].ok, 1))) {\n                                            pattern_matching_result_3 = 0;\n                                            ack_2 = putResult[0];\n                                            node_2 = putResult[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_3 = 1;\n                                    }\n                                    switch (pattern_matching_result_3) {\n                                        case 0: {\n                                            window.lastAck = ack_2;\n                                            window.lastNode = node_2;\n                                            if (JS_isDebug()) {\n                                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise result.\\n                                                   ack=%P()\\n                                                   node=%A%P()\\n                                                   newValue=%P()\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [JSON.stringify(ack_2), node_2, newValue_1, key_2, baseInfo()]))]));\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                        case 1: {\n                                            window.lastPutResult = putResult;\n                                            console.error(some(toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise put error.\\n                                                 newValue=%P() putResult=%P()\\n                                                   %P()\\n                                                %P()\", [newValue_1, putResult, key_2, baseInfo()]))));\n                                            return Promise.resolve();\n                                        }\n                                    }\n                                }));\n                            }\n                            else {\n                                if (JS_isDebug()) {\n                                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set() debounceGunPut promise.\\n                                                   put skipped\\n                                                   newValue[%P()]==lastGunValue[]\\n                                                   %P()\\n                                                   %P()\\n                                                   \", [newValue_1, key_2, baseInfo()]))]));\n                                }\n                                return Promise.resolve();\n                            }\n                        }));\n                    }\n                }).catch(((_arg5) => {\n                    console.error(some(\"[exception2]\"), _arg5);\n                    return Promise.resolve();\n                }));\n            }));\n            pr.then();\n        }, 1000);\n        const wrapper_2 = () => {\n            const atomPath_3 = atomPath_1;\n            return Jotai_registerAtom(atomPath_3, keyIdentifier, Jotai_jotai.atom((getter_5) => {\n                let copyOfStruct_2;\n                addCount(atomPath_3);\n                const getter_3 = getter_5;\n                const userAtom = internalAtom(assignLastGunAtomNode(getter_3, wrapper_1.Value));\n                const result = getter_3(userAtom);\n                addCount(toText(interpolate(\"%P() get\", [gunNodePath])));\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.get()\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                result=%P()\\n                                %P()\\n                                \", [wrapper_1.Value, userAtom, result, baseInfo()]))]));\n                }\n                const userAtomId = userAtom.toString();\n                if (!equals(userAtomId, lastUserAtomId)) {\n                    lastUserAtomId = userAtomId;\n                    if (lastWrapperSet == null) {\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"skipping subscribe\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                    }\n                    else {\n                        const lastWrapperSet_1 = lastWrapperSet;\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"subscribing\\n                                wrapper=%P()\\n                                userAtom=%P()\\n                                %P() \", [wrapper_1.Value, userAtom, baseInfo()]))]));\n                        }\n                        subscribe(lastWrapperSet_1);\n                    }\n                }\n                lastValue = [(copyOfStruct_2 = now(), getTicks(copyOfStruct_2)), result];\n                return result;\n            }, (getter_6, setter_2, value_12) => {\n                addCount(toText(interpolate(\"%P() set\", [atomPath_3])));\n                const newValueFn = value_12;\n                const userAtom_1 = internalAtom(assignLastGunAtomNode(getter_6, wrapper_1.Value));\n                setter_2(userAtom_1, (oldValue) => {\n                    let copyOfStruct_3;\n                    const newValue_2 = ((typeof newValueFn) === \"function\") ? newValueFn(oldValue) : newValueFn;\n                    if ((true) ? true : ((lastValue == null) ? compare(defaultValue, newValue_2) : false)) {\n                        addCount(toText(interpolate(\"%P() set\", [gunNodePath])));\n                        if (JS_isDebug()) {\n                            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                        }\n                        debounceGunPut(newValue_2);\n                    }\n                    lastValue = [(copyOfStruct_3 = now(), getTicks(copyOfStruct_3)), newValue_2];\n                    if (JS_isDebug()) {\n                        toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"atomFamily.wrapper.set()\\n                                                    ##### lastValue setted. returning #####\\n                                                    wrapper=%P()\\n                                                    userAtom=%P()\\n                                                    jsTypeof-newValue=%P()\\n                                                    oldValue=%P()\\n                                                    newValue=%P()\\n                                                    %P()\\n                                                    \", [wrapper_1.Value, userAtom_1, typeof newValue_2, oldValue, newValue_2, baseInfo()]))]));\n                    }\n                    return newValue_2;\n                });\n            }))[0];\n        };\n        const wrapper_1 = new Lazy(wrapper_2);\n        const wrapper = wrapper_1.Value;\n        wrapper.onMount = ((setAtom_2) => {\n            subscribe(setAtom_2);\n            return () => {\n                let pattern_matching_result_4;\n                if (lastSubscription != null) {\n                    if (DateTime_ticksDiff(lastSubscription) < 1000) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else {\n                        pattern_matching_result_4 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 1;\n                }\n                switch (pattern_matching_result_4) {\n                    case 0: {\n                        break;\n                    }\n                    case 1: {\n                        if (lastGunAtomNode == null) {\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[gunEffect.off()]\\n                                %P()\\n                                skipping unsubscribe, no gun atom node.\", [baseInfo()]))]));\n                            }\n                        }\n                        else {\n                            const key = lastGunAtomNode[0];\n                            const gunAtomNode_2 = lastGunAtomNode[1];\n                            addCount(toText(interpolate(\"%P() unsubscribe\", [gunNodePath])));\n                            if (JS_isDebug()) {\n                                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"[atomFamily.unsubscribe()]\\n                                %P()\\n                                %P()\\n                                \", [key, baseInfo()]))]));\n                            }\n                            void gunAtomNode_2.off();\n                            lastSubscription = (void 0);\n                        }\n                        break;\n                    }\n                }\n            };\n        });\n        return wrapper;\n    }, (a_5, b_6) => compare(a_5, b_6));\n})();\n\nexport function Atoms_Cell_cellIdentifier(taskId, dateId) {\n    let _arg6;\n    return ofArray([taskId.fields[0], (_arg6 = dateId.fields[0], toText(interpolate(\"%d%P()-%02d%P()-%02d%P()\", [_arg6.Year.fields[0], _arg6.Month, _arg6.Day.fields[0]])))]);\n}\n\nexport const Selectors_dateSequence = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"dateSequence\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_5) => {\n        let position_2, matchValue, dateStart, _arg8, dateEnd, matchValue_1, _arg8_1, x, date_1, copyOfStruct, _arg5;\n        addCount(atomPath_1);\n        const getter = getter_5;\n        const position = getter(Atoms_position);\n        if (position != null) {\n            const position_1 = position;\n            return getDateSequence(getter(Atoms_daysBefore), getter(Atoms_daysAfter), singleton(((position_2 = position_1, new DateId(0, ((matchValue = [getter(Atoms_dayStart), position_2, new DateId(0, position_2.Date)], (((dateStart = ((_arg8 = (new FlukeDateTime(matchValue[2].fields[0], matchValue[0])), create(_arg8.Date.Year.fields[0], _arg8.Date.Month, _arg8.Date.Day.fields[0], _arg8.Time.Hour.fields[0], _arg8.Time.Minute.fields[0], 0))), (dateEnd = addDays(dateStart, 1), (matchValue_1 = ((_arg8_1 = matchValue[1], create(_arg8_1.Date.Year.fields[0], _arg8_1.Date.Month, _arg8_1.Date.Day.fields[0], _arg8_1.Time.Hour.fields[0], _arg8_1.Time.Minute.fields[0], 0))), ((x = matchValue_1, (compare_3(x, dateStart) >= 0) ? (compare_3(x, dateEnd) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare_3(dateStart, matchValue_1) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))))))).tag === 1) ? true : false)) ? position_2.Date : ((date_1 = ((copyOfStruct = ((_arg5 = position_2.Date, create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0))), addDays(copyOfStruct, -1))), new FlukeDate(new Year(0, year_9(date_1)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_9(date_1))), new Day(0, day_9(date_1)))))))).fields[0]));\n        }\n        else {\n            return empty();\n        }\n    }, (getter_6, setter, value_1) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n})();\n\nexport const Selectors_taskIdMap = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"taskIdMap\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_4) => {\n        addCount(atomPath_1);\n        const getter = getter_4;\n        const databaseIdArray = toArray(getter(Atoms_databaseIdSet));\n        return ofArray_1(mapIndexed((i, taskIdSet) => [databaseIdArray[i], taskIdSet], getter(waitForAll(map_2(Atoms_Database_taskIdSet, databaseIdArray)))));\n    }, (getter_5, setter, value) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n})();\n\nexport const Selectors_deviceInfo = (() => {\n    const atomPath = toText(interpolate(\"%P()\", [\"deviceInfo\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter) => {\n        addCount(atomPath_1);\n        return JS_deviceInfo;\n    }, (getter_1, setter, value) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n})();\n\nfunction database$0040431() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Database\", \"database\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        let getFn_1;\n        const databaseId = param;\n        getFn_1 = ((getter) => (new Database(databaseId, getter(Atoms_Database_name(databaseId)), getter(Atoms_Database_owner(databaseId)), getter(Atoms_Database_sharedWith(databaseId)), getter(Atoms_Database_position(databaseId)))));\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_5) => {\n            addCount(atomPath_2);\n            return getFn_1(getter_5);\n        }, (getter_6, setter, value) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n}\n\nconst database$0040431$002D1 = new Lazy(database$0040431);\n\nfunction isReadWrite$0040444() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Database\", \"isReadWrite\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_3) => {\n            addCount(atomPath_2);\n            return ((getter) => {\n                let username_1, database, database_1, username_2;\n                const username = getter(Atoms_username);\n                return equals((username == null) ? (void 0) : ((username_1 = username, (database = getter(database$0040431$002D1.Value(param)), ((!equals(username_1, templatesUser.Username)) ? equals(database.Owner, templatesUser.Username) : false) ? (void 0) : ((database_1 = database, (username_2 = username_1, equals(database_1.Owner, username_2) ? (new Access(0)) : ((database_1.SharedWith.tag === 1) ? tryHead(sortWith((x, y) => {\n                    const matchValue = [x, y];\n                    let pattern_matching_result;\n                    if (matchValue[0].tag === 0) {\n                        if (matchValue[1].tag === 0) {\n                            pattern_matching_result = 0;\n                        }\n                        else {\n                            pattern_matching_result = 1;\n                        }\n                    }\n                    else if (matchValue[1].tag === 0) {\n                        pattern_matching_result = 1;\n                    }\n                    else {\n                        pattern_matching_result = 2;\n                    }\n                    switch (pattern_matching_result) {\n                        case 0: {\n                            return 2;\n                        }\n                        case 1: {\n                            return 1;\n                        }\n                        case 2: {\n                            return 0;\n                        }\n                    }\n                }, choose((tupledArg) => {\n                    if (!equals(tupledArg[0], username_2)) {\n                        return void 0;\n                    }\n                    else {\n                        return tupledArg[1];\n                    }\n                }, database_1.SharedWith.fields[0]))) : (new Access(0))))))))), new Access(0));\n            })(getter_3);\n        }, (getter_4, setter, value) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n}\n\nconst isReadWrite$0040444$002D1 = new Lazy(isReadWrite$0040444);\n\nexport const Selectors_Database_database = database$0040431$002D1.Value;\n\nexport const Selectors_Database_isReadWrite = isReadWrite$0040444$002D1.Value;\n\nexport const Selectors_Attachment_attachment = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Attachment\", \"attachment\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        let getFn_1;\n        const attachmentId = param;\n        getFn_1 = ((getter) => {\n            const matchValue = [getter(Atoms_Attachment_timestamp(attachmentId)), getter(Atoms_Attachment_attachment(attachmentId))];\n            let pattern_matching_result, attachment_1, timestamp_1;\n            if (matchValue[0] != null) {\n                if (matchValue[1] != null) {\n                    pattern_matching_result = 0;\n                    attachment_1 = matchValue[1];\n                    timestamp_1 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    return [timestamp_1, attachment_1];\n                }\n                case 1: {\n                    return void 0;\n                }\n            }\n        });\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_3) => {\n            addCount(atomPath_2);\n            return getFn_1(getter_3);\n        }, (getter_4, setter, value) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n})();\n\nfunction attachments$0040481() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Information\", \"attachments\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_4) => {\n            addCount(atomPath_2);\n            return ((getter) => choose((x_1) => x_1, ofArray(getter(waitForAll(map_2(Selectors_Attachment_attachment, toArray(defaultArg(tryFind(param, getter(Atoms_informationAttachmentMap)), empty_1({\n                Compare: (x, y) => compare_2(x, y),\n            })))))))))(getter_4);\n        }, (getter_5, setter, value_1) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n}\n\nconst attachments$0040481$002D1 = new Lazy(attachments$0040481);\n\nfunction informationState$0040496() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Information\", \"informationState\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        let getFn_1;\n        const information = param;\n        getFn_1 = ((getter) => (new InformationState(information, getter(attachments$0040481$002D1.Value(information)), empty())));\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_2) => {\n            addCount(atomPath_2);\n            return getFn_1(getter_2);\n        }, (getter_3, setter, value) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n}\n\nconst informationState$0040496$002D1 = new Lazy(informationState$0040496);\n\nexport const Selectors_Information_attachments = attachments$0040481$002D1.Value;\n\nexport const Selectors_Information_informationState = informationState$0040496$002D1.Value;\n\nfunction task$0040509() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"task\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        let getFn_1;\n        const taskId = param;\n        getFn_1 = ((getter) => {\n            const Name = getter(Atoms_Task_name(taskId));\n            const Information = getter(Atoms_Task_information(taskId));\n            const PendingAfter = getter(Atoms_Task_pendingAfter(taskId));\n            const MissedAfter = getter(Atoms_Task_missedAfter(taskId));\n            const Scheduling = getter(Atoms_Task_scheduling(taskId));\n            const Priority = getter(Atoms_Task_priority(taskId));\n            return new Task(taskId, Name, Information, getter(Atoms_Task_duration(taskId)), PendingAfter, MissedAfter, Scheduling, Priority);\n        });\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_8) => {\n            addCount(atomPath_2);\n            return getFn_1(getter_8);\n        }, (getter_9, setter, value) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n}\n\nconst task$0040509$002D1 = new Lazy(task$0040509);\n\nfunction taskState$0040525() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"taskState\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        let getFn_1;\n        const taskId = param;\n        getFn_1 = ((getter) => {\n            let dayStart;\n            const task = getter(task$0040509$002D1.Value(taskId));\n            const dateSequence = getter(Selectors_dateSequence);\n            const statusMap = getter(Atoms_Task_statusMap(taskId));\n            const sessions = getter(Atoms_Task_sessions(taskId));\n            const attachmentIdSet = getter(Atoms_Task_attachmentIdSet(taskId));\n            const cellAttachmentMap = getter(Atoms_Task_cellAttachmentMap(taskId));\n            return new TaskState(task, sessions, sortByDescending((arg) => {\n                const _arg8 = arg[0];\n                return create(_arg8.Date.Year.fields[0], _arg8.Date.Month, _arg8.Date.Day.fields[0], _arg8.Time.Hour.fields[0], _arg8.Time.Minute.fields[0], 0);\n            }, choose((x) => x, ofArray(getter(waitForAll(map_2(Selectors_Attachment_attachment, toArray(attachmentIdSet)))))), {\n                Compare: (x_1, y) => compare_3(x_1, y),\n            }), empty(), filter((_arg2, cellState_1) => {\n                if (cellState_1.Status.tag === 5) {\n                    return true;\n                }\n                else if (!isEmpty(cellState_1.Sessions)) {\n                    return true;\n                }\n                else if (!isEmpty(cellState_1.Attachments)) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }, fold((m, k, v$0027) => {\n                let matchValue_3, newValue, oldValue, Sessions;\n                return add(k, (matchValue_3 = tryFind(k, m), (matchValue_3 == null) ? v$0027 : ((newValue = v$0027, (oldValue = matchValue_3, (Sessions = append(oldValue.Sessions, newValue.Sessions), new CellState(newValue.Status, append(oldValue.Attachments, newValue.Attachments), Sessions)))))), m);\n            }, (dayStart = getter(Atoms_dayStart), ofSeq(map_3((dateId) => {\n                let attachmentIdArray, timestampList, attachmentArray;\n                const cellSessions = (!isEmpty(dateSequence)) ? ((compare_2(head(dateSequence), dateId.fields[0]) <= 0) ? filter_1((_arg1) => {\n                    let dateStart, _arg8_1, dateEnd, matchValue_1, _arg8_2, x_2;\n                    const matchValue = [dayStart, _arg1.fields[0], dateId];\n                    if (((dateStart = ((_arg8_1 = (new FlukeDateTime(matchValue[2].fields[0], matchValue[0])), create(_arg8_1.Date.Year.fields[0], _arg8_1.Date.Month, _arg8_1.Date.Day.fields[0], _arg8_1.Time.Hour.fields[0], _arg8_1.Time.Minute.fields[0], 0))), (dateEnd = addDays(dateStart, 1), (matchValue_1 = ((_arg8_2 = matchValue[1], create(_arg8_2.Date.Year.fields[0], _arg8_2.Date.Month, _arg8_2.Date.Day.fields[0], _arg8_2.Time.Hour.fields[0], _arg8_2.Time.Minute.fields[0], 0))), ((x_2 = matchValue_1, (compare_3(x_2, dateStart) >= 0) ? (compare_3(x_2, dateEnd) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare_3(dateStart, matchValue_1) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))))))).tag === 1) {\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }, sessions) : empty()) : empty();\n                return [dateId, new CellState(new CellStatus(0), (!isEmpty(dateSequence)) ? ((compare_2(head(dateSequence), dateId.fields[0]) <= 0) ? ((attachmentIdArray = toArray(defaultArg(tryFind(dateId, cellAttachmentMap), empty_1({\n                    Compare: (x_3, y_1) => compare_2(x_3, y_1),\n                }))), (timestampList = ofArray(getter(waitForAll(map_2(Atoms_Attachment_timestamp, attachmentIdArray)))), (attachmentArray = getter(waitForAll(map_2(Atoms_Attachment_attachment, attachmentIdArray))), sortByDescending((arg_1) => {\n                    const _arg8_3 = arg_1[0];\n                    return create(_arg8_3.Date.Year.fields[0], _arg8_3.Date.Month, _arg8_3.Date.Day.fields[0], _arg8_3.Time.Hour.fields[0], _arg8_3.Time.Minute.fields[0], 0);\n                }, choose((x_4) => x_4, mapIndexed_1((i, timestamp) => {\n                    const matchValue_2 = [timestamp, attachmentArray[i]];\n                    let pattern_matching_result, attachment, timestamp_1;\n                    if (matchValue_2[0] != null) {\n                        if (matchValue_2[1] != null) {\n                            pattern_matching_result = 0;\n                            attachment = matchValue_2[1];\n                            timestamp_1 = matchValue_2[0];\n                        }\n                        else {\n                            pattern_matching_result = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                    switch (pattern_matching_result) {\n                        case 0: {\n                            return [timestamp_1, attachment];\n                        }\n                        case 1: {\n                            return void 0;\n                        }\n                    }\n                }, timestampList)), {\n                    Compare: (x_5, y_2) => compare_3(x_5, y_2),\n                }))))) : empty()) : empty(), cellSessions)];\n            }, map_3((arg0) => (new DateId(0, arg0)), dateSequence)))), map_4((_arg1_2, manualCellStatus) => {\n                let tupledArg;\n                return new CellState((tupledArg = manualCellStatus, new CellStatus(5, tupledArg[0], tupledArg[1])), empty(), empty());\n            }, statusMap))));\n        });\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_14) => {\n            addCount(atomPath_2);\n            return getFn_1(getter_14);\n        }, (getter_15, setter, value_1) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n}\n\nconst taskState$0040525$002D1 = new Lazy(taskState$0040525);\n\nfunction statusMap$0040630() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"statusMap\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_5) => {\n            addCount(atomPath_2);\n            return ((getter) => {\n                let position_1;\n                const position = getter(Atoms_position);\n                const taskState = getter(taskState$0040525$002D1.Value(param));\n                const dateSequence = getter(Selectors_dateSequence);\n                const dayStart = getter(Atoms_dayStart);\n                let pattern_matching_result, position_2;\n                if (position != null) {\n                    if ((position_1 = position, !isEmpty(dateSequence))) {\n                        pattern_matching_result = 0;\n                        position_2 = position;\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        return renderTaskStatusMap(dayStart, position_2, dateSequence, taskState);\n                    }\n                    case 1: {\n                        return empty_2();\n                    }\n                }\n            })(getter_5);\n        }, (getter_6, setter, value) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n}\n\nconst statusMap$0040630$002D1 = new Lazy(statusMap$0040630);\n\nfunction databaseId$0040645() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"databaseId\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        let selector_1;\n        const taskId = param;\n        selector_1 = ((taskIdMap) => {\n            const databaseIdList = toList(map_5((_arg1_1) => _arg1_1[0], filter((_arg1, taskIdSet) => FSharpSet__Contains(taskIdSet, taskId), taskIdMap)));\n            if (!isEmpty(databaseIdList)) {\n                if (isEmpty(tail(databaseIdList))) {\n                    return head(databaseIdList);\n                }\n                else {\n                    throw (new Error(toText(interpolate(\"Error: task %P() exists in two databases (%P())\", [taskId, databaseIdList]))));\n                }\n            }\n            else {\n                return (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Id;\n            }\n        });\n        return Jotai_jotaiUtils.selectAtom(Selectors_taskIdMap, (value) => {\n            addCount(toText(interpolate(\"%P() :selectAtom\", [atomPath])));\n            return selector_1(value);\n        }, uncurry(2, void 0));\n    }, (a, b) => compare(a, b));\n}\n\nconst databaseId$0040645$002D1 = new Lazy(databaseId$0040645);\n\nfunction isReadWrite$0040662$002D2() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"isReadWrite\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_3) => {\n            addCount(atomPath_2);\n            return ((getter) => getter(Selectors_Database_isReadWrite(getter(databaseId$0040645$002D1.Value(param)))))(getter_3);\n        }, (getter_4, setter, value) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n}\n\nconst isReadWrite$0040662$002D3 = new Lazy(isReadWrite$0040662$002D2);\n\nfunction lastSession$0040670() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"lastSession\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_3) => {\n            addCount(atomPath_2);\n            return ((getter) => {\n                const dateSequence = getter(Selectors_dateSequence);\n                const taskState = getter(taskState$0040525$002D1.Value(param));\n                return tryPick((date) => tryHead(sortByDescending((_arg1) => {\n                    const _arg8 = _arg1.fields[0];\n                    return create(_arg8.Date.Year.fields[0], _arg8.Date.Month, _arg8.Date.Day.fields[0], _arg8.Time.Hour.fields[0], _arg8.Time.Minute.fields[0], 0);\n                }, defaultArg(map_1((cellState) => cellState.Sessions, tryFind(new DateId(0, date), taskState.CellStateMap)), empty()), {\n                    Compare: (x, y) => compare_3(x, y),\n                })), reverse(dateSequence));\n            })(getter_3);\n        }, (getter_4, setter, value_1) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n}\n\nconst lastSession$0040670$002D1 = new Lazy(lastSession$0040670);\n\nfunction activeSession$0040689() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"activeSession\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_5) => {\n            addCount(atomPath_2);\n            return ((getter) => {\n                let copyOfStruct, _arg8, _arg8_1;\n                const matchValue = [getter(Atoms_position), getter(lastSession$0040670$002D1.Value(param))];\n                let pattern_matching_result, lastSession_1, position_1;\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        pattern_matching_result = 0;\n                        lastSession_1 = matchValue[1];\n                        position_1 = matchValue[0];\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        const sessionDuration = getter(Atoms_sessionDuration);\n                        const sessionBreakDuration = getter(Atoms_sessionBreakDuration);\n                        const currentDuration = (~(~((copyOfStruct = op_Subtraction((_arg8 = position_1, create(_arg8.Date.Year.fields[0], _arg8.Date.Month, _arg8.Date.Day.fields[0], _arg8.Time.Hour.fields[0], _arg8.Time.Minute.fields[0], 0)), (_arg8_1 = lastSession_1.fields[0], create(_arg8_1.Date.Year.fields[0], _arg8_1.Date.Month, _arg8_1.Date.Day.fields[0], _arg8_1.Time.Hour.fields[0], _arg8_1.Time.Minute.fields[0], 0))), totalMinutes(copyOfStruct))))) | 0;\n                        if (currentDuration < (sessionDuration.fields[0] + sessionBreakDuration.fields[0])) {\n                            return currentDuration;\n                        }\n                        else {\n                            return void 0;\n                        }\n                    }\n                    case 1: {\n                        return void 0;\n                    }\n                }\n            })(getter_5);\n        }, (getter_6, setter, value_1) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n}\n\nconst activeSession$0040689$002D1 = new Lazy(activeSession$0040689);\n\nfunction showUser$0040719() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"showUser\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_2) => {\n            addCount(atomPath_2);\n            return ((getter) => (length(distinct(choose_1((_arg1_1) => {\n                if (_arg1_1.Status.tag === 5) {\n                    return _arg1_1.Status.fields[0];\n                }\n                else {\n                    return void 0;\n                }\n            }, map_5((_arg1) => _arg1[1], getter(taskState$0040525$002D1.Value(param)).CellStateMap)), {\n                Equals: (x, y) => equals(x, y),\n                GetHashCode: (x) => safeHash(x),\n            })) > 1))(getter_2);\n        }, (getter_3, setter, value) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n}\n\nconst showUser$0040719$002D1 = new Lazy(showUser$0040719);\n\nfunction hasSelection$0040738() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Task\", \"hasSelection\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_3) => {\n            addCount(atomPath_2);\n            return ((getter) => {\n                const dateSequence = getter(Selectors_dateSequence);\n                const selectionSet = getter(Atoms_Task_selectionSet(param));\n                return exists((arg) => FSharpSet__Contains(selectionSet, new DateId(0, arg)), dateSequence);\n            })(getter_3);\n        }, (getter_4, setter, value) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n}\n\nconst hasSelection$0040738$002D1 = new Lazy(hasSelection$0040738);\n\nexport const Selectors_Task_task = task$0040509$002D1.Value;\n\nexport const Selectors_Task_taskState = taskState$0040525$002D1.Value;\n\nexport const Selectors_Task_statusMap = statusMap$0040630$002D1.Value;\n\nexport const Selectors_Task_databaseId = databaseId$0040645$002D1.Value;\n\nexport const Selectors_Task_isReadWrite = isReadWrite$0040662$002D3.Value;\n\nexport const Selectors_Task_lastSession = lastSession$0040670$002D1.Value;\n\nexport const Selectors_Task_activeSession = activeSession$0040689$002D1.Value;\n\nexport const Selectors_Task_showUser = showUser$0040719$002D1.Value;\n\nexport const Selectors_Task_hasSelection = hasSelection$0040738$002D1.Value;\n\nexport const Selectors_Cell_sessionStatus = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Cell\", \"sessionStatus\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        let getFn_1;\n        const tupledArg = param;\n        const taskId = tupledArg[0];\n        const dateId = tupledArg[1];\n        getFn_1 = ((getter) => (getter(Atoms_hideSchedulingOverlay) ? defaultArg(map_1((tupledArg_1) => (new CellStatus(5, tupledArg_1[0], tupledArg_1[1])), tryFind(dateId, getter(Atoms_Task_statusMap(taskId)))), new CellStatus(0)) : defaultArg(tryFind(dateId, getter(Selectors_Task_statusMap(taskId))), new CellStatus(0))));\n        let setFn_1;\n        const tupledArg_2 = param;\n        const taskId_1 = tupledArg_2[0];\n        const dateId_1 = tupledArg_2[1];\n        setFn_1 = ((getter_4) => ((setter) => ((newValue) => {\n            const statusMap = getter_4(Atoms_Task_statusMap(taskId_1));\n            const atom_4 = Atoms_Task_statusMap(taskId_1);\n            const value_3 = (newValue.tag === 5) ? add(dateId_1, [newValue.fields[0], newValue.fields[1]], statusMap) : remove(dateId_1, statusMap);\n            setter(atom_4, value_3);\n        })));\n        return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_6) => {\n            addCount(atomPath_1);\n            return getFn_1(getter_6);\n        }, (getter_7, setter_2, value_6) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            setFn_1(getter_7)(setter_2)(value_6);\n        }))[0];\n    }, (a, b) => compare(a, b));\n})();\n\nexport const Selectors_Cell_selected = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Cell\", \"selected\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        let getFn_1;\n        const tupledArg = param;\n        getFn_1 = ((getter) => FSharpSet__Contains(getter(Atoms_Task_selectionSet(tupledArg[0])), tupledArg[1]));\n        let setFn_1;\n        const tupledArg_1 = param;\n        setFn_1 = ((_arg1) => ((setter) => ((newValue) => {\n            const atom_1 = Atoms_Task_selectionSet(tupledArg_1[0]);\n            const value_2 = (newValue ? ((value) => ((set$) => add_1(value, set$))) : ((value_1) => ((set$_1) => remove_1(value_1, set$_1))))(tupledArg_1[1]);\n            setter(atom_1, value_2);\n        })));\n        return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_2) => {\n            addCount(atomPath_1);\n            return getFn_1(getter_2);\n        }, (getter_3, setter_2, value_5) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            setFn_1(getter_3)(setter_2)(value_5);\n        }))[0];\n    }, (a, b) => compare(a, b));\n})();\n\nexport const Selectors_Cell_sessions = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Cell\", \"sessions\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        let getFn_1;\n        const tupledArg = param;\n        getFn_1 = ((getter) => defaultArg(map_1((x) => x.Sessions, tryFind(tupledArg[1], getter(Selectors_Task_taskState(tupledArg[0])).CellStateMap)), empty()));\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_2) => {\n            addCount(atomPath_2);\n            return getFn_1(getter_2);\n        }, (getter_3, setter, value_1) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n})();\n\nexport const Selectors_Cell_attachments = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Cell\", \"attachments\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        let getFn_1;\n        const tupledArg = param;\n        getFn_1 = ((getter) => defaultArg(map_1((x) => x.Attachments, tryFind(tupledArg[1], getter(Selectors_Task_taskState(tupledArg[0])).CellStateMap)), empty()));\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_2) => {\n            addCount(atomPath_2);\n            return getFn_1(getter_2);\n        }, (getter_3, setter, value_1) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n})();\n\nfunction taskIdSet$0040816() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Session\", \"taskIdSet\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_2) => {\n        addCount(atomPath_1);\n        const taskIdMap = getter_2(Selectors_taskIdMap);\n        return FSharpMap__get_IsEmpty(taskIdMap) ? empty_1({\n            Compare: (x, y) => compare_2(x, y),\n        }) : reduce((set1, set2) => union(set1, set2), map_5((_arg1) => _arg1[1], taskIdMap));\n    }, (getter_3, setter, value) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n}\n\nconst taskIdSet$0040816$002D1 = new Lazy(taskIdSet$0040816);\n\nfunction taskStateList$0040828() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Session\", \"taskStateList\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_4) => {\n        addCount(atomPath_1);\n        const getter = getter_4;\n        return ofArray(getter(waitForAll(map_2(Selectors_Task_taskState, toArray(getter(taskIdSet$0040816$002D1.Value))))));\n    }, (getter_5, setter, value) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n}\n\nconst taskStateList$0040828$002D1 = new Lazy(taskStateList$0040828);\n\nfunction informationSet$0040842() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Session\", \"informationSet\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_4) => {\n        addCount(atomPath_1);\n        const getter = getter_4;\n        return ofSeq_1(getter(waitForAll(map_2(Atoms_Task_information, toArray(getter(taskIdSet$0040816$002D1.Value))))).filter((information) => {\n            let informationName, activePatternResult37001, str, activePatternResult37002, str_4;\n            return !isNullOrWhiteSpace((informationName = Information_Name_Z233FE4C2(information), (informationName.tag === 0) ? informationName.fields[0].fields[0] : ((informationName.tag === 2) ? informationName.fields[0].fields[0] : ((activePatternResult37001 = ((str = informationName.fields[0].fields[0], (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))), (activePatternResult37001.tag === 0) ? ((activePatternResult37002 = ((str_4 = informationName.fields[1].fields[0], (str_4 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_4) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_4))))), (activePatternResult37002.tag === 0) ? toText(interpolate(\"%P()/%P()\", [activePatternResult37001.fields[0], activePatternResult37002.fields[0]])) : \"\")) : \"\")))));\n        }), {\n            Compare: (x, y) => compare_2(x, y),\n        });\n    }, (getter_5, setter, value_1) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n}\n\nconst informationSet$0040842$002D1 = new Lazy(informationSet$0040842);\n\nfunction selectedTaskIdSet$0040863() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Session\", \"selectedTaskIdSet\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_5) => {\n        addCount(atomPath_1);\n        const getter = getter_5;\n        const selectedDatabaseIdSet = getter(Atoms_selectedDatabaseIdSet);\n        const taskIdArray = toArray(getter(taskIdSet$0040816$002D1.Value));\n        return ofSeq_1(map_2((tupledArg_1) => taskIdArray[tupledArg_1[0]], indexed(getter(waitForAll(map_2(Selectors_Task_databaseId, taskIdArray)))).filter((tupledArg) => contains(tupledArg[1], selectedDatabaseIdSet))), {\n            Compare: (x, y) => compare_2(x, y),\n        });\n    }, (getter_6, setter, value) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n}\n\nconst selectedTaskIdSet$0040863$002D1 = new Lazy(selectedTaskIdSet$0040863);\n\nfunction informationStateList$0040881() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Session\", \"informationStateList\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_4) => {\n        addCount(atomPath_1);\n        const getter = getter_4;\n        return ofArray(getter(waitForAll(map_2(Selectors_Information_informationState, toArray(getter(informationSet$0040842$002D1.Value))))));\n    }, (getter_5, setter, value) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n}\n\nconst informationStateList$0040881$002D1 = new Lazy(informationStateList$0040881);\n\nfunction activeSessions$0040895() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Session\", \"activeSessions\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_6) => {\n        addCount(atomPath_1);\n        const getter = getter_6;\n        const selectedTaskIdArray = toArray(getter(selectedTaskIdSet$0040863$002D1.Value));\n        const durationArray = getter(waitForAll(map_2(Selectors_Task_activeSession, selectedTaskIdArray)));\n        const nameArray = getter(waitForAll(map_2(Atoms_Task_name, selectedTaskIdArray)));\n        return choose((x_2) => x_2, mapIndexed_1((i, option) => map_1((duration) => (new ActiveSession(0, nameArray[i].fields[0], new Minute(0, duration))), option), sortBy((x) => x, ofArray(durationArray), {\n            Compare: (x_1, y) => compare_2(x_1, y),\n        })));\n    }, (getter_7, setter, value) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n}\n\nconst activeSessions$0040895$002D1 = new Lazy(activeSessions$0040895);\n\nfunction filteredTaskIdSet$0040925() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Session\", \"filteredTaskIdSet\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_10) => {\n        addCount(atomPath_1);\n        const getter = getter_10;\n        const filterTasksByView = getter(Atoms_filterTasksByView);\n        const searchText = getter(Atoms_searchText);\n        const view = getter(Atoms_view);\n        const dateSequence = getter(Selectors_dateSequence);\n        const selectedTaskList = ofArray(getter(waitForAll(map_2(Selectors_Task_task, toArray(getter(selectedTaskIdSet$0040863$002D1.Value))))));\n        const selectedTaskListSearch = (searchText === \"\") ? selectedTaskList : filter_1((task) => {\n            let informationName, activePatternResult37001, str, activePatternResult37002, str_4;\n            const check = (text) => (text.indexOf(searchText) >= 0);\n            if (check(task.Name.fields[0])) {\n                return true;\n            }\n            else {\n                return check((informationName = Information_Name_Z233FE4C2(task.Information), (informationName.tag === 0) ? informationName.fields[0].fields[0] : ((informationName.tag === 2) ? informationName.fields[0].fields[0] : ((activePatternResult37001 = ((str = informationName.fields[0].fields[0], (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))), (activePatternResult37001.tag === 0) ? ((activePatternResult37002 = ((str_4 = informationName.fields[1].fields[0], (str_4 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_4) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_4))))), (activePatternResult37002.tag === 0) ? toText(interpolate(\"%P()/%P()\", [activePatternResult37001.fields[0], activePatternResult37002.fields[0]])) : \"\")) : \"\")))));\n            }\n        }, selectedTaskList);\n        const filteredTaskList = filterTasksByView ? map_3((taskState) => taskState.Task, toList(filterTaskStateSeq(view, dateSequence, getter(waitForAll(toArray_1(map_3((task_1) => Selectors_Task_taskState(task_1.Id), selectedTaskListSearch))))))) : selectedTaskListSearch;\n        if (JS_isDebug()) {\n            toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"filteredTaskList.Length=%P() taskListSearch.Length=%P()\", [length_1(filteredTaskList), length_1(selectedTaskListSearch)]))]));\n        }\n        return ofSeq_1(map_3((task_2) => task_2.Id, filteredTaskList), {\n            Compare: (x, y) => compare_2(x, y),\n        });\n    }, (getter_11, setter, value) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n}\n\nconst filteredTaskIdSet$0040925$002D1 = new Lazy(filteredTaskIdSet$0040925);\n\nfunction sortedTaskIdList$0040983() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Session\", \"sortedTaskIdList\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_10) => {\n        addCount(atomPath_1);\n        const getter = getter_10;\n        const position = getter(Atoms_position);\n        if (position != null) {\n            const position_1 = position;\n            const filteredTaskIdSet = getter(filteredTaskIdSet$0040925$002D1.Value);\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"sortedTaskIdList. filteredTaskIdSet.Count=%P()\", [FSharpSet__get_Count(filteredTaskIdSet)]))]));\n            }\n            const filteredTaskIdArray = toArray(filteredTaskIdSet);\n            const statusMapArray = getter(waitForAll(map_2(Selectors_Task_statusMap, filteredTaskIdArray)));\n            const lanes = ofArray(zip(getter(waitForAll(map_2(Selectors_Task_taskState, filteredTaskIdArray))), statusMapArray));\n            const view = getter(Atoms_view);\n            const result = sortLanes({\n                DayStart: getter(Atoms_dayStart),\n                InformationStateList: getter(informationStateList$0040881$002D1.Value),\n                Lanes: lanes,\n                Position: position_1,\n                View: view,\n            });\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"sortedTaskIdList. result.Length=%P()\", [length_1(result)]))]));\n            }\n            return map_3((tupledArg) => tupledArg[0].Task.Id, result);\n        }\n        else {\n            return empty();\n        }\n    }, (getter_11, setter, value) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n}\n\nconst sortedTaskIdList$0040983$002D1 = new Lazy(sortedTaskIdList$0040983);\n\nfunction tasksByInformationKind$00401035() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Session\", \"tasksByInformationKind\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_4) => {\n        addCount(atomPath_1);\n        const getter = getter_4;\n        const sortedTaskIdList = getter(sortedTaskIdList$0040983$002D1.Value);\n        const informationArray = getter(waitForAll(map_2(Atoms_Task_information, toArray_1(sortedTaskIdList))));\n        return map_3((tupledArg_3) => [tupledArg_3[0], map_3((tupledArg_4) => [tupledArg_4[0], map_3((tuple_2) => tuple_2[1], tupledArg_4[1])], tupledArg_3[1])], sortBy((arg_3) => defaultArg(map_1((arg_1) => Information_toTag(arg_1[0]), tryHead(arg_3[1])), -1), List_groupBy((tupledArg_2) => Information_toString(tupledArg_2[0]), sortBy((tupledArg_1) => Information_Name_Z233FE4C2(tupledArg_1[0]), List_groupBy((tupledArg) => informationArray[tupledArg[0]], indexed_1(sortedTaskIdList), {\n            Equals: (x, y) => equals(x, y),\n            GetHashCode: (x) => safeHash(x),\n        }), {\n            Compare: (x_1, y_1) => compare_2(x_1, y_1),\n        }), {\n            Equals: (x_2, y_2) => (x_2 === y_2),\n            GetHashCode: (x_2) => stringHash(x_2),\n        }), {\n            Compare: (x_4, y_3) => comparePrimitives(x_4, y_3),\n        }));\n    }, (getter_5, setter, value_1) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n}\n\nconst tasksByInformationKind$00401035$002D1 = new Lazy(tasksByInformationKind$00401035);\n\nfunction selectionSetMap$00401062() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Session\", \"selectionSetMap\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_4) => {\n        addCount(atomPath_1);\n        const getter = getter_4;\n        const sortedTaskIdList = getter(sortedTaskIdList$0040983$002D1.Value);\n        return ofArray_1(mapIndexed((i, dates) => [item(i, sortedTaskIdList), dates], getter(waitForAll(map_2(Atoms_Task_selectionSet, toArray_1(sortedTaskIdList))))));\n    }, (getter_5, setter, value) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n}\n\nconst selectionSetMap$00401062$002D1 = new Lazy(selectionSetMap$00401062);\n\nfunction cellSelectionMap$00401077() {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"Session\", \"cellSelectionMap\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_3) => {\n        addCount(atomPath_1);\n        const getter = getter_3;\n        const selectionSetMap = getter(selectionSetMap$00401062$002D1.Value);\n        const dateSequence = getter(Selectors_dateSequence);\n        return ofSeq(filter_2((tupledArg) => (!isEmpty_1(tupledArg[1])), map_5((taskId) => [taskId, ofSeq_1(map_3((tuple_1) => tuple_1[0], filter_1((tuple) => tuple[1], map_3((date) => [date, FSharpSet__Contains(FSharpMap__get_Item(selectionSetMap, taskId), new DateId(0, date))], dateSequence))), {\n            Compare: (x, y) => compare_2(x, y),\n        })], map_5((_arg1) => _arg1[0], selectionSetMap))));\n    }, (getter_4, setter, value_1) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n}\n\nconst cellSelectionMap$00401077$002D1 = new Lazy(cellSelectionMap$00401077);\n\nexport const Selectors_Session_taskIdSet = taskIdSet$0040816$002D1.Value;\n\nexport const Selectors_Session_taskStateList = taskStateList$0040828$002D1.Value;\n\nexport const Selectors_Session_informationSet = informationSet$0040842$002D1.Value;\n\nexport const Selectors_Session_selectedTaskIdSet = selectedTaskIdSet$0040863$002D1.Value;\n\nexport const Selectors_Session_informationStateList = informationStateList$0040881$002D1.Value;\n\nexport const Selectors_Session_activeSessions = activeSessions$0040895$002D1.Value;\n\nexport const Selectors_Session_filteredTaskIdSet = filteredTaskIdSet$0040925$002D1.Value;\n\nexport const Selectors_Session_sortedTaskIdList = sortedTaskIdList$0040983$002D1.Value;\n\nexport const Selectors_Session_tasksByInformationKind = tasksByInformationKind$00401035$002D1.Value;\n\nexport const Selectors_Session_selectionSetMap = selectionSetMap$00401062$002D1.Value;\n\nexport const Selectors_Session_cellSelectionMap = cellSelectionMap$00401077$002D1.Value;\n\nexport const Selectors_FlukeDate_isToday = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"FlukeDate\", \"isToday\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_3) => {\n            addCount(atomPath_2);\n            return ((getter) => {\n                let dateStart, _arg8, dateEnd, matchValue_1, _arg8_1, x;\n                const position = getter(Atoms_position);\n                if (position != null) {\n                    const position_1 = position;\n                    const matchValue = [getter(Atoms_dayStart), position_1, new DateId(0, param)];\n                    if (((dateStart = ((_arg8 = (new FlukeDateTime(matchValue[2].fields[0], matchValue[0])), create(_arg8.Date.Year.fields[0], _arg8.Date.Month, _arg8.Date.Day.fields[0], _arg8.Time.Hour.fields[0], _arg8.Time.Minute.fields[0], 0))), (dateEnd = addDays(dateStart, 1), (matchValue_1 = ((_arg8_1 = matchValue[1], create(_arg8_1.Date.Year.fields[0], _arg8_1.Date.Month, _arg8_1.Date.Day.fields[0], _arg8_1.Time.Hour.fields[0], _arg8_1.Time.Minute.fields[0], 0))), ((x = matchValue_1, (compare_3(x, dateStart) >= 0) ? (compare_3(x, dateEnd) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare_3(dateStart, matchValue_1) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))))))).tag === 1) {\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n                else {\n                    return false;\n                }\n            })(getter_3);\n        }, (getter_4, setter, value) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n})();\n\nexport const Selectors_FlukeDate_hasCellSelection = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"FlukeDate\", \"hasCellSelection\"]));\n    return Jotai_jotaiUtils.atomFamily((param) => {\n        const atomPath_1 = atomPath;\n        let getFn_1;\n        const date = param;\n        getFn_1 = ((getter) => {\n            let _arg6;\n            if (JS_isDebug()) {\n                toConsole(interpolate(\"[log] %P()\", [toText(interpolate(\"hasCellSelection date=%P()\", [(_arg6 = date, toText(interpolate(\"%d%P()-%02d%P()-%02d%P()\", [_arg6.Year.fields[0], _arg6.Month, _arg6.Day.fields[0]])))]))]));\n            }\n            window.lastDate = date;\n            return exists_1((set$) => contains(date, set$), map_5((_arg1) => _arg1[1], getter(Selectors_Session_cellSelectionMap)));\n        });\n        const atomPath_2 = atomPath_1;\n        return Jotai_registerAtom(atomPath_2, void 0, Jotai_jotai.atom((getter_2) => {\n            addCount(atomPath_2);\n            return getFn_1(getter_2);\n        }, (getter_3, setter, value) => {\n            addCount(toText(interpolate(\"%P() set\", [atomPath_2])));\n            addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n            throw (new Error(\"readonly selector\"));\n        }))[0];\n    }, (a, b) => compare(a, b));\n})();\n\nexport const Selectors_BulletJournalView_weekCellsMap = (() => {\n    const atomPath = toText(interpolate(\"%P()/%P()\", [\"BulletJournalView\", \"weekCellsMap\"]));\n    const atomPath_1 = atomPath;\n    return Jotai_registerAtom(atomPath_1, void 0, Jotai_jotai.atom((getter_7) => {\n        addCount(atomPath_1);\n        const getter = getter_7;\n        const position = getter(Atoms_position);\n        const sortedTaskIdList = getter(Selectors_Session_sortedTaskIdList);\n        const taskStateArray = getter(waitForAll(toArray_1(map_3(Selectors_Task_taskState, sortedTaskIdList))));\n        const taskStateMap = ofSeq(mapIndexed_1((i, taskId) => [taskId, taskStateArray[i]], sortedTaskIdList));\n        if (position != null) {\n            const position_1 = position;\n            const dayStart = getter(Atoms_dayStart);\n            const weekStart = getter(Atoms_weekStart);\n            return map_3((weekOffset) => {\n                let _arg5_1, position_2, matchValue, dateStart, _arg8, dateEnd, matchValue_1, _arg8_1, x, date_3, copyOfStruct, _arg5;\n                let dateIdSequence;\n                const getWeekStart = (date_mut) => {\n                    getWeekStart:\n                    while (true) {\n                        const date = date_mut;\n                        if (dayOfWeek(date) === weekStart) {\n                            return date;\n                        }\n                        else {\n                            date_mut = addDays_1(date, -1);\n                            continue getWeekStart;\n                        }\n                        break;\n                    }\n                };\n                const startDate = getWeekStart(addDays_1((_arg5_1 = ((position_2 = position_1, new DateId(0, ((matchValue = [dayStart, position_2, new DateId(0, position_2.Date)], (((dateStart = ((_arg8 = (new FlukeDateTime(matchValue[2].fields[0], matchValue[0])), create(_arg8.Date.Year.fields[0], _arg8.Date.Month, _arg8.Date.Day.fields[0], _arg8.Time.Hour.fields[0], _arg8.Time.Minute.fields[0], 0))), (dateEnd = addDays(dateStart, 1), (matchValue_1 = ((_arg8_1 = matchValue[1], create(_arg8_1.Date.Year.fields[0], _arg8_1.Date.Month, _arg8_1.Date.Day.fields[0], _arg8_1.Time.Hour.fields[0], _arg8_1.Time.Minute.fields[0], 0))), ((x = matchValue_1, (compare_3(x, dateStart) >= 0) ? (compare_3(x, dateEnd) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare_3(dateStart, matchValue_1) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))))))).tag === 1) ? true : false)) ? position_2.Date : ((date_3 = ((copyOfStruct = ((_arg5 = position_2.Date, create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0))), addDays(copyOfStruct, -1))), new FlukeDate(new Year(0, year_9(date_3)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_9(date_3))), new Day(0, day_9(date_3)))))))).fields[0], create(_arg5_1.Year.fields[0], _arg5_1.Month, _arg5_1.Day.fields[0], 12, 0, 0)), 7 * weekOffset));\n                dateIdSequence = map_3((position_10) => {\n                    let matchValue_3, dateStart_1, _arg8_2, dateEnd_1, matchValue_4, _arg8_3, x_1, date_11, copyOfStruct_1, _arg5_2;\n                    const position_11 = position_10;\n                    return new DateId(0, ((matchValue_3 = [dayStart, position_11, new DateId(0, position_11.Date)], (((dateStart_1 = ((_arg8_2 = (new FlukeDateTime(matchValue_3[2].fields[0], matchValue_3[0])), create(_arg8_2.Date.Year.fields[0], _arg8_2.Date.Month, _arg8_2.Date.Day.fields[0], _arg8_2.Time.Hour.fields[0], _arg8_2.Time.Minute.fields[0], 0))), (dateEnd_1 = addDays(dateStart_1, 1), (matchValue_4 = ((_arg8_3 = matchValue_3[1], create(_arg8_3.Date.Year.fields[0], _arg8_3.Date.Month, _arg8_3.Date.Day.fields[0], _arg8_3.Time.Hour.fields[0], _arg8_3.Time.Minute.fields[0], 0))), ((x_1 = matchValue_4, (compare_3(x_1, dateStart_1) >= 0) ? (compare_3(x_1, dateEnd_1) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare_3(dateStart_1, matchValue_4) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))))))).tag === 1) ? true : false)) ? position_11.Date : ((date_11 = ((copyOfStruct_1 = ((_arg5_2 = position_11.Date, create(_arg5_2.Year.fields[0], _arg5_2.Month, _arg5_2.Day.fields[0], 12, 0, 0))), addDays(copyOfStruct_1, -1))), new FlukeDate(new Year(0, year_9(date_11)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_9(date_11))), new Day(0, day_9(date_11))))));\n                }, map_3((arg00_6) => {\n                    let date_7, date_8;\n                    const date_6 = arg00_6;\n                    return new FlukeDateTime((date_7 = date_6, new FlukeDate(new Year(0, year_9(date_7)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_9(date_7))), new Day(0, day_9(date_7)))), (date_8 = date_6, new FlukeTime(new Hour(0, hour_6(date_8)), new Minute(0, minute_6(date_8)))));\n                }, map_3((arg00_5) => addDays_1(startDate, arg00_5), toList(rangeDouble(0, 1, 6)))));\n                return ofSeq(map_3((tupledArg) => {\n                    const cellsMetadata = tupledArg[1];\n                    const dateId_5 = tupledArg[0];\n                    const taskSessions = collect((x_5) => x_5.Sessions, cellsMetadata);\n                    const sortedTasksMap = ofSeq(map_3((tupledArg_1) => [tupledArg_1[1][0].Task.Id, tupledArg_1[0]], indexed_1(sortLanesByTimeOfDay(dayStart, new FlukeDateTime(dateId_5.fields[0], dayStart), map_3((cellMetadata) => {\n                        let inputRecord;\n                        return [(inputRecord = (new TaskState(new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_1(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_1(0, new ManualScheduling(1)), void 0), empty(), empty(), empty(), empty_2())), new TaskState(FSharpMap__get_Item(taskStateMap, cellMetadata.TaskId).Task, taskSessions, inputRecord.Attachments, inputRecord.SortList, inputRecord.CellStateMap)), ofSeq([[dateId_5, cellMetadata.Status]])];\n                    }, cellsMetadata)))));\n                    return [dateId_5, sortBy((cell) => defaultArg(tryFind(cell.TaskId, sortedTasksMap), -1), cellsMetadata, {\n                        Compare: (x_6, y_1) => comparePrimitives(x_6, y_1),\n                    })];\n                }, List_groupBy((x_3) => x_3.DateId, collect((taskId_1) => map_3((dateId_2) => {\n                    let dateStart_2, _arg8_4, dateEnd_2, matchValue_7, _arg8_5, x_2;\n                    let isToday;\n                    const matchValue_6 = [dayStart, position_1, dateId_2];\n                    isToday = ((((dateStart_2 = ((_arg8_4 = (new FlukeDateTime(matchValue_6[2].fields[0], matchValue_6[0])), create(_arg8_4.Date.Year.fields[0], _arg8_4.Date.Month, _arg8_4.Date.Day.fields[0], _arg8_4.Time.Hour.fields[0], _arg8_4.Time.Minute.fields[0], 0))), (dateEnd_2 = addDays(dateStart_2, 1), (matchValue_7 = ((_arg8_5 = matchValue_6[1], create(_arg8_5.Date.Year.fields[0], _arg8_5.Date.Month, _arg8_5.Date.Day.fields[0], _arg8_5.Time.Hour.fields[0], _arg8_5.Time.Minute.fields[0], 0))), ((x_2 = matchValue_7, (compare_3(x_2, dateStart_2) >= 0) ? (compare_3(x_2, dateEnd_2) < 0) : false)) ? (new FSharpChoice$2(1, void 0)) : ((compare_3(dateStart_2, matchValue_7) < 0) ? (new FSharpChoice$2(0, void 0)) : (new FSharpChoice$2(2, void 0))))))).tag === 1) ? true : false);\n                    let cellState;\n                    const value = new CellState(new CellStatus(0), empty(), empty());\n                    cellState = defaultArg(bind((taskState) => tryFind(dateId_2, taskState.CellStateMap), tryFind(taskId_1, taskStateMap)), value);\n                    return {\n                        Attachments: cellState.Attachments,\n                        DateId: dateId_2,\n                        IsToday: isToday,\n                        Sessions: cellState.Sessions,\n                        Status: cellState.Status,\n                        TaskId: taskId_1,\n                    };\n                }, dateIdSequence), sortedTaskIdList), {\n                    Equals: (x_4, y) => equals(x_4, y),\n                    GetHashCode: (x_4) => safeHash(x_4),\n                })));\n            }, toList(rangeDouble(-1, 1, 1)));\n        }\n        else {\n            return empty();\n        }\n    }, (getter_8, setter, value_2) => {\n        addCount(toText(interpolate(\"%P() set\", [atomPath_1])));\n        addCount(toText(interpolate(\"%P() set\", [atomPath])));\n        throw (new Error(\"readonly selector\"));\n    }))[0];\n})();\n\n","import { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_fontSize, Atoms_systemUiFont, Atoms_darkMode } from \"../State.fs.js\";\nimport { useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport * as react from \"@chakra-ui/react\";\n\nfunction theme(input) {\n    const alphaColors = (dark) => {\n        const n = dark ? \"0\" : \"255\";\n        const $00350 = toText(interpolate(\"rgba(%P(), %P(), %P(), 0.04)\", [n, n, n]));\n        return {\n            [\"100\"]: toText(interpolate(\"rgba(%P(), %P(), %P(), 0.06)\", [n, n, n])),\n            [\"200\"]: toText(interpolate(\"rgba(%P(), %P(), %P(), 0.08)\", [n, n, n])),\n            [\"300\"]: toText(interpolate(\"rgba(%P(), %P(), %P(), 0.16)\", [n, n, n])),\n            [\"400\"]: toText(interpolate(\"rgba(%P(), %P(), %P(), 0.24)\", [n, n, n])),\n            [\"50\"]: $00350,\n            [\"500\"]: toText(interpolate(\"rgba(%P(), %P(), %P(), 0.36)\", [n, n, n])),\n            [\"600\"]: toText(interpolate(\"rgba(%P(), %P(), %P(), 0.48)\", [n, n, n])),\n            [\"700\"]: toText(interpolate(\"rgba(%P(), %P(), %P(), 0.64)\", [n, n, n])),\n            [\"800\"]: toText(interpolate(\"rgba(%P(), %P(), %P(), 0.80)\", [n, n, n])),\n            [\"900\"]: toText(interpolate(\"rgba(%P(), %P(), %P(), 0.92)\", [n, n, n])),\n        };\n    };\n    let colors;\n    const gray = {\n        [\"10\"]: input.DarkMode ? \"#1a1a1a\" : \"#e5e5e5\",\n        [\"13\"]: input.DarkMode ? \"#212121\" : \"#dedede\",\n        [\"16\"]: input.DarkMode ? \"#292929\" : \"#d6d6d6\",\n        [\"45\"]: input.DarkMode ? \"#727272\" : \"#8d8d8d\",\n        [\"77\"]: input.DarkMode ? \"#b0bec5\" : \"#4f413a\",\n        [\"87\"]: input.DarkMode ? \"#dddddd\" : \"#222222\",\n    };\n    const whiteAlpha = alphaColors(!input.DarkMode);\n    colors = {\n        _green: input.DarkMode ? \"#a4ff8d\" : \"#269309\",\n        _orange: input.DarkMode ? \"#ffb836\" : \"#AF750B\",\n        blackAlpha: alphaColors(input.DarkMode),\n        gray: gray,\n        heliotrope: \"#b586ff\",\n        whiteAlpha: whiteAlpha,\n    };\n    const focusShadow = toText(interpolate(\"0 0 0 1px %P() !important\", [colors.heliotrope]));\n    const fonts = {\n        main: input.SystemUiFont ? \"system-ui\" : \"\\u0027Roboto Condensed\\u0027, sans-serif\",\n    };\n    const fontWeights = {\n        black: 900,\n        bold: 700,\n        extrabold: 800,\n        hairline: 100,\n        light: 300,\n        medium: 500,\n        normal: 400,\n        semibold: 600,\n        thin: 200,\n    };\n    return {\n        breakpoints: {\n            lg: \"1000px\",\n            md: \"750px\",\n            sm: \"350px\",\n            xl: \"1900px\",\n        },\n        colors: colors,\n        config: {\n            initialColorMode: input.DarkMode ? \"dark\" : \"light\",\n            useSystemColorMode: false,\n        },\n        fontSizes: {\n            main: toText(interpolate(\"%P()px\", [input.FontSize])),\n        },\n        fontWeights: fontWeights,\n        fonts: fonts,\n        lineHeights: {\n            main: toText(interpolate(\"%P()px\", [input.FontSize])),\n        },\n        styles: {\n            global: (_props) => ({\n                [\"#root\"]: {\n                    display: \"flex\",\n                },\n                [\"*, *::before, *::after\"]: {\n                    wordWrap: \"break-word\",\n                },\n                [\"*::-webkit-calendar-picker-indicator\"]: {\n                    filter: input.DarkMode ? \"invert(1)\" : \"\",\n                },\n                [\"*::-webkit-scrollbar\"]: {\n                    width: \"9px\",\n                },\n                [\"*::-webkit-scrollbar-corner\"]: {\n                    display: \"none\",\n                },\n                [\"*::-webkit-scrollbar-thumb\"]: {\n                    background: \"gray.45\",\n                    backgroundClip: \"content-box\",\n                    borderLeft: \"3px solid transparent\",\n                    opacity: 0.8,\n                },\n                [\"*::-webkit-scrollbar-thumb:hover\"]: {\n                    background: \"gray.77\",\n                    backgroundClip: \"content-box\",\n                    borderLeft: \"3px solid transparent\",\n                },\n                [\"*::-webkit-scrollbar-track\"]: {\n                    display: \"none\",\n                },\n                [\"*::-webkit-scrollbar:horizontal\"]: {\n                    height: \"6px\",\n                },\n                [\".markdown-container h1\"]: {\n                    borderBottomColor: \"#777\",\n                    borderBottomWidth: \"1px\",\n                    marginBottom: \"3px\",\n                },\n                [\".markdown-container li\"]: {\n                    listStyleType: \"square\",\n                },\n                [\".markdown-container ul, .tooltip-popup p\"]: {\n                    padding: \"5px 0\",\n                },\n                [\".rct-collapse-btn\"]: {\n                    marginLeft: \"5px\",\n                    marginRight: \"15px\",\n                    padding: \"0\",\n                },\n                [\".rct-collapse-btn:focus\"]: {\n                    boxShadow: focusShadow,\n                },\n                [\".rct-disabled .rct-checkbox svg\"]: {\n                    display: \"none\",\n                },\n                [\".rct-disabled .rct-node-icon\"]: {\n                    marginLeft: \"-20px\",\n                },\n                [\".rct-node label:hover, .rct-node label:active\"]: {\n                    background: \"none\",\n                },\n                [\".rct-node-leaf\"]: {\n                    marginBottom: \"-11px\",\n                },\n                [\".rct-node-parent:not(:first-of-type)\"]: {\n                    marginTop: \"7px\",\n                },\n                [\".rct-node:first-of-type\"]: {\n                    marginTop: \"2px\",\n                },\n                [\".rct-title\"]: {\n                    display: \"contents\",\n                },\n                [\".sketch-picker\"]: {\n                    backgroundColor: input.DarkMode ? \"#333 !important\" : \"#CCC !important\",\n                },\n                [\".sketch-picker input\"]: {\n                    color: input.DarkMode ? \"#333 !important\" : \"#CCC !important\",\n                },\n                [\".sketch-picker span\"]: {\n                    color: input.DarkMode ? \"#DDD !important\" : \"#222 !important\",\n                },\n                [\":root\"]: {\n                    [\"--chakra-shadows-outline\"]: focusShadow,\n                },\n                body: {\n                    backgroundColor: \"gray.13\",\n                    boxSizing: \"border-box\",\n                    color: \"gray.87\",\n                    fontFamily: \"main\",\n                    fontFeatureSettings: \"pnum\",\n                    fontSize: \"main\",\n                    fontVariantNumeric: \"proportional-nums\",\n                    fontWeight: \"light\",\n                    letterSpacing: 0,\n                    lineHeight: \"main\",\n                    margin: 0,\n                    overflow: \"hidden\",\n                    padding: 0,\n                    touchAction: \"pan-x pan-y\",\n                    userSelect: \"none\",\n                },\n                html: {\n                    fontSize: \"main\",\n                    overflow: \"hidden\",\n                },\n                [\"input::-ms-clear\"]: {\n                    filter: input.DarkMode ? \"invert(1)\" : \"\",\n                },\n                [\"input::-ms-reveal\"]: {\n                    filter: input.DarkMode ? \"invert(1)\" : \"\",\n                },\n            }),\n        },\n    };\n}\n\nexport function useTheme() {\n    const darkMode = Jotai_jotaiUtils.useAtomValue(Atoms_darkMode);\n    const systemUiFont = Jotai_jotaiUtils.useAtomValue(Atoms_systemUiFont);\n    const fontSize = Jotai_jotaiUtils.useAtomValue(Atoms_fontSize) | 0;\n    return useReact_useMemo_CF4EA67(() => react.extendTheme(Object.assign({}, theme({\n        DarkMode: darkMode,\n        FontSize: fontSize,\n        SystemUiFont: systemUiFont,\n    }))), [fontSize, systemUiFont, darkMode]);\n}\n\n","import { toString, Record } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { record_type, lambda_type, unit_type, bool_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { React_memo_62A0F746 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport * as react from \"react\";\nimport * as icons from \"@chakra-ui/icons\";\nimport { JS_window, JS_newObj } from \"./JS.fs.js\";\nimport * as react_1 from \"@chakra-ui/react\";\nimport { defaultArg, ofNullable, bind, filter, map } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { interpolate, toText, isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\n\nexport class Disclosure extends Record {\n    constructor(isOpen, onOpen, onClose) {\n        super();\n        this.isOpen = isOpen;\n        this.onOpen = onOpen;\n        this.onClose = onClose;\n    }\n}\n\nexport function Disclosure$reflection() {\n    return record_type(\"Fluke.UI.Frontend.Bindings.Chakra.Disclosure\", [], Disclosure, () => [[\"isOpen\", bool_type], [\"onOpen\", lambda_type(unit_type, unit_type)], [\"onClose\", lambda_type(unit_type, unit_type)]]);\n}\n\nexport const chakraMemo = React_memo_62A0F746((input_1) => react.createElement(input_1.Component, input_1.Props, ...input_1.Children));\n\nexport function Icons_externalLinkIcon() {\n    return (props) => ((children) => react.createElement(icons.ExternalLinkIcon, JS_newObj(props), ...children));\n}\n\nexport function accordion() {\n    return (props) => ((children) => react.createElement(react_1.Accordion, JS_newObj(props), ...children));\n}\n\nexport function accordionItem() {\n    return (props) => ((children) => react.createElement(react_1.AccordionItem, JS_newObj(props), ...children));\n}\n\nexport function accordionButton() {\n    return (props) => ((children) => react.createElement(react_1.AccordionButton, JS_newObj(props), ...children));\n}\n\nexport function accordionIcon() {\n    return (props) => ((children) => react.createElement(react_1.AccordionIcon, JS_newObj(props), ...children));\n}\n\nexport function accordionPanel() {\n    return (props) => ((children) => react.createElement(react_1.AccordionPanel, JS_newObj(props), ...children));\n}\n\nexport function box() {\n    return (props) => ((children) => react.createElement(react_1.Box, JS_newObj(props), ...children));\n}\n\nexport function button() {\n    return (props) => ((children) => react.createElement(react_1.Button, JS_newObj(props), ...children));\n}\n\nexport function center() {\n    return (props) => ((children) => react.createElement(react_1.Center, JS_newObj(props), ...children));\n}\n\nexport function checkbox() {\n    return (props) => ((children) => react.createElement(react_1.Checkbox, JS_newObj(props), ...children));\n}\n\nexport function checkboxGroup() {\n    return (props) => ((children) => react.createElement(react_1.CheckboxGroup, JS_newObj(props), ...children));\n}\n\nexport function circle() {\n    return (props) => ((children) => react.createElement(react_1.Circle, JS_newObj(props), ...children));\n}\n\nexport function darkMode() {\n    return (props) => ((children) => react.createElement(react_1.DarkMode, JS_newObj(props), ...children));\n}\n\nexport function flex() {\n    return (props) => ((children) => react.createElement(react_1.Flex, JS_newObj(props), ...children));\n}\n\nexport function grid() {\n    return (props) => ((children) => react.createElement(react_1.Grid, JS_newObj(props), ...children));\n}\n\nexport function hStack() {\n    return (props) => ((children) => react.createElement(react_1.HStack, JS_newObj(props), ...children));\n}\n\nexport function icon() {\n    return (props) => ((children) => react.createElement(react_1.Icon, JS_newObj(props), ...children));\n}\n\nexport function iconButton() {\n    return (props) => ((children) => react.createElement(react_1.IconButton, JS_newObj(props), ...children));\n}\n\nexport function input() {\n    return (props) => ((children) => react.createElement(react_1.Input, JS_newObj(props), ...children));\n}\n\nexport function inputGroup() {\n    return (props) => ((children) => react.createElement(react_1.InputGroup, JS_newObj(props), ...children));\n}\n\nexport function inputLeftElement() {\n    return (props) => ((children) => react.createElement(react_1.InputLeftElement, JS_newObj(props), ...children));\n}\n\nexport function lightMode() {\n    return (props) => ((children) => react.createElement(react_1.LightMode, JS_newObj(props), ...children));\n}\n\nexport function link() {\n    return (props) => ((children) => react.createElement(react_1.Link, JS_newObj(props), ...children));\n}\n\nexport function menu() {\n    return (props) => ((children) => react.createElement(react_1.Menu, JS_newObj(props), ...children));\n}\n\nexport function menuButton() {\n    return (props) => ((children) => react.createElement(react_1.MenuButton, JS_newObj(props), ...children));\n}\n\nexport function menuList() {\n    return (props) => ((children) => react.createElement(react_1.MenuList, JS_newObj(props), ...children));\n}\n\nexport function menuItem() {\n    return (props) => ((children) => react.createElement(react_1.MenuItem, JS_newObj(props), ...children));\n}\n\nexport function menuItemOption() {\n    return (props) => ((children) => react.createElement(react_1.MenuItemOption, JS_newObj(props), ...children));\n}\n\nexport function menuOptionGroup() {\n    return (props) => ((children) => react.createElement(react_1.MenuOptionGroup, JS_newObj(props), ...children));\n}\n\nexport function modal() {\n    return (props) => ((children) => react.createElement(react_1.Modal, JS_newObj(props), ...children));\n}\n\nexport function modalBody() {\n    return (props) => ((children) => react.createElement(react_1.ModalBody, JS_newObj(props), ...children));\n}\n\nexport function modalContent() {\n    return (props) => ((children) => react.createElement(react_1.ModalContent, JS_newObj(props), ...children));\n}\n\nexport function modalCloseButton() {\n    return (props) => ((children) => react.createElement(react_1.ModalCloseButton, JS_newObj(props), ...children));\n}\n\nexport function modalOverlay() {\n    return (props) => ((children) => react.createElement(react_1.ModalOverlay, JS_newObj(props), ...children));\n}\n\nexport function numberInput() {\n    return (props) => ((children) => react.createElement(react_1.NumberInput, JS_newObj(props), ...children));\n}\n\nexport function numberInputField() {\n    return (props) => ((children) => react.createElement(react_1.NumberInputField, JS_newObj(props), ...children));\n}\n\nexport function numberInputStepper() {\n    return (props) => ((children) => react.createElement(react_1.NumberInputStepper, JS_newObj(props), ...children));\n}\n\nexport function numberDecrementStepper() {\n    return (props) => ((children) => react.createElement(react_1.NumberDecrementStepper, JS_newObj(props), ...children));\n}\n\nexport function numberIncrementStepper() {\n    return (props) => ((children) => react.createElement(react_1.NumberIncrementStepper, JS_newObj(props), ...children));\n}\n\nexport function popover() {\n    return (props) => ((children) => react.createElement(react_1.Popover, JS_newObj(props), ...children));\n}\n\nexport function popoverArrow() {\n    return (props) => ((children) => react.createElement(react_1.PopoverArrow, JS_newObj(props), ...children));\n}\n\nexport function popoverBody() {\n    return (props) => ((children) => react.createElement(react_1.PopoverBody, JS_newObj(props), ...children));\n}\n\nexport function popoverCloseButton() {\n    return (props) => ((children) => react.createElement(react_1.PopoverCloseButton, JS_newObj(props), ...children));\n}\n\nexport function popoverContent() {\n    return (props) => ((children) => react.createElement(react_1.PopoverContent, JS_newObj(props), ...children));\n}\n\nexport function popoverTrigger() {\n    return (props) => ((children) => react.createElement(react_1.PopoverTrigger, JS_newObj(props), ...children));\n}\n\nexport function provider() {\n    return (props) => ((children) => react.createElement(react_1.ChakraProvider, JS_newObj(props), ...children));\n}\n\nexport function radio() {\n    return (props) => ((children) => react.createElement(react_1.Radio, JS_newObj(props), ...children));\n}\n\nexport function radioGroup() {\n    return (props) => ((children) => react.createElement(react_1.RadioGroup, JS_newObj(props), ...children));\n}\n\nexport function simpleGrid() {\n    return (props) => ((children) => react.createElement(react_1.SimpleGrid, JS_newObj(props), ...children));\n}\n\nexport function spacer() {\n    return (props) => ((children) => react.createElement(react_1.Spacer, JS_newObj(props), ...children));\n}\n\nexport function spinner() {\n    return (props) => ((children) => react.createElement(react_1.Spinner, JS_newObj(props), ...children));\n}\n\nexport function stack() {\n    return (props) => ((children) => react.createElement(react_1.Stack, JS_newObj(props), ...children));\n}\n\nexport function tabList() {\n    return (props) => ((children) => react.createElement(react_1.TabList, JS_newObj(props), ...children));\n}\n\nexport function tabPanel() {\n    return (props) => ((children) => react.createElement(react_1.TabPanel, JS_newObj(props), ...children));\n}\n\nexport function tabPanels() {\n    return (props) => ((children) => react.createElement(react_1.TabPanels, JS_newObj(props), ...children));\n}\n\nexport function tab() {\n    return (props) => ((children) => react.createElement(react_1.Tab, JS_newObj(props), ...children));\n}\n\nexport function tabs() {\n    return (props) => ((children) => react.createElement(react_1.Tabs, JS_newObj(props), ...children));\n}\n\nexport function textarea() {\n    return (props) => ((children) => react.createElement(react_1.Textarea, JS_newObj(props), ...children));\n}\n\nexport function tooltip() {\n    return (props) => ((children) => react.createElement(react_1.Tooltip, JS_newObj(props), ...children));\n}\n\nexport function useToast() {\n    const toast = react_1.useToast();\n    const toastFn = (props) => {\n        toast(JS_newObj((x) => {\n            x.title = \"Error\";\n            x.status = \"error\";\n            x.description = \"Error\";\n            x.duration = 4000;\n            x.isClosable = true;\n            props(x);\n        }));\n    };\n    const matchValue = JS_window((x_1) => x_1);\n    if (matchValue == null) {\n    }\n    else {\n        const window$ = matchValue;\n        window$.lastToast = toastFn;\n    }\n    return toastFn;\n}\n\nexport function mapIfSet(fn, value) {\n    return map(fn, filter((arg) => {\n        let str;\n        const _arg1 = toString(arg);\n        if (((str = _arg1, (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))).tag === 0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }, bind((value_3) => map((x_1) => x_1, ofNullable(value_3)), map((x) => x, ofNullable(value)))));\n}\n\nexport function transformShiftBy(x, y) {\n    return toText(interpolate(\"translate(%P()px, %P()px)\", [defaultArg(x, 0), defaultArg(y, 0)]));\n}\n\n","import { bind, map } from \"../fable-library.3.2.7/Option.js\";\n\nexport const Impl_allowsPassiveEvents = (() => {\n    let passive = false;\n    try {\n        if ((typeof window !== 'undefined') ? (typeof window.addEventListener === 'function') : false) {\n            window.addEventListener(\"testPassiveEventSupport\", (value) => {\n            }, {\n                passive: true,\n            });\n            window.removeEventListener(\"testPassiveEventSupport\", (value_1) => {\n            });\n        }\n    }\n    catch (matchValue) {\n    }\n    return passive;\n})();\n\nexport const Impl_defaultPassive = {\n    passive: true,\n};\n\nexport function Impl_adjustPassive(maybeOptions) {\n    return map((options) => {\n        if (options.passive ? (!Impl_allowsPassiveEvents) : false) {\n            return {\n                capture: options.capture,\n                once: options.once,\n                passive: false,\n            };\n        }\n        else {\n            return options;\n        }\n    }, maybeOptions);\n}\n\nexport function Impl_createRemoveOptions(maybeOptions) {\n    return bind((options) => {\n        if (options.capture) {\n            return {\n                capture: true,\n            };\n        }\n        else {\n            return void 0;\n        }\n    }, maybeOptions);\n}\n\n","import { FSharpRef } from \"./Types.js\";\nexport function tryParse(str, defValue) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            defValue.contents = v;\n            return true;\n        }\n    }\n    return false;\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(0);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n","import { split, trimEnd, isNullOrWhiteSpace, substring, join, endsWith } from \"../fable-library.3.2.7/String.js\";\nimport { ofArray, singleton, collect, head, empty, tail, isEmpty, reverse, map } from \"../fable-library.3.2.7/List.js\";\nimport { equalsWith } from \"../fable-library.3.2.7/Array.js\";\nimport { comparePrimitives } from \"../fable-library.3.2.7/Util.js\";\nimport { React_createDisposable_3A5B6456, useReact_useEffect_Z5ECA432F, useReact_useMemo_CF4EA67, useReact_useCallbackRef_7C4B0DD6, React_memo_62A0F746 } from \"../Feliz.1.47.0/React.fs.js\";\nimport { defaultArg } from \"../fable-library.3.2.7/Option.js\";\nimport { Impl_createRemoveOptions, Impl_adjustPassive } from \"../Feliz.UseListener.0.6.3/Listener.fs.js\";\nimport { tryParse } from \"../fable-library.3.2.7/Int32.js\";\nimport { FSharpRef } from \"../fable-library.3.2.7/Types.js\";\nimport { tryParse as tryParse_1, fromInt } from \"../fable-library.3.2.7/Long.js\";\nimport { tryParse as tryParse_2 } from \"../fable-library.3.2.7/Guid.js\";\nimport { tryParse as tryParse_3 } from \"../fable-library.3.2.7/Double.js\";\nimport { tryParse as tryParse_4 } from \"../fable-library.3.2.7/Decimal.js\";\nimport Decimal from \"../fable-library.3.2.7/Decimal.js\";\nimport { map as map_1, delay, toList } from \"../fable-library.3.2.7/Seq.js\";\n\nexport function RouterModule_String_$007CPrefix$007C(prefix, str) {\n    if (str.indexOf(prefix) === 0) {\n        return str;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RouterModule_String_$007CSuffix$007C(suffix, str) {\n    if (endsWith(str, suffix)) {\n        return str;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RouterModule_encodeQueryString(queryStringPairs) {\n    const _arg1 = join(\"\\u0026\", map((tupledArg) => join(\"=\", [encodeURIComponent(tupledArg[0]), encodeURIComponent(tupledArg[1])]), queryStringPairs));\n    if (_arg1 === \"\") {\n        return \"\";\n    }\n    else {\n        return \"?\" + _arg1;\n    }\n}\n\nexport function RouterModule_encodeQueryStringInts(queryStringIntPairs) {\n    const _arg1 = join(\"\\u0026\", map((tupledArg) => join(\"=\", [encodeURIComponent(tupledArg[0]), tupledArg[1]]), queryStringIntPairs));\n    if (_arg1 === \"\") {\n        return \"\";\n    }\n    else {\n        return \"?\" + _arg1;\n    }\n}\n\nfunction RouterModule_normalizeRoute(routeMode) {\n    if (routeMode === 1) {\n        return (_arg1) => {\n            let activePatternResult34372, path, activePatternResult34373, path_1, activePatternResult34374, path_2;\n            return (activePatternResult34372 = RouterModule_String_$007CPrefix$007C(\"/\", _arg1), (activePatternResult34372 != null) ? ((path = activePatternResult34372, \"#\" + path)) : ((activePatternResult34373 = RouterModule_String_$007CPrefix$007C(\"#/\", _arg1), (activePatternResult34373 != null) ? ((path_1 = activePatternResult34373, path_1)) : ((activePatternResult34374 = RouterModule_String_$007CPrefix$007C(\"#\", _arg1), (activePatternResult34374 != null) ? ((path_2 = activePatternResult34374, \"#/\" + substring(path_2, 1, path_2.length - 1))) : (\"#/\" + _arg1))))));\n        };\n    }\n    else {\n        return (_arg2) => {\n            let activePatternResult34377, path_4;\n            return (activePatternResult34377 = RouterModule_String_$007CPrefix$007C(\"/\", _arg2), (activePatternResult34377 != null) ? ((path_4 = activePatternResult34377, path_4)) : (\"/\" + _arg2));\n        };\n    }\n}\n\nexport function RouterModule_encodeParts(xs, routeMode) {\n    return RouterModule_normalizeRoute(routeMode)(join(\"/\", map((part) => {\n        if (((part.indexOf(\"?\") >= 0) ? true : (part.indexOf(\"#\") === 0)) ? true : (part.indexOf(\"/\") === 0)) {\n            return part;\n        }\n        else {\n            return encodeURIComponent(part);\n        }\n    }, xs)));\n}\n\nexport function RouterModule_trySeparateLast(xs) {\n    const matchValue = reverse(xs);\n    if (!isEmpty(matchValue)) {\n        if (isEmpty(tail(matchValue))) {\n            return [empty(), head(matchValue)];\n        }\n        else {\n            return [reverse(tail(matchValue)), head(matchValue)];\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RouterModule_nav(xs, mode, routeMode) {\n    if (mode === 1) {\n        history.pushState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\n    }\n    else {\n        history.replaceState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\n    }\n    const ev = document.createEvent(\"CustomEvent\");\n    ev.initEvent(\"CUSTOM_NAVIGATION_EVENT\", true, true);\n    void window.dispatchEvent(ev);\n}\n\nexport function RouterModule_urlSegments(path, mode) {\n    return collect((segment) => {\n        if (isNullOrWhiteSpace(segment)) {\n            return empty();\n        }\n        else {\n            const segment_1 = trimEnd(segment, \"#\");\n            if (segment_1 === \"?\") {\n                return empty();\n            }\n            else if (RouterModule_String_$007CPrefix$007C(\"?\", segment_1) != null) {\n                return singleton(segment_1);\n            }\n            else {\n                const matchValue = segment_1.split(\"?\");\n                if ((!equalsWith((x, y) => comparePrimitives(x, y), matchValue, null)) ? (matchValue.length === 1) : false) {\n                    const value = matchValue[0];\n                    return singleton(decodeURIComponent(value));\n                }\n                else if ((!equalsWith((x_1, y_1) => comparePrimitives(x_1, y_1), matchValue, null)) ? (matchValue.length === 2) : false) {\n                    if (matchValue[1] === \"\") {\n                        const value_1 = matchValue[0];\n                        return singleton(decodeURIComponent(value_1));\n                    }\n                    else {\n                        const value_2 = matchValue[0];\n                        const query = matchValue[1];\n                        return ofArray([decodeURIComponent(value_2), \"?\" + query]);\n                    }\n                }\n                else {\n                    return empty();\n                }\n            }\n        }\n    }, ofArray(split((RouterModule_String_$007CPrefix$007C(\"#\", path) != null) ? substring(path, 1, path.length - 1) : ((mode === 1) ? ((RouterModule_String_$007CSuffix$007C(\"#\", path) != null) ? \"\" : ((RouterModule_String_$007CSuffix$007C(\"#/\", path) != null) ? \"\" : path)) : path), [\"/\"], null, 0)));\n}\n\nexport function RouterModule_onUrlChange(routeMode, urlChanged, ev) {\n    return urlChanged(RouterModule_urlSegments((routeMode === 2) ? (window.location.pathname + window.location.search) : window.location.hash, routeMode));\n}\n\nexport const RouterModule_router = React_memo_62A0F746((input) => {\n    const onChange = useReact_useCallbackRef_7C4B0DD6((ev) => {\n        const urlChanged = defaultArg(input.onUrlChanged, (value) => {\n        });\n        RouterModule_onUrlChange(defaultArg(input.hashMode, 1), urlChanged, ev);\n    });\n    if (((window.navigator.userAgent).indexOf(\"Trident\") >= 0) ? true : ((window.navigator.userAgent).indexOf(\"MSIE\") >= 0)) {\n        const eventType = \"hashchange\";\n        const action_1 = (arg00) => {\n            onChange(arg00);\n        };\n        const options_1 = void 0;\n        const addOptions = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_1), [options_1]);\n        const removeOptions = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_1), [options_1]);\n        const fn = useReact_useMemo_CF4EA67(() => ((arg) => {\n            action_1(arg);\n        }), [action_1]);\n        useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n            if (addOptions == null) {\n                window.addEventListener(eventType, fn);\n            }\n            else {\n                window.addEventListener(eventType, fn, addOptions);\n            }\n            return React_createDisposable_3A5B6456(() => {\n                if (removeOptions == null) {\n                    window.removeEventListener(eventType, fn);\n                }\n                else {\n                    window.removeEventListener(eventType, fn, removeOptions);\n                }\n            });\n        }));\n    }\n    else {\n        const eventType_1 = \"popstate\";\n        const action_3 = onChange;\n        const options_5 = void 0;\n        const addOptions_1 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_5), [options_5]);\n        const removeOptions_1 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_5), [options_5]);\n        const fn_1 = useReact_useMemo_CF4EA67(() => ((arg_1) => {\n            action_3(arg_1);\n        }), [action_3]);\n        useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n            if (addOptions_1 == null) {\n                window.addEventListener(eventType_1, fn_1);\n            }\n            else {\n                window.addEventListener(eventType_1, fn_1, addOptions_1);\n            }\n            return React_createDisposable_3A5B6456(() => {\n                if (removeOptions_1 == null) {\n                    window.removeEventListener(eventType_1, fn_1);\n                }\n                else {\n                    window.removeEventListener(eventType_1, fn_1, removeOptions_1);\n                }\n            });\n        }));\n    }\n    const eventType_2 = \"CUSTOM_NAVIGATION_EVENT\";\n    const action_4 = onChange;\n    const options_8 = void 0;\n    const addOptions_2 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_8), [options_8]);\n    const removeOptions_2 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_8), [options_8]);\n    const fn_2 = useReact_useMemo_CF4EA67(() => ((arg_2) => {\n        action_4(arg_2);\n    }), [action_4]);\n    useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n        if (addOptions_2 == null) {\n            window.addEventListener(eventType_2, fn_2);\n        }\n        else {\n            window.addEventListener(eventType_2, fn_2, addOptions_2);\n        }\n        return React_createDisposable_3A5B6456(() => {\n            if (removeOptions_2 == null) {\n                window.removeEventListener(eventType_2, fn_2);\n            }\n            else {\n                window.removeEventListener(eventType_2, fn_2, removeOptions_2);\n            }\n        });\n    }));\n    const matchValue = input.application;\n    return (matchValue == null) ? null : matchValue;\n});\n\nexport function Route_$007CInt$007C_$007C(input) {\n    let matchValue;\n    let outArg = 0;\n    matchValue = [tryParse(input, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n        outArg = (v | 0);\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CInt64$007C_$007C(input) {\n    let matchValue;\n    let outArg = fromInt(0);\n    matchValue = [tryParse_1(input, 511, false, 64, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CGuid$007C_$007C(input) {\n    let matchValue;\n    let outArg = \"00000000-0000-0000-0000-000000000000\";\n    matchValue = [tryParse_2(input, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CNumber$007C_$007C(input) {\n    let matchValue;\n    let outArg = 0;\n    matchValue = [tryParse_3(input, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CDecimal$007C_$007C(input) {\n    let matchValue;\n    let outArg = new Decimal(0);\n    matchValue = [tryParse_4(input, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CBool$007C_$007C(input) {\n    const matchValue = input.toLocaleLowerCase();\n    switch (matchValue) {\n        case \"1\":\n        case \"true\": {\n            return true;\n        }\n        case \"0\":\n        case \"false\": {\n            return false;\n        }\n        case \"\": {\n            return true;\n        }\n        default: {\n            return void 0;\n        }\n    }\n}\n\nexport function Route_$007CQuery$007C_$007C(input) {\n    try {\n        const urlParams = new URLSearchParams(input);\n        return toList(delay(() => map_1((entry) => [entry[0], entry[1]], urlParams.entries())));\n    }\n    catch (matchValue) {\n        return void 0;\n    }\n}\n\n","import { Record } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { bool_type, record_type, lambda_type, unit_type, tuple_type, class_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { Component } from \"react\";\n\nexport class ReactErrorBoundary_ErrorBoundaryProps extends Record {\n    constructor(Inner, ErrorComponent, OnError) {\n        super();\n        this.Inner = Inner;\n        this.ErrorComponent = ErrorComponent;\n        this.OnError = OnError;\n    }\n}\n\nexport function ReactErrorBoundary_ErrorBoundaryProps$reflection() {\n    return record_type(\"Fluke.UI.Frontend.Bindings.React.ReactErrorBoundary.ErrorBoundaryProps\", [], ReactErrorBoundary_ErrorBoundaryProps, () => [[\"Inner\", class_type(\"Fable.React.ReactElement\")], [\"ErrorComponent\", class_type(\"Fable.React.ReactElement\")], [\"OnError\", lambda_type(tuple_type(class_type(\"System.Exception\"), class_type(\"Fluke.UI.Frontend.Bindings.React.ReactErrorBoundary.InfoComponentObject\")), unit_type)]]);\n}\n\nexport class ReactErrorBoundary_ErrorBoundaryState extends Record {\n    constructor(HasErrors) {\n        super();\n        this.HasErrors = HasErrors;\n    }\n}\n\nexport function ReactErrorBoundary_ErrorBoundaryState$reflection() {\n    return record_type(\"Fluke.UI.Frontend.Bindings.React.ReactErrorBoundary.ErrorBoundaryState\", [], ReactErrorBoundary_ErrorBoundaryState, () => [[\"HasErrors\", bool_type]]);\n}\n\nexport class ReactErrorBoundary_ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = (new ReactErrorBoundary_ErrorBoundaryState(false));\n    }\n    componentDidCatch(error, info) {\n        const x = this;\n        (x.props).OnError([error, info]);\n        x.setState(((state, _props) => (new ReactErrorBoundary_ErrorBoundaryState(true))));\n    }\n    render() {\n        const x = this;\n        return (x.state).HasErrors ? (x.props).ErrorComponent : (x.props).Inner;\n    }\n}\n\nexport function ReactErrorBoundary_ErrorBoundary$reflection() {\n    return class_type(\"Fluke.UI.Frontend.Bindings.React.ReactErrorBoundary.ErrorBoundary\", void 0, ReactErrorBoundary_ErrorBoundary, class_type(\"Fable.React.Component`2\", [ReactErrorBoundary_ErrorBoundaryProps$reflection(), ReactErrorBoundary_ErrorBoundaryState$reflection()]));\n}\n\nexport function ReactErrorBoundary_ErrorBoundary_$ctor_A9F531A(props) {\n    return new ReactErrorBoundary_ErrorBoundary(props);\n}\n\n","import { useTheme } from \"../Hooks/Theme.fs.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_darkMode } from \"../State.fs.js\";\nimport { provider, lightMode, darkMode as darkMode_1 } from \"../Bindings/Chakra.fs.js\";\nimport { RouterModule_router } from \"../../.fable/Feliz.Router.3.8.0/Router.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { singleton } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { provider as provider_1 } from \"../Bindings/Store.fs.js\";\nimport { interpolate, toConsole, join } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { Interop_reactApi } from \"../../.fable/Feliz.1.47.0/Interop.fs.js\";\nimport { ReactErrorBoundary_ErrorBoundaryProps, ReactErrorBoundary_ErrorBoundary } from \"../Bindings/React.fs.js\";\n\nexport function ThemeLoader(themeLoaderInputProps) {\n    let clo0_1, clo0_2;\n    const children = themeLoaderInputProps.children;\n    const theme = useTheme();\n    const arg10 = singleton((Jotai_jotaiUtils.useAtomValue(Atoms_darkMode) ? ((clo0_1 = darkMode_1(), (arg00_1) => {\n        const clo1_1 = clo0_1(arg00_1);\n        return (arg10_1) => clo1_1(arg10_1);\n    })) : ((clo0_2 = lightMode(), (arg00_2) => {\n        const clo1_2 = clo0_2(arg00_2);\n        return (arg10_2) => clo1_2(arg10_2);\n    })))((_arg1) => {\n    })(singleton(RouterModule_router({\n        application: react.createElement(react.Fragment, {}, ...toList(delay(() => children))),\n    }))));\n    return provider()((x) => {\n        x.theme = theme;\n    })(arg10);\n}\n\nexport function RootWrapper(rootWrapperInputProps) {\n    let errorElement;\n    const children = rootWrapperInputProps.children;\n    return react.createElement(react.StrictMode, {}, provider_1([(errorElement = createElement(\"div\", {\n        className: join(\" \", [\"static\"]),\n        children: Interop_reactApi.Children.toArray([\"Unhandled Exception. Check the console log.\"]),\n    }), react.createElement(ReactErrorBoundary_ErrorBoundary, new ReactErrorBoundary_ErrorBoundaryProps(createElement(ThemeLoader, {\n        children: children,\n    }), errorElement, (tupledArg) => {\n        toConsole(interpolate(\"ReactErrorBoundary Error: %P() %P()\", [tupledArg[1].componentStack, tupledArg[0]]));\n    })))]));\n}\n\n","import * as react from \"react\";\nimport { equals, uncurry } from \"../fable-library.3.2.7/Util.js\";\nimport { choose, fold } from \"../fable-library.3.2.7/Seq.js\";\nimport { isNullOrEmpty } from \"../fable-library.3.2.7/String.js\";\nimport { HTMLAttr } from \"./Fable.React.Props.fs.js\";\n\nexport function ReactElementTypeModule_memo(render) {\n    return react.memo(render, uncurry(2, null));\n}\n\nexport function ReactElementTypeModule_memoWith(areEqual, render) {\n    return react.memo(render, areEqual);\n}\n\nexport function Helpers_equalsButFunctions(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if ((typeof x === 'object' && !x[Symbol.iterator]) ? (!(y == null)) : false) {\n        const keys = Object.keys(x);\n        const length = keys.length | 0;\n        let i = 0;\n        let result = true;\n        while ((i < length) ? result : false) {\n            const key = keys[i];\n            i = ((i + 1) | 0);\n            const xValue = x[key];\n            result = ((typeof xValue === 'function') ? true : equals(xValue, y[key]));\n        }\n        return result;\n    }\n    else {\n        return equals(x, y);\n    }\n}\n\nexport function Helpers_memoEqualsButFunctions(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if ((typeof x === 'object' && !x[Symbol.iterator]) ? (!(y == null)) : false) {\n        const keys = Object.keys(x);\n        const length = keys.length | 0;\n        let i = 0;\n        let result = true;\n        while ((i < length) ? result : false) {\n            const key = keys[i];\n            i = ((i + 1) | 0);\n            const xValue = x[key];\n            result = ((typeof xValue === 'function') ? true : (xValue === y[key]));\n        }\n        return result;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Helpers_memoBuilder(name, render) {\n    render.displayName = name;\n    const memoType = ReactElementTypeModule_memo(render);\n    return (props) => react.createElement(memoType, props);\n}\n\nexport function Helpers_memoBuilderWith(name, areEqual, render) {\n    render.displayName = name;\n    const memoType = ReactElementTypeModule_memoWith(areEqual, render);\n    return (props) => react.createElement(memoType, props);\n}\n\nexport function Helpers_opt(o) {\n    const o_1 = o;\n    if (o_1 == null) {\n        return null;\n    }\n    else {\n        return o_1;\n    }\n}\n\nexport const Helpers_nothing = null;\n\nexport function Helpers_classBaseList(baseClass, classes) {\n    return new HTMLAttr(64, fold((state, name_1) => ((state + \" \") + name_1), baseClass, choose((tupledArg) => {\n        const name = tupledArg[0];\n        if (tupledArg[1] ? (!isNullOrEmpty(name)) : false) {\n            return name;\n        }\n        else {\n            return void 0;\n        }\n    }, classes)));\n}\n\nexport function Helpers_classList(classes) {\n    return Helpers_classBaseList(\"\", classes);\n}\n\n","import { useReact_useEffect_Z101E1A95 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { JS_window } from \"../Bindings/JS.fs.js\";\nimport { RouterModule_nav } from \"../../.fable/Feliz.Router.3.8.0/Router.fs.js\";\nimport { ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { skip } from \"../../.fable/fable-library.3.2.7/Array.js\";\nimport { isNullOrWhiteSpace, split } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_sessionRestored } from \"../State.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\n\nexport function RouterObserver() {\n    useReact_useEffect_Z101E1A95(() => {\n        let str;\n        const matchValue = JS_window((x) => x);\n        if (matchValue == null) {\n        }\n        else {\n            const window$ = matchValue;\n            const redirect = window$.sessionStorage.redirect;\n            delete sessionStorage.redirect;\n            let pattern_matching_result;\n            if (((str = redirect, (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))).tag === 0) {\n                if (redirect !== window$.location.href) {\n                    pattern_matching_result = 0;\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    RouterModule_nav(ofArray(skip(3, split(redirect, [\"/\"], null, 0))), 1, 2);\n                    break;\n                }\n                case 1: {\n                    break;\n                }\n            }\n        }\n    }, []);\n    const setSessionRestored = Jotai_jotaiUtils.useUpdateAtom(Atoms_sessionRestored);\n    useReact_useEffect_Z101E1A95(() => {\n        setSessionRestored(true);\n    }, [setSessionRestored]);\n    return Helpers_nothing;\n}\n\n","import * as rooks from \"rooks\";\n\nexport const Rooks_Rooks = rooks;\n\nexport const RooksMagic_Rooks = Rooks_Rooks;\n\n","import { React_createDisposable_3A5B6456, useReact_useEffect_Z5ECA432F, useReact_useMemo_CF4EA67, useReact_useCallback_93353E, useFeliz_React__React_useState_Static_1505, useReact_useCallbackRef_7C4B0DD6 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { curry, uncurry } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { addTimestamp } from \"../Bindings/Profiling.fs.js\";\nimport { useCallback } from \"../Bindings/Store.fs.js\";\nimport { RooksMagic_Rooks } from \"../Bindings/Rooks.fs.js\";\nimport { Impl_createRemoveOptions, Impl_adjustPassive } from \"../../.fable/Feliz.UseListener.0.6.3/Listener.fs.js\";\nimport { iterate } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { toArray } from \"../../.fable/fable-library.3.2.7/Option.js\";\n\nexport function useKeyPress(keys, fn) {\n    const fnCallback = useReact_useCallbackRef_7C4B0DD6((tupledArg) => fn(tupledArg[0], uncurry(2, tupledArg[1]), tupledArg[2]));\n    addTimestamp(\"useKeyPress.render\");\n    const keyEvent = useCallback((getter_1, setter_1, e_1) => fnCallback([getter_1, curry(2, setter_1), e_1]), [fnCallback]);\n    RooksMagic_Rooks.useKey(keys, (e_2) => {\n        const pr = keyEvent(e_2);\n        pr.then();\n    }, {\n        eventTypes: [\"keydown\", \"keyup\"],\n    });\n}\n\nexport function useElementHover(elemRef) {\n    const patternInput = useFeliz_React__React_useState_Static_1505(false);\n    const setIsHovered = patternInput[1];\n    const setIsHoveredTrue = useReact_useCallback_93353E((_arg1) => {\n        setIsHovered(true);\n    }, [setIsHovered]);\n    const setIsHoveredFalse = useReact_useCallback_93353E((_arg2) => {\n        setIsHovered(false);\n    }, [setIsHovered]);\n    const elemRef_2 = elemRef;\n    const eventType = \"mouseenter\";\n    const action_1 = setIsHoveredTrue;\n    const options_1 = void 0;\n    const addOptions = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_1), [options_1]);\n    const removeOptions = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_1), [options_1]);\n    const fn = useReact_useMemo_CF4EA67(() => ((arg) => {\n        action_1(arg);\n    }), [action_1]);\n    useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n        iterate((elem) => {\n            if (addOptions == null) {\n                let copyOfStruct_1 = elem;\n                copyOfStruct_1.addEventListener(eventType, fn);\n            }\n            else {\n                const options_2 = addOptions;\n                let copyOfStruct = elem;\n                copyOfStruct.addEventListener(eventType, fn, options_2);\n            }\n        }, toArray(elemRef_2.current));\n        return React_createDisposable_3A5B6456(() => {\n            iterate((elem_1) => {\n                if (removeOptions == null) {\n                    let copyOfStruct_3 = elem_1;\n                    copyOfStruct_3.removeEventListener(eventType, fn);\n                }\n                else {\n                    const options_3 = removeOptions;\n                    let copyOfStruct_2 = elem_1;\n                    copyOfStruct_2.removeEventListener(eventType, fn, options_3);\n                }\n            }, toArray(elemRef_2.current));\n        });\n    }));\n    const elemRef_4 = elemRef;\n    const eventType_1 = \"mouseleave\";\n    const action_5 = setIsHoveredFalse;\n    const options_5 = void 0;\n    const addOptions_1 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_5), [options_5]);\n    const removeOptions_1 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_5), [options_5]);\n    const fn_1 = useReact_useMemo_CF4EA67(() => ((arg_1) => {\n        action_5(arg_1);\n    }), [action_5]);\n    useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n        iterate((elem_2) => {\n            if (addOptions_1 == null) {\n                let copyOfStruct_5 = elem_2;\n                copyOfStruct_5.addEventListener(eventType_1, fn_1);\n            }\n            else {\n                const options_6 = addOptions_1;\n                let copyOfStruct_4 = elem_2;\n                copyOfStruct_4.addEventListener(eventType_1, fn_1, options_6);\n            }\n        }, toArray(elemRef_4.current));\n        return React_createDisposable_3A5B6456(() => {\n            iterate((elem_3) => {\n                if (removeOptions_1 == null) {\n                    let copyOfStruct_7 = elem_3;\n                    copyOfStruct_7.removeEventListener(eventType_1, fn_1);\n                }\n                else {\n                    const options_7 = removeOptions_1;\n                    let copyOfStruct_6 = elem_3;\n                    copyOfStruct_6.removeEventListener(eventType_1, fn_1, options_7);\n                }\n            }, toArray(elemRef_4.current));\n        });\n    }));\n    return patternInput[0];\n}\n\n","import { useKeyPress } from \"../Hooks/Listener.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { Atoms_Task_selectionSet, Selectors_Session_cellSelectionMap, Atoms_view, Atoms_shiftPressed, Atoms_ctrlPressed } from \"../State.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { JS_isDebug } from \"../Bindings/JS.fs.js\";\nimport { interpolate, toConsole } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { View } from \"../../../Fluke.Shared/View.fs.js\";\nimport { FSharpMap__get_Item, toList, ofSeq, FSharpMap__get_Count, iterate as iterate_1, FSharpMap__get_IsEmpty } from \"../../.fable/fable-library.3.2.7/Map.js\";\nimport { item, map, iterate } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { FSharpSet__get_Count, singleton, map as map_1, empty } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { randomNext, compare } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { DateId } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { map as map_2 } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { useToast } from \"../Bindings/Chakra.fs.js\";\nimport { useCallback } from \"../Bindings/Store.fs.js\";\nimport { useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { useDisposableEffect } from \"../Hooks/React.fs.js\";\n\nexport function CtrlListener_CtrlListener() {\n    useKeyPress([\"Control\"], (getter, setter, e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        if (e.ctrlKey !== getter(Atoms_ctrlPressed)) {\n            const value = e.ctrlKey;\n            setter(Atoms_ctrlPressed, value);\n            return Promise.resolve();\n        }\n        else {\n            return Promise.resolve();\n        }\n    })));\n    return Helpers_nothing;\n}\n\nexport function ShiftListener_ShiftListener() {\n    useKeyPress([\"Shift\"], (getter, setter, e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        if (e.shiftKey !== getter(Atoms_shiftPressed)) {\n            const value = e.shiftKey;\n            setter(Atoms_shiftPressed, value);\n            return Promise.resolve();\n        }\n        else {\n            return Promise.resolve();\n        }\n    })));\n    useKeyPress([\"I\", \"H\", \"P\", \"B\"], (_arg1, setter_2, e_1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        const setView = (value_3) => {\n            setter_2(Atoms_view, value_3);\n        };\n        const matchValue_1 = [e_1.ctrlKey, e_1.altKey, e_1.key];\n        let pattern_matching_result;\n        if (matchValue_1[0]) {\n            if (matchValue_1[1]) {\n                if (matchValue_1[2] === \"I\") {\n                    pattern_matching_result = 0;\n                }\n                else if (matchValue_1[2] === \"H\") {\n                    pattern_matching_result = 1;\n                }\n                else if (matchValue_1[2] === \"P\") {\n                    pattern_matching_result = 2;\n                }\n                else if (matchValue_1[2] === \"B\") {\n                    pattern_matching_result = 3;\n                }\n                else {\n                    pattern_matching_result = 4;\n                }\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                if (JS_isDebug()) {\n                    toConsole(interpolate(\"[log] %P()\", [\"RouterObserver.onKeyDown() View.Information\"]));\n                }\n                setView(new View(0));\n                return Promise.resolve();\n            }\n            case 1: {\n                setView(new View(1));\n                return Promise.resolve();\n            }\n            case 2: {\n                setView(new View(2));\n                return Promise.resolve();\n            }\n            case 3: {\n                setView(new View(3));\n                return Promise.resolve();\n            }\n            case 4: {\n                return Promise.resolve();\n            }\n        }\n    })));\n    return Helpers_nothing;\n}\n\nexport function SelectionListener_SelectionListener() {\n    useKeyPress([\"Escape\", \"R\"], (getter, setter, e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        const cellSelectionMap = getter(Selectors_Session_cellSelectionMap);\n        return (((e.key === \"Escape\") ? (e.type === \"keydown\") : false) ? ((!FSharpMap__get_IsEmpty(cellSelectionMap)) ? ((iterate((taskId) => {\n            const atom_1 = Atoms_Task_selectionSet(taskId);\n            const value = empty({\n                Compare: (x, y) => compare(x, y),\n            });\n            setter(atom_1, value);\n        }, map((_arg1) => _arg1[0], cellSelectionMap)), Promise.resolve())) : (Promise.resolve())) : (Promise.resolve())).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            let key, source_8;\n            if ((e.key === \"R\") ? (e.type === \"keydown\") : false) {\n                if (!FSharpMap__get_IsEmpty(cellSelectionMap)) {\n                    iterate_1((taskId_2, dates_1) => {\n                        const atom_2 = Atoms_Task_selectionSet(taskId_2);\n                        const value_4 = map_1((arg0) => (new DateId(0, arg0)), dates_1, {\n                            Compare: (x_2, y_2) => compare(x_2, y_2),\n                        });\n                        setter(atom_2, value_4);\n                    }, (FSharpMap__get_Count(cellSelectionMap) === 1) ? ofSeq(map_2((tupledArg) => {\n                        const dates = tupledArg[1];\n                        return [tupledArg[0], singleton(item(randomNext(0, FSharpSet__get_Count(dates) - 1), dates), {\n                            Compare: (x_1, y_1) => compare(x_1, y_1),\n                        })];\n                    }, toList(cellSelectionMap))) : ((key = ((source_8 = map((_arg1_1) => _arg1_1[0], cellSelectionMap), item(randomNext(0, FSharpMap__get_Count(cellSelectionMap) - 1), source_8))), ofSeq([[key, FSharpMap__get_Item(cellSelectionMap, key)]]))));\n                    return Promise.resolve();\n                }\n                else {\n                    return Promise.resolve();\n                }\n            }\n            else {\n                return Promise.resolve();\n            }\n        }));\n    })));\n    return Helpers_nothing;\n}\n\nexport function PasteListener_PasteListener() {\n    const toast = useToast();\n    const handlePasteEvent = useCallback((_arg2, _arg1, event) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let matchValue_2, clipboard;\n        return ((matchValue_2 = navigator.clipboard, (matchValue_2 == null) ? ((toast((x) => {\n            x.description = \"Clipboard not available\";\n        }), Promise.resolve())) : ((clipboard = matchValue_2, clipboard.readText().then(((_arg1_1) => {\n            toConsole(interpolate(\"text=%P()\", [_arg1_1]));\n            return Promise.resolve();\n        })))))).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            event.preventDefault();\n            return Promise.resolve();\n        }));\n    })), [toast]);\n    const handle = useReact_useMemo_CF4EA67(() => ((arg) => {\n        const pr = handlePasteEvent(arg);\n        pr.then();\n    }), [handlePasteEvent]);\n    useDisposableEffect((disposed) => {\n        if (!disposed) {\n            document.addEventListener(\"paste\", handle);\n        }\n        else {\n            document.removeEventListener(\"paste\", handle);\n        }\n    }, [handle]);\n    useKeyPress([\"V\"], (_arg3, setter, e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        if (e.ctrlKey) {\n            return Promise.resolve();\n        }\n        else {\n            return Promise.resolve();\n        }\n    })));\n    return Helpers_nothing;\n}\n\n","import { Union } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { union_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { useReact_useEffect_Z5234A374, useFeliz_React__React_useState_Static_1505, useReact_useEffect_Z101E1A95, useReact_useRef_1505, useReact_useCallbackRef_7C4B0DD6 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { curry, uncurry } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\n\nexport class SchedulingType extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Timeout\", \"Interval\"];\n    }\n}\n\nexport function SchedulingType$reflection() {\n    return union_type(\"Fluke.UI.Frontend.Hooks.Scheduling.SchedulingType\", [], SchedulingType, () => [[], []]);\n}\n\nfunction schedulingFn(_arg1) {\n    if (_arg1.tag === 1) {\n        return [(callback_1) => ((ms_1) => setInterval(callback_1, ms_1)), (token_1) => {\n            clearInterval(token_1);\n        }];\n    }\n    else {\n        return [(callback) => ((ms) => setTimeout(callback, ms)), (token) => {\n            clearTimeout(token);\n        }];\n    }\n}\n\nexport function useScheduling(schedulingType, duration, fn) {\n    const fnCallback = useReact_useCallbackRef_7C4B0DD6((tupledArg) => fn(tupledArg[0], uncurry(2, tupledArg[1])));\n    const savedCallback = useReact_useRef_1505(fnCallback);\n    useReact_useEffect_Z101E1A95(() => {\n        savedCallback.current = fnCallback;\n    }, [savedCallback, fnCallback]);\n    const patternInput = useFeliz_React__React_useState_Static_1505(true);\n    const setMounted = patternInput[1];\n    const mounted = patternInput[0];\n    const fn_1 = useCallback((getter_1, setter_1, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (mounted ? (savedCallback.current([getter_1, curry(2, setter_1)]).then((() => (Promise.resolve(undefined))))) : (Promise.resolve())))), [mounted, savedCallback]);\n    useReact_useEffect_Z5234A374(() => {\n        const patternInput_1 = schedulingFn(schedulingType);\n        const id = patternInput_1[0](() => {\n            const pr = fn_1();\n            pr.then();\n        })(duration) | 0;\n        setMounted(true);\n        return {\n            Dispose() {\n                setMounted(false);\n                patternInput_1[1](id);\n            },\n        };\n    }, [fn_1, setMounted, schedulingType, savedCallback, duration]);\n}\n\n","import { SchedulingType, useScheduling } from \"../Hooks/Scheduling.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { isEmpty, choose, tryHead, map } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { Atoms_position, Atoms_selectedDatabaseIdSet, Atoms_Database_position } from \"../State.fs.js\";\nimport { toList } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { int32ToString, equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { minute as minute_1, hour as hour_1, day as day_1, month as month_1, year as year_1, now } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { FlukeDateTime, FlukeDate, Year } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { enum_type, int32_type, parseEnum } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { FlukeTime, Minute, Hour, Day } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { Atoms_isTesting } from \"../Bindings/Store.fs.js\";\nimport { toText, interpolate, toConsole } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { map as map_1 } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\n\nexport function PositionUpdater() {\n    useScheduling(new SchedulingType(1), 1000, (getter, setter) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let date_1, date_2;\n        const selectedDatabasePositions = map((atom_1) => getter(atom_1), map(Atoms_Database_position, toList(getter(Atoms_selectedDatabaseIdSet))));\n        const pausedPosition = tryHead(choose((x) => x, selectedDatabasePositions));\n        const position = getter(Atoms_position);\n        let newPosition_1;\n        const matchValue = [selectedDatabasePositions, pausedPosition];\n        if (isEmpty(matchValue[0])) {\n            newPosition_1 = ((!equals(position, void 0)) ? (void 0) : position);\n        }\n        else if (matchValue[1] != null) {\n            newPosition_1 = pausedPosition;\n        }\n        else {\n            let newPosition;\n            const date = now();\n            newPosition = (new FlukeDateTime((date_1 = date, new FlukeDate(new Year(0, year_1(date_1)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_1(date_1))), new Day(0, day_1(date_1)))), (date_2 = date, new FlukeTime(new Hour(0, hour_1(date_2)), new Minute(0, minute_1(date_2))))));\n            const isTesting = getter(Atoms_isTesting);\n            const position_1 = getter(Atoms_position);\n            newPosition_1 = ((((!isTesting) ? true : (position_1 == null)) ? (!equals(newPosition, position_1)) : false) ? newPosition : position_1);\n        }\n        if (!equals(position, newPosition_1)) {\n            toConsole(interpolate(\"Updating position newPosition=%P()\", [map_1((arg00) => {\n                let _arg6, _arg1;\n                const _arg7 = arg00;\n                return toText(interpolate(\"%P() %P()\", [(_arg6 = _arg7.Date, toText(interpolate(\"%d%P()-%02d%P()-%02d%P()\", [_arg6.Year.fields[0], _arg6.Month, _arg6.Day.fields[0]]))), (_arg1 = _arg7.Time, toText(interpolate(\"%02d%P():%02d%P()\", [_arg1.Hour.fields[0], _arg1.Minute.fields[0]])))]));\n            }, newPosition_1)]));\n            setter(Atoms_position, newPosition_1);\n            return Promise.resolve();\n        }\n        else {\n            return Promise.resolve();\n        }\n    })));\n    return Helpers_nothing;\n}\n\n","import { toList, ofSeq } from \"../.fable/fable-library.3.2.7/Map.js\";\nimport { map } from \"../.fable/fable-library.3.2.7/List.js\";\nimport { newGuid } from \"../.fable/fable-library.3.2.7/Guid.js\";\nimport { Task, Information as Information_1, Area, AreaName, TaskId } from \"../../Fluke.Shared/Domain/Model.fs.js\";\nimport { getDatabaseMap, templatesUser, databaseStateFromDslTemplate, DslTemplate, TemplateTask } from \"../../Fluke.Shared/Templates.fs.js\";\nimport { DatabaseId } from \"../../Fluke.Shared/Domain/State.fs.js\";\n\nexport function fetchTemplatesDatabaseStateMap() {\n    return ofSeq(map((databaseState) => [databaseState.Database.Id, databaseState], map((tupledArg) => {\n        const dslTemplate = tupledArg[1];\n        const newDslTemplate = new DslTemplate(dslTemplate.Position, map((taskTemplate) => {\n            let inputRecord;\n            return new TemplateTask((inputRecord = taskTemplate.Task, new Task(new TaskId(0, newGuid()), inputRecord.Name, new Information_1(1, new Area(new AreaName(0, \"temp\"))), inputRecord.Duration, inputRecord.PendingAfter, inputRecord.MissedAfter, inputRecord.Scheduling, inputRecord.Priority)), taskTemplate.Events, taskTemplate.Expected);\n        }, dslTemplate.Tasks));\n        return databaseStateFromDslTemplate(templatesUser, new DatabaseId(0, newGuid()), tupledArg[0], newDslTemplate);\n    }, toList(getDatabaseMap(templatesUser)))));\n}\n\n","import { Record, Union } from \"../fable-library.3.2.7/Types.js\";\nimport { int32_type, obj_type, record_type, option_type, bool_type, list_type, class_type, string_type, union_type } from \"../fable-library.3.2.7/Reflection.js\";\n\nexport class HttpMethod extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\", \"HEAD\", \"OPTIONS\"];\n    }\n}\n\nexport function HttpMethod$reflection() {\n    return union_type(\"Fable.SimpleHttp.HttpMethod\", [], HttpMethod, () => [[], [], [], [], [], [], []]);\n}\n\nexport class Header extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Header\"];\n    }\n}\n\nexport function Header$reflection() {\n    return union_type(\"Fable.SimpleHttp.Header\", [], Header, () => [[[\"Item1\", string_type], [\"Item2\", string_type]]]);\n}\n\nexport class BodyContent extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Empty\", \"Text\", \"Binary\", \"Form\"];\n    }\n}\n\nexport function BodyContent$reflection() {\n    return union_type(\"Fable.SimpleHttp.BodyContent\", [], BodyContent, () => [[], [[\"Item\", string_type]], [[\"Item\", class_type(\"Browser.Types.Blob\")]], [[\"Item\", class_type(\"Browser.Types.FormData\")]]]);\n}\n\nexport class ResponseTypes extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Text\", \"Blob\", \"ArrayBuffer\"];\n    }\n}\n\nexport function ResponseTypes$reflection() {\n    return union_type(\"Fable.SimpleHttp.ResponseTypes\", [], ResponseTypes, () => [[], [], []]);\n}\n\nexport class HttpRequest extends Record {\n    constructor(url, method, headers, withCredentials, overridenMimeType, overridenResponseType, content) {\n        super();\n        this.url = url;\n        this.method = method;\n        this.headers = headers;\n        this.withCredentials = withCredentials;\n        this.overridenMimeType = overridenMimeType;\n        this.overridenResponseType = overridenResponseType;\n        this.content = content;\n    }\n}\n\nexport function HttpRequest$reflection() {\n    return record_type(\"Fable.SimpleHttp.HttpRequest\", [], HttpRequest, () => [[\"url\", string_type], [\"method\", HttpMethod$reflection()], [\"headers\", list_type(Header$reflection())], [\"withCredentials\", bool_type], [\"overridenMimeType\", option_type(string_type)], [\"overridenResponseType\", option_type(ResponseTypes$reflection())], [\"content\", BodyContent$reflection()]]);\n}\n\nexport class ResponseContent extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Text\", \"Blob\", \"ArrayBuffer\", \"Unknown\"];\n    }\n}\n\nexport function ResponseContent$reflection() {\n    return union_type(\"Fable.SimpleHttp.ResponseContent\", [], ResponseContent, () => [[[\"Item\", string_type]], [[\"Item\", class_type(\"Browser.Types.Blob\")]], [[\"Item\", class_type(\"Fable.Core.JS.ArrayBuffer\")]], [[\"Item\", obj_type]]]);\n}\n\nexport class HttpResponse extends Record {\n    constructor(statusCode, responseText, responseType, responseHeaders, content) {\n        super();\n        this.statusCode = (statusCode | 0);\n        this.responseText = responseText;\n        this.responseType = responseType;\n        this.responseHeaders = responseHeaders;\n        this.content = content;\n    }\n}\n\nexport function HttpResponse$reflection() {\n    return record_type(\"Fable.SimpleHttp.HttpResponse\", [], HttpResponse, () => [[\"statusCode\", int32_type], [\"responseText\", string_type], [\"responseType\", string_type], [\"responseHeaders\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, string_type])], [\"content\", ResponseContent$reflection()]]);\n}\n\n","import { fromContinuations } from \"../fable-library.3.2.7/Async.js\";\nimport { HttpResponse, ResponseContent, HttpRequest, BodyContent, HttpMethod, Header } from \"./Types.fs.js\";\nimport { tail, head, isEmpty, ofArray as ofArray_1, singleton, append, empty } from \"../fable-library.3.2.7/List.js\";\nimport { ofArray, empty as empty_1 } from \"../fable-library.3.2.7/Map.js\";\nimport { join, split, isNullOrEmpty } from \"../fable-library.3.2.7/String.js\";\nimport { choose } from \"../fable-library.3.2.7/Array.js\";\nimport { getEnumerator } from \"../fable-library.3.2.7/Util.js\";\nimport { some } from \"../fable-library.3.2.7/Option.js\";\nimport { singleton as singleton_1 } from \"../fable-library.3.2.7/AsyncBuilder.js\";\n\nexport function FileReader_readBlobAsText(blob) {\n    return fromContinuations((tupledArg) => {\n        const reader = new FileReader();\n        reader.onload = ((_arg1) => {\n            if (reader.readyState === 2) {\n                tupledArg[0](reader.result);\n            }\n        });\n        reader.readAsText(blob);\n    });\n}\n\nexport function FileReader_readFileAsText(file) {\n    return fromContinuations((tupledArg) => {\n        const reader = new FileReader();\n        reader.onload = ((_arg1) => {\n            if (reader.readyState === 2) {\n                tupledArg[0](reader.result);\n            }\n        });\n        reader.readAsText(file);\n    });\n}\n\nexport function FormData_append(key, value, form) {\n    form.append(key, value);\n    return form;\n}\n\nexport function FormData_appendFile(key, file, form) {\n    form.append(key, file);\n    return form;\n}\n\nexport function FormData_appendNamedFile(key, fileName, file, form) {\n    form.append(key, file, fileName);\n    return form;\n}\n\nexport function FormData_appendBlob(key, blob, form) {\n    form.append(key, blob);\n    return form;\n}\n\nexport function FormData_appendNamedBlob(key, fileName, blob, form) {\n    form.append(key, blob, fileName);\n    return form;\n}\n\nexport function Headers_contentType(value) {\n    return new Header(0, \"Content-Type\", value);\n}\n\nexport function Headers_accept(value) {\n    return new Header(0, \"Accept\", value);\n}\n\nexport function Headers_acceptCharset(value) {\n    return new Header(0, \"Accept-Charset\", value);\n}\n\nexport function Headers_acceptEncoding(value) {\n    return new Header(0, \"Accept-Encoding\", value);\n}\n\nexport function Headers_acceptLanguage(value) {\n    return new Header(0, \"Accept-Language\", value);\n}\n\nexport function Headers_acceptDateTime(value) {\n    return new Header(0, \"Accept-Datetime\", value);\n}\n\nexport function Headers_authorization(value) {\n    return new Header(0, \"Authorization\", value);\n}\n\nexport function Headers_cacheControl(value) {\n    return new Header(0, \"Cache-Control\", value);\n}\n\nexport function Headers_connection(value) {\n    return new Header(0, \"Connection\", value);\n}\n\nexport function Headers_cookie(value) {\n    return new Header(0, \"Cookie\", value);\n}\n\nexport function Headers_contentMD5(value) {\n    return new Header(0, \"Content-MD5\", value);\n}\n\nexport function Headers_date(value) {\n    return new Header(0, \"Date\", value);\n}\n\nexport function Headers_expect(value) {\n    return new Header(0, \"Expect\", value);\n}\n\nexport function Headers_ifMatch(value) {\n    return new Header(0, \"If-Match\", value);\n}\n\nexport function Headers_ifModifiedSince(value) {\n    return new Header(0, \"If-Modified-Since\", value);\n}\n\nexport function Headers_ifNoneMatch(value) {\n    return new Header(0, \"If-None-Match\", value);\n}\n\nexport function Headers_ifRange(value) {\n    return new Header(0, \"If-Range\", value);\n}\n\nexport function Headers_IfUnmodifiedSince(value) {\n    return new Header(0, \"If-Unmodified-Since\", value);\n}\n\nexport function Headers_maxForwards(value) {\n    return new Header(0, \"Max-Forwards\", value);\n}\n\nexport function Headers_origin(value) {\n    return new Header(0, \"Origin\", value);\n}\n\nexport function Headers_pragma(value) {\n    return new Header(0, \"Pragma\", value);\n}\n\nexport function Headers_proxyAuthorization(value) {\n    return new Header(0, \"Proxy-Authorization\", value);\n}\n\nexport function Headers_range(value) {\n    return new Header(0, \"Range\", value);\n}\n\nexport function Headers_referer(value) {\n    return new Header(0, \"Referer\", value);\n}\n\nexport function Headers_userAgent(value) {\n    return new Header(0, \"User-Agent\", value);\n}\n\nexport function Headers_create(key, value) {\n    return new Header(0, key, value);\n}\n\nconst Http_defaultRequest = new HttpRequest(\"\", new HttpMethod(0), empty(), false, void 0, void 0, new BodyContent(0));\n\nconst Http_emptyResponse = new HttpResponse(0, \"\", \"\", empty_1(), new ResponseContent(0, \"\"));\n\nfunction Http_splitAt(delimiter, input) {\n    if (isNullOrEmpty(input)) {\n        return [input];\n    }\n    else {\n        return split(input, [delimiter], null, 0);\n    }\n}\n\nfunction Http_serializeMethod(_arg1) {\n    switch (_arg1.tag) {\n        case 1: {\n            return \"POST\";\n        }\n        case 3: {\n            return \"PATCH\";\n        }\n        case 2: {\n            return \"PUT\";\n        }\n        case 4: {\n            return \"DELETE\";\n        }\n        case 6: {\n            return \"OPTIONS\";\n        }\n        case 5: {\n            return \"HEAD\";\n        }\n        default: {\n            return \"GET\";\n        }\n    }\n}\n\nexport function Http_request(url) {\n    return new HttpRequest(url, Http_defaultRequest.method, Http_defaultRequest.headers, Http_defaultRequest.withCredentials, Http_defaultRequest.overridenMimeType, Http_defaultRequest.overridenResponseType, Http_defaultRequest.content);\n}\n\nexport function Http_method(httpVerb, req) {\n    return new HttpRequest(req.url, httpVerb, req.headers, req.withCredentials, req.overridenMimeType, req.overridenResponseType, req.content);\n}\n\nexport function Http_header(singleHeader, req) {\n    return new HttpRequest(req.url, req.method, append(req.headers, singleton(singleHeader)), req.withCredentials, req.overridenMimeType, req.overridenResponseType, req.content);\n}\n\nexport function Http_headers(values, req) {\n    return new HttpRequest(req.url, req.method, append(req.headers, values), req.withCredentials, req.overridenMimeType, req.overridenResponseType, req.content);\n}\n\nexport function Http_withCredentials(enabled, req) {\n    return new HttpRequest(req.url, req.method, req.headers, enabled, req.overridenMimeType, req.overridenResponseType, req.content);\n}\n\nexport function Http_overrideMimeType(value, req) {\n    return new HttpRequest(req.url, req.method, req.headers, req.withCredentials, value, req.overridenResponseType, req.content);\n}\n\nexport function Http_overrideResponseType(value, req) {\n    return new HttpRequest(req.url, req.method, req.headers, req.withCredentials, req.overridenMimeType, value, req.content);\n}\n\nexport function Http_content(bodyContent, req) {\n    return new HttpRequest(req.url, req.method, req.headers, req.withCredentials, req.overridenMimeType, req.overridenResponseType, bodyContent);\n}\n\nexport function Http_send(req) {\n    return fromContinuations((tupledArg) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open(Http_serializeMethod(req.method), req.url);\n        xhr.onreadystatechange = (() => {\n            let responseText, matchValue_1, statusCode, responseType, content, matchValue_2;\n            if (xhr.readyState === 4) {\n                tupledArg[0]((responseText = ((matchValue_1 = xhr.responseType, (matchValue_1 === \"\") ? xhr.responseText : ((matchValue_1 === \"text\") ? xhr.responseText : \"\"))), (statusCode = (xhr.status | 0), (responseType = xhr.responseType, (content = ((matchValue_2 = xhr.responseType, (matchValue_2 === \"\") ? (new ResponseContent(0, xhr.responseText)) : ((matchValue_2 === \"text\") ? (new ResponseContent(0, xhr.responseText)) : ((matchValue_2 === \"arraybuffer\") ? (new ResponseContent(2, xhr.response)) : ((matchValue_2 === \"blob\") ? (new ResponseContent(1, xhr.response)) : (new ResponseContent(3, xhr.response))))))), new HttpResponse(statusCode, responseText, responseType, ofArray(choose((headerLine) => {\n                    const matchValue_3 = ofArray_1(Http_splitAt(\":\", headerLine));\n                    if (!isEmpty(matchValue_3)) {\n                        return [head(matchValue_3).toLocaleLowerCase(), join(\":\", tail(matchValue_3)).trim()];\n                    }\n                    else {\n                        return void 0;\n                    }\n                }, Http_splitAt(\"\\r\\n\", xhr.getAllResponseHeaders()))), content))))));\n            }\n        });\n        const enumerator = getEnumerator(req.headers);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                xhr.setRequestHeader(forLoopVar.fields[0], forLoopVar.fields[1]);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        xhr.withCredentials = req.withCredentials;\n        const matchValue_4 = req.overridenMimeType;\n        if (matchValue_4 == null) {\n        }\n        else {\n            xhr.overrideMimeType(matchValue_4);\n        }\n        const matchValue_5 = req.overridenResponseType;\n        if (matchValue_5 == null) {\n        }\n        else if (matchValue_5.tag === 1) {\n            xhr.responseType = \"blob\";\n        }\n        else if (matchValue_5.tag === 2) {\n            xhr.responseType = \"arraybuffer\";\n        }\n        else {\n            xhr.responseType = \"text\";\n        }\n        const matchValue_6 = [req.method, req.content];\n        if (matchValue_6[0].tag === 0) {\n            xhr.send(some(void 0));\n        }\n        else if (matchValue_6[1].tag === 1) {\n            xhr.send(some(matchValue_6[1].fields[0]));\n        }\n        else if (matchValue_6[1].tag === 3) {\n            xhr.send(some(matchValue_6[1].fields[0]));\n        }\n        else if (matchValue_6[1].tag === 2) {\n            xhr.send(some(matchValue_6[1].fields[0]));\n        }\n        else {\n            xhr.send(some(void 0));\n        }\n    });\n}\n\nexport function Http_get(url) {\n    return singleton_1.Delay(() => singleton_1.Bind(Http_send(Http_method(new HttpMethod(0), Http_request(url))), (_arg1) => {\n        const response = _arg1;\n        return singleton_1.Return([response.statusCode, response.responseText]);\n    }));\n}\n\nexport function Http_put(url, data) {\n    return singleton_1.Delay(() => singleton_1.Bind(Http_send(Http_content(new BodyContent(1, data), Http_method(new HttpMethod(2), Http_request(url)))), (_arg1) => {\n        const response = _arg1;\n        return singleton_1.Return([response.statusCode, response.responseText]);\n    }));\n}\n\nexport function Http_delete(url) {\n    return singleton_1.Delay(() => singleton_1.Bind(Http_send(Http_method(new HttpMethod(4), Http_request(url))), (_arg1) => {\n        const response = _arg1;\n        return singleton_1.Return([response.statusCode, response.responseText]);\n    }));\n}\n\nexport function Http_patch(url, data) {\n    return singleton_1.Delay(() => singleton_1.Bind(Http_send(Http_content(new BodyContent(1, data), Http_method(new HttpMethod(3), Http_request(url)))), (_arg1) => {\n        const response = _arg1;\n        return singleton_1.Return([response.statusCode, response.responseText]);\n    }));\n}\n\nexport function Http_post(url, data) {\n    return singleton_1.Delay(() => singleton_1.Bind(Http_send(Http_content(new BodyContent(1, data), Http_method(new HttpMethod(1), Http_request(url)))), (_arg1) => {\n        const response = _arg1;\n        return singleton_1.Return([response.statusCode, response.responseText]);\n    }));\n}\n\n","import { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { Selectors_Session_informationStateList, Selectors_Task_taskState, Selectors_Database_database, Atoms_databaseIdSet, Atoms_Database_taskIdSet, Atoms_Task_sessions, Atoms_Task_cellAttachmentMap, Atoms_Task_attachmentIdSet, Atoms_Attachment_attachment, Atoms_Attachment_timestamp, Atoms_Task_statusMap, Atoms_Task_selectionSet, Atoms_Task_priority, Atoms_Task_scheduling, Atoms_Task_missedAfter, Atoms_Task_pendingAfter, Atoms_Task_duration, Atoms_Task_information, Atoms_Task_name, Atoms_Database_position, Atoms_Database_sharedWith, Atoms_Database_owner, Atoms_Database_name } from \"../State.fs.js\";\nimport { Jotai_queryAtomPath, Jotai_AtomReference$1 } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_username, useCallback, AtomField$1, readWriteValue, AtomScope, emptyAtom, InputAtom$1 } from \"../Bindings/Store.fs.js\";\nimport { value as value_64 } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { Auto_toString_5A41365E } from \"../../.fable/Thoth.Json.5.1.0/Encode.fs.js\";\nimport { TaskState, CellState, CellStatus, Database, DatabaseAccess, DatabaseId, DatabaseName, DatabaseState$reflection, DatabaseState, ManualCellStatus$reflection, DatabaseAccess$reflection, DatabaseName$reflection } from \"../../../Fluke.Shared/Domain/State.fs.js\";\nimport { FlukeDateTime, FlukeDate, Year, Session$reflection, AttachmentId$reflection, Attachment$reflection, AttachmentId, DateId$reflection, FlukeDateTime$reflection, Username$reflection } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { enum_type, int32_type, parseEnum, list_type, tuple_type, class_type, option_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { Task as Task_1, TaskId, FlukeTime, Minute, Hour, Day, Information_Name_Z233FE4C2, Priority$reflection, Scheduling$reflection, FlukeTime$reflection, Minute$reflection, Information$reflection, TaskName$reflection } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { add, toList, union, ofSeq as ofSeq_1, empty } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { int32ToString, compare } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { toSeq, map as map_3, exists, ofSeq } from \"../../.fable/fable-library.3.2.7/Map.js\";\nimport { delay, iterate, map as map_1, choose } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { empty as empty_1, iterate as iterate_1, choose as choose_1, map } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { newGuid } from \"../../.fable/fable-library.3.2.7/Guid.js\";\nimport { JS_download, Promise_ignore } from \"../Bindings/JS.fs.js\";\nimport { fetchTemplatesDatabaseStateMap } from \"../Templates.fs.js\";\nimport { useToast } from \"../Bindings/Chakra.fs.js\";\nimport { interpolate, toText, isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { minute as minute_1, hour as hour_1, day as day_1, month as month_1, year as year_1, now } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { parallel, startAsPromise } from \"../../.fable/fable-library.3.2.7/Async.js\";\nimport { singleton } from \"../../.fable/fable-library.3.2.7/AsyncBuilder.js\";\nimport { FileReader_readFileAsText } from \"../../.fable/Fable.SimpleHttp.3.0.0/Http.fs.js\";\nimport { rangeDouble } from \"../../.fable/fable-library.3.2.7/Range.js\";\nimport { map as map_2 } from \"../../.fable/fable-library.3.2.7/Array.js\";\nimport { Auto_unsafeFromString_Z5CB6BD } from \"../../.fable/Thoth.Json.5.1.0/Decode.fs.js\";\n\nexport function hydrateDatabase(_arg1, setter, atomScope, database) {\n    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let atom_3, atomPath, matchValue, atomPath_1, atom_10, atomPath_2, matchValue_2, atomPath_3, atom_17, atomPath_4, matchValue_4, atomPath_5, atom_24, atomPath_6, matchValue_6, atomPath_7;\n        const setter_1 = setter;\n        const key = database.Id;\n        const value = database.Name;\n        if (atomScope.tag === 1) {\n            const matchValue_1 = ((atom_3 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Database_name(key)))), (atom_3 != null) ? ((atomPath = atom_3.fields[0], new AtomField$1((atomPath.tag === 0) ? atomPath.fields[0] : emptyAtom, (matchValue = [Jotai_queryAtomPath(atomPath), new AtomScope(1)], (matchValue[0] != null) ? ((matchValue[1].tag === 1) ? ((atomPath_1 = value_64(matchValue[0]), readWriteValue(atomPath_1))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_1 != null) {\n                const atom_5 = matchValue_1;\n                const value_5 = Auto_toString_5A41365E(0, value, void 0, void 0, void 0, {\n                    ResolveType: DatabaseName$reflection,\n                });\n                setter_1(atom_5, value_5);\n            }\n        }\n        else {\n            setter_1(Atoms_Database_name(key), value);\n        }\n        const setter_5 = setter;\n        const key_1 = database.Id;\n        const value_8 = database.Owner;\n        if (atomScope.tag === 1) {\n            const matchValue_3 = ((atom_10 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Database_owner(key_1)))), (atom_10 != null) ? ((atomPath_2 = atom_10.fields[0], new AtomField$1((atomPath_2.tag === 0) ? atomPath_2.fields[0] : emptyAtom, (matchValue_2 = [Jotai_queryAtomPath(atomPath_2), new AtomScope(1)], (matchValue_2[0] != null) ? ((matchValue_2[1].tag === 1) ? ((atomPath_3 = value_64(matchValue_2[0]), readWriteValue(atomPath_3))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_3 != null) {\n                const atom_12 = matchValue_3;\n                const value_13 = Auto_toString_5A41365E(0, value_8, void 0, void 0, void 0, {\n                    ResolveType: Username$reflection,\n                });\n                setter_5(atom_12, value_13);\n            }\n        }\n        else {\n            setter_5(Atoms_Database_owner(key_1), value_8);\n        }\n        const setter_9 = setter;\n        const key_2 = database.Id;\n        const value_16 = database.SharedWith;\n        if (atomScope.tag === 1) {\n            const matchValue_5 = ((atom_17 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Database_sharedWith(key_2)))), (atom_17 != null) ? ((atomPath_4 = atom_17.fields[0], new AtomField$1((atomPath_4.tag === 0) ? atomPath_4.fields[0] : emptyAtom, (matchValue_4 = [Jotai_queryAtomPath(atomPath_4), new AtomScope(1)], (matchValue_4[0] != null) ? ((matchValue_4[1].tag === 1) ? ((atomPath_5 = value_64(matchValue_4[0]), readWriteValue(atomPath_5))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_5 != null) {\n                const atom_19 = matchValue_5;\n                const value_21 = Auto_toString_5A41365E(0, value_16, void 0, void 0, void 0, {\n                    ResolveType: DatabaseAccess$reflection,\n                });\n                setter_9(atom_19, value_21);\n            }\n        }\n        else {\n            setter_9(Atoms_Database_sharedWith(key_2), value_16);\n        }\n        const setter_13 = setter;\n        const key_3 = database.Id;\n        const value_24 = database.Position;\n        if (atomScope.tag === 1) {\n            const matchValue_7 = ((atom_24 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Database_position(key_3)))), (atom_24 != null) ? ((atomPath_6 = atom_24.fields[0], new AtomField$1((atomPath_6.tag === 0) ? atomPath_6.fields[0] : emptyAtom, (matchValue_6 = [Jotai_queryAtomPath(atomPath_6), new AtomScope(1)], (matchValue_6[0] != null) ? ((matchValue_6[1].tag === 1) ? ((atomPath_7 = value_64(matchValue_6[0]), readWriteValue(atomPath_7))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_7 != null) {\n                const atom_26 = matchValue_7;\n                const value_29 = Auto_toString_5A41365E(0, value_24, void 0, void 0, void 0, {\n                    ResolveType: () => option_type(FlukeDateTime$reflection()),\n                });\n                setter_13(atom_26, value_29);\n            }\n        }\n        else {\n            setter_13(Atoms_Database_position(key_3), value_24);\n        }\n        return Promise.resolve();\n    }));\n}\n\nexport function useHydrateDatabase() {\n    return useCallback((arg00$0040, setter, tupledArg) => hydrateDatabase(arg00$0040, setter, tupledArg[0], tupledArg[1]), []);\n}\n\nexport function hydrateTask(_arg1, setter, atomScope, _databaseId, task) {\n    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let atom_3, atomPath, matchValue, atomPath_1, atom_10, atomPath_2, matchValue_2, atomPath_3, atom_17, atomPath_4, matchValue_4, atomPath_5, atom_24, atomPath_6, matchValue_6, atomPath_7, atom_31, atomPath_8, matchValue_8, atomPath_9, atom_38, atomPath_10, matchValue_10, atomPath_11, atom_45, atomPath_12, matchValue_12, atomPath_13, atom_52, atomPath_14, matchValue_14, atomPath_15;\n        const setter_1 = setter;\n        const key = task.Id;\n        const value = task.Name;\n        if (atomScope.tag === 1) {\n            const matchValue_1 = ((atom_3 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_name(key)))), (atom_3 != null) ? ((atomPath = atom_3.fields[0], new AtomField$1((atomPath.tag === 0) ? atomPath.fields[0] : emptyAtom, (matchValue = [Jotai_queryAtomPath(atomPath), new AtomScope(1)], (matchValue[0] != null) ? ((matchValue[1].tag === 1) ? ((atomPath_1 = value_64(matchValue[0]), readWriteValue(atomPath_1))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_1 != null) {\n                const atom_5 = matchValue_1;\n                const value_5 = Auto_toString_5A41365E(0, value, void 0, void 0, void 0, {\n                    ResolveType: TaskName$reflection,\n                });\n                setter_1(atom_5, value_5);\n            }\n        }\n        else {\n            setter_1(Atoms_Task_name(key), value);\n        }\n        const setter_5 = setter;\n        const key_1 = task.Id;\n        const value_8 = task.Information;\n        if (atomScope.tag === 1) {\n            const matchValue_3 = ((atom_10 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_information(key_1)))), (atom_10 != null) ? ((atomPath_2 = atom_10.fields[0], new AtomField$1((atomPath_2.tag === 0) ? atomPath_2.fields[0] : emptyAtom, (matchValue_2 = [Jotai_queryAtomPath(atomPath_2), new AtomScope(1)], (matchValue_2[0] != null) ? ((matchValue_2[1].tag === 1) ? ((atomPath_3 = value_64(matchValue_2[0]), readWriteValue(atomPath_3))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_3 != null) {\n                const atom_12 = matchValue_3;\n                const value_13 = Auto_toString_5A41365E(0, value_8, void 0, void 0, void 0, {\n                    ResolveType: Information$reflection,\n                });\n                setter_5(atom_12, value_13);\n            }\n        }\n        else {\n            setter_5(Atoms_Task_information(key_1), value_8);\n        }\n        const setter_9 = setter;\n        const key_2 = task.Id;\n        const value_16 = task.Duration;\n        if (atomScope.tag === 1) {\n            const matchValue_5 = ((atom_17 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_duration(key_2)))), (atom_17 != null) ? ((atomPath_4 = atom_17.fields[0], new AtomField$1((atomPath_4.tag === 0) ? atomPath_4.fields[0] : emptyAtom, (matchValue_4 = [Jotai_queryAtomPath(atomPath_4), new AtomScope(1)], (matchValue_4[0] != null) ? ((matchValue_4[1].tag === 1) ? ((atomPath_5 = value_64(matchValue_4[0]), readWriteValue(atomPath_5))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_5 != null) {\n                const atom_19 = matchValue_5;\n                const value_21 = Auto_toString_5A41365E(0, value_16, void 0, void 0, void 0, {\n                    ResolveType: () => option_type(Minute$reflection()),\n                });\n                setter_9(atom_19, value_21);\n            }\n        }\n        else {\n            setter_9(Atoms_Task_duration(key_2), value_16);\n        }\n        const setter_13 = setter;\n        const key_3 = task.Id;\n        const value_24 = task.PendingAfter;\n        if (atomScope.tag === 1) {\n            const matchValue_7 = ((atom_24 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_pendingAfter(key_3)))), (atom_24 != null) ? ((atomPath_6 = atom_24.fields[0], new AtomField$1((atomPath_6.tag === 0) ? atomPath_6.fields[0] : emptyAtom, (matchValue_6 = [Jotai_queryAtomPath(atomPath_6), new AtomScope(1)], (matchValue_6[0] != null) ? ((matchValue_6[1].tag === 1) ? ((atomPath_7 = value_64(matchValue_6[0]), readWriteValue(atomPath_7))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_7 != null) {\n                const atom_26 = matchValue_7;\n                const value_29 = Auto_toString_5A41365E(0, value_24, void 0, void 0, void 0, {\n                    ResolveType: () => option_type(FlukeTime$reflection()),\n                });\n                setter_13(atom_26, value_29);\n            }\n        }\n        else {\n            setter_13(Atoms_Task_pendingAfter(key_3), value_24);\n        }\n        const setter_17 = setter;\n        const key_4 = task.Id;\n        const value_32 = task.MissedAfter;\n        if (atomScope.tag === 1) {\n            const matchValue_9 = ((atom_31 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_missedAfter(key_4)))), (atom_31 != null) ? ((atomPath_8 = atom_31.fields[0], new AtomField$1((atomPath_8.tag === 0) ? atomPath_8.fields[0] : emptyAtom, (matchValue_8 = [Jotai_queryAtomPath(atomPath_8), new AtomScope(1)], (matchValue_8[0] != null) ? ((matchValue_8[1].tag === 1) ? ((atomPath_9 = value_64(matchValue_8[0]), readWriteValue(atomPath_9))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_9 != null) {\n                const atom_33 = matchValue_9;\n                const value_37 = Auto_toString_5A41365E(0, value_32, void 0, void 0, void 0, {\n                    ResolveType: () => option_type(FlukeTime$reflection()),\n                });\n                setter_17(atom_33, value_37);\n            }\n        }\n        else {\n            setter_17(Atoms_Task_missedAfter(key_4), value_32);\n        }\n        const setter_21 = setter;\n        const key_5 = task.Id;\n        const value_40 = task.Scheduling;\n        if (atomScope.tag === 1) {\n            const matchValue_11 = ((atom_38 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_scheduling(key_5)))), (atom_38 != null) ? ((atomPath_10 = atom_38.fields[0], new AtomField$1((atomPath_10.tag === 0) ? atomPath_10.fields[0] : emptyAtom, (matchValue_10 = [Jotai_queryAtomPath(atomPath_10), new AtomScope(1)], (matchValue_10[0] != null) ? ((matchValue_10[1].tag === 1) ? ((atomPath_11 = value_64(matchValue_10[0]), readWriteValue(atomPath_11))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_11 != null) {\n                const atom_40 = matchValue_11;\n                const value_45 = Auto_toString_5A41365E(0, value_40, void 0, void 0, void 0, {\n                    ResolveType: Scheduling$reflection,\n                });\n                setter_21(atom_40, value_45);\n            }\n        }\n        else {\n            setter_21(Atoms_Task_scheduling(key_5), value_40);\n        }\n        const setter_25 = setter;\n        const key_6 = task.Id;\n        const value_48 = task.Priority;\n        if (atomScope.tag === 1) {\n            const matchValue_13 = ((atom_45 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_priority(key_6)))), (atom_45 != null) ? ((atomPath_12 = atom_45.fields[0], new AtomField$1((atomPath_12.tag === 0) ? atomPath_12.fields[0] : emptyAtom, (matchValue_12 = [Jotai_queryAtomPath(atomPath_12), new AtomScope(1)], (matchValue_12[0] != null) ? ((matchValue_12[1].tag === 1) ? ((atomPath_13 = value_64(matchValue_12[0]), readWriteValue(atomPath_13))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_13 != null) {\n                const atom_47 = matchValue_13;\n                const value_53 = Auto_toString_5A41365E(0, value_48, void 0, void 0, void 0, {\n                    ResolveType: () => option_type(Priority$reflection()),\n                });\n                setter_25(atom_47, value_53);\n            }\n        }\n        else {\n            setter_25(Atoms_Task_priority(key_6), value_48);\n        }\n        const setter_29 = setter;\n        const key_7 = task.Id;\n        const value_56 = empty({\n            Compare: (x, y) => compare(x, y),\n        });\n        if (atomScope.tag === 1) {\n            const matchValue_15 = ((atom_52 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_selectionSet(key_7)))), (atom_52 != null) ? ((atomPath_14 = atom_52.fields[0], new AtomField$1((atomPath_14.tag === 0) ? atomPath_14.fields[0] : emptyAtom, (matchValue_14 = [Jotai_queryAtomPath(atomPath_14), new AtomScope(1)], (matchValue_14[0] != null) ? ((matchValue_14[1].tag === 1) ? ((atomPath_15 = value_64(matchValue_14[0]), readWriteValue(atomPath_15))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_15 != null) {\n                const atom_54 = matchValue_15;\n                const value_61 = Auto_toString_5A41365E(0, value_56, void 0, void 0, void 0, {\n                    ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [DateId$reflection()]),\n                });\n                setter_29(atom_54, value_61);\n            }\n        }\n        else {\n            setter_29(Atoms_Task_selectionSet(key_7), value_56);\n        }\n        return Promise.resolve();\n    }));\n}\n\nexport function useHydrateTask() {\n    return useCallback((arg00$0040, setter, tupledArg) => hydrateTask(arg00$0040, setter, tupledArg[0], tupledArg[1], tupledArg[2]), []);\n}\n\nexport function hydrateTaskState(getter, setter, atomScope, databaseId, taskState) {\n    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (hydrateTask(getter, setter, atomScope, databaseId, taskState.Task).then((() => {\n        let atom_3, atomPath, matchValue, atomPath_1, atom_24, atomPath_6, matchValue_6, atomPath_7, atom_45, atomPath_12, matchValue_12, atomPath_13, atom_52, atomPath_14, matchValue_14, atomPath_15;\n        const setter_1 = setter;\n        const key = taskState.Task.Id;\n        const value = ofSeq(choose((_arg2) => {\n            const activePatternResult40530 = _arg2;\n            if (activePatternResult40530[1].Status.tag === 5) {\n                return [activePatternResult40530[0], [activePatternResult40530[1].Status.fields[0], activePatternResult40530[1].Status.fields[1]]];\n            }\n            else {\n                return void 0;\n            }\n        }, taskState.CellStateMap));\n        if (atomScope.tag === 1) {\n            const matchValue_1 = ((atom_3 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_statusMap(key)))), (atom_3 != null) ? ((atomPath = atom_3.fields[0], new AtomField$1((atomPath.tag === 0) ? atomPath.fields[0] : emptyAtom, (matchValue = [Jotai_queryAtomPath(atomPath), new AtomScope(1)], (matchValue[0] != null) ? ((matchValue[1].tag === 1) ? ((atomPath_1 = value_64(matchValue[0]), readWriteValue(atomPath_1))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_1 != null) {\n                const atom_5 = matchValue_1;\n                const value_5 = Auto_toString_5A41365E(0, value, void 0, void 0, void 0, {\n                    ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [DateId$reflection(), tuple_type(Username$reflection(), ManualCellStatus$reflection())]),\n                });\n                setter_1(atom_5, value_5);\n            }\n        }\n        else {\n            setter_1(Atoms_Task_statusMap(key), value);\n        }\n        const setter_13 = setter;\n        const key_3 = taskState.Task.Id;\n        const value_24 = ofSeq_1(map((tupledArg) => {\n            let atom_10, atomPath_2, matchValue_2, atomPath_3, atom_17, atomPath_4, matchValue_4, atomPath_5;\n            const attachmentId = new AttachmentId(0, newGuid());\n            const setter_5 = setter;\n            const key_1 = attachmentId;\n            const value_8 = tupledArg[0];\n            if (atomScope.tag === 1) {\n                const matchValue_3 = ((atom_10 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Attachment_timestamp(key_1)))), (atom_10 != null) ? ((atomPath_2 = atom_10.fields[0], new AtomField$1((atomPath_2.tag === 0) ? atomPath_2.fields[0] : emptyAtom, (matchValue_2 = [Jotai_queryAtomPath(atomPath_2), new AtomScope(1)], (matchValue_2[0] != null) ? ((matchValue_2[1].tag === 1) ? ((atomPath_3 = value_64(matchValue_2[0]), readWriteValue(atomPath_3))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n                if (matchValue_3 != null) {\n                    const atom_12 = matchValue_3;\n                    const value_13 = Auto_toString_5A41365E(0, value_8, void 0, void 0, void 0, {\n                        ResolveType: () => option_type(FlukeDateTime$reflection()),\n                    });\n                    setter_5(atom_12, value_13);\n                }\n            }\n            else {\n                setter_5(Atoms_Attachment_timestamp(key_1), value_8);\n            }\n            const setter_9 = setter;\n            const key_2 = attachmentId;\n            const value_16 = tupledArg[1];\n            if (atomScope.tag === 1) {\n                const matchValue_5 = ((atom_17 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Attachment_attachment(key_2)))), (atom_17 != null) ? ((atomPath_4 = atom_17.fields[0], new AtomField$1((atomPath_4.tag === 0) ? atomPath_4.fields[0] : emptyAtom, (matchValue_4 = [Jotai_queryAtomPath(atomPath_4), new AtomScope(1)], (matchValue_4[0] != null) ? ((matchValue_4[1].tag === 1) ? ((atomPath_5 = value_64(matchValue_4[0]), readWriteValue(atomPath_5))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n                if (matchValue_5 != null) {\n                    const atom_19 = matchValue_5;\n                    const value_21 = Auto_toString_5A41365E(0, value_16, void 0, void 0, void 0, {\n                        ResolveType: () => option_type(Attachment$reflection()),\n                    });\n                    setter_9(atom_19, value_21);\n                }\n            }\n            else {\n                setter_9(Atoms_Attachment_attachment(key_2), value_16);\n            }\n            return attachmentId;\n        }, taskState.Attachments), {\n            Compare: (x, y) => compare(x, y),\n        });\n        if (atomScope.tag === 1) {\n            const matchValue_7 = ((atom_24 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_attachmentIdSet(key_3)))), (atom_24 != null) ? ((atomPath_6 = atom_24.fields[0], new AtomField$1((atomPath_6.tag === 0) ? atomPath_6.fields[0] : emptyAtom, (matchValue_6 = [Jotai_queryAtomPath(atomPath_6), new AtomScope(1)], (matchValue_6[0] != null) ? ((matchValue_6[1].tag === 1) ? ((atomPath_7 = value_64(matchValue_6[0]), readWriteValue(atomPath_7))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_7 != null) {\n                const atom_26 = matchValue_7;\n                const value_29 = Auto_toString_5A41365E(0, value_24, void 0, void 0, void 0, {\n                    ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [AttachmentId$reflection()]),\n                });\n                setter_13(atom_26, value_29);\n            }\n        }\n        else {\n            setter_13(Atoms_Task_attachmentIdSet(key_3), value_24);\n        }\n        const setter_25 = setter;\n        const key_6 = taskState.Task.Id;\n        const value_48 = ofSeq(map_1((_arg1_1) => {\n            const activePatternResult40534 = _arg1_1;\n            return [activePatternResult40534[0], ofSeq_1(choose_1((tupledArg_1) => {\n                let atom_31, atomPath_8, matchValue_8, atomPath_9, atom_38, atomPath_10, matchValue_10, atomPath_11;\n                const attachmentId_1 = new AttachmentId(0, newGuid());\n                const setter_17 = setter;\n                const key_4 = attachmentId_1;\n                const value_32 = tupledArg_1[0];\n                if (atomScope.tag === 1) {\n                    const matchValue_9 = ((atom_31 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Attachment_timestamp(key_4)))), (atom_31 != null) ? ((atomPath_8 = atom_31.fields[0], new AtomField$1((atomPath_8.tag === 0) ? atomPath_8.fields[0] : emptyAtom, (matchValue_8 = [Jotai_queryAtomPath(atomPath_8), new AtomScope(1)], (matchValue_8[0] != null) ? ((matchValue_8[1].tag === 1) ? ((atomPath_9 = value_64(matchValue_8[0]), readWriteValue(atomPath_9))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n                    if (matchValue_9 != null) {\n                        const atom_33 = matchValue_9;\n                        const value_37 = Auto_toString_5A41365E(0, value_32, void 0, void 0, void 0, {\n                            ResolveType: () => option_type(FlukeDateTime$reflection()),\n                        });\n                        setter_17(atom_33, value_37);\n                    }\n                }\n                else {\n                    setter_17(Atoms_Attachment_timestamp(key_4), value_32);\n                }\n                const setter_21 = setter;\n                const key_5 = attachmentId_1;\n                const value_40 = tupledArg_1[1];\n                if (atomScope.tag === 1) {\n                    const matchValue_11 = ((atom_38 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Attachment_attachment(key_5)))), (atom_38 != null) ? ((atomPath_10 = atom_38.fields[0], new AtomField$1((atomPath_10.tag === 0) ? atomPath_10.fields[0] : emptyAtom, (matchValue_10 = [Jotai_queryAtomPath(atomPath_10), new AtomScope(1)], (matchValue_10[0] != null) ? ((matchValue_10[1].tag === 1) ? ((atomPath_11 = value_64(matchValue_10[0]), readWriteValue(atomPath_11))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n                    if (matchValue_11 != null) {\n                        const atom_40 = matchValue_11;\n                        const value_45 = Auto_toString_5A41365E(0, value_40, void 0, void 0, void 0, {\n                            ResolveType: () => option_type(Attachment$reflection()),\n                        });\n                        setter_21(atom_40, value_45);\n                    }\n                }\n                else {\n                    setter_21(Atoms_Attachment_attachment(key_5), value_40);\n                }\n                return attachmentId_1;\n            }, activePatternResult40534[1].Attachments), {\n                Compare: (x_1, y_1) => compare(x_1, y_1),\n            })];\n        }, taskState.CellStateMap));\n        if (atomScope.tag === 1) {\n            const matchValue_13 = ((atom_45 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_cellAttachmentMap(key_6)))), (atom_45 != null) ? ((atomPath_12 = atom_45.fields[0], new AtomField$1((atomPath_12.tag === 0) ? atomPath_12.fields[0] : emptyAtom, (matchValue_12 = [Jotai_queryAtomPath(atomPath_12), new AtomScope(1)], (matchValue_12[0] != null) ? ((matchValue_12[1].tag === 1) ? ((atomPath_13 = value_64(matchValue_12[0]), readWriteValue(atomPath_13))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_13 != null) {\n                const atom_47 = matchValue_13;\n                const value_53 = Auto_toString_5A41365E(0, value_48, void 0, void 0, void 0, {\n                    ResolveType: () => class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [DateId$reflection(), class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [AttachmentId$reflection()])]),\n                });\n                setter_25(atom_47, value_53);\n            }\n        }\n        else {\n            setter_25(Atoms_Task_cellAttachmentMap(key_6), value_48);\n        }\n        const setter_29 = setter;\n        const key_7 = taskState.Task.Id;\n        const value_56 = taskState.Sessions;\n        if (atomScope.tag === 1) {\n            const matchValue_15 = ((atom_52 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_sessions(key_7)))), (atom_52 != null) ? ((atomPath_14 = atom_52.fields[0], new AtomField$1((atomPath_14.tag === 0) ? atomPath_14.fields[0] : emptyAtom, (matchValue_14 = [Jotai_queryAtomPath(atomPath_14), new AtomScope(1)], (matchValue_14[0] != null) ? ((matchValue_14[1].tag === 1) ? ((atomPath_15 = value_64(matchValue_14[0]), readWriteValue(atomPath_15))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n            if (matchValue_15 != null) {\n                const atom_54 = matchValue_15;\n                const value_61 = Auto_toString_5A41365E(0, value_56, void 0, void 0, void 0, {\n                    ResolveType: () => list_type(Session$reflection()),\n                });\n                setter_29(atom_54, value_61);\n            }\n        }\n        else {\n            setter_29(Atoms_Task_sessions(key_7), value_56);\n        }\n        return Promise.resolve();\n    })))));\n}\n\nexport function useHydrateTaskState() {\n    return useCallback((getter, setter, tupledArg) => hydrateTaskState(getter, setter, tupledArg[0], tupledArg[1], tupledArg[2]), []);\n}\n\nexport function useHydrateDatabaseState() {\n    const hydrateDatabase_1 = useHydrateDatabase();\n    const hydrateTaskState_1 = useHydrateTaskState();\n    return useCallback((_arg1, setter, tupledArg) => {\n        const atomScope = tupledArg[0];\n        const databaseState = tupledArg[1];\n        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (hydrateDatabase_1([atomScope, databaseState.Database]).then((() => {\n            let pr;\n            iterate((informationState) => {\n                iterate_1((tupledArg_1) => {\n                    let atom_3, atomPath, matchValue_1, atomPath_1, atom_10, atomPath_2, matchValue_3, atomPath_3;\n                    const attachmentId = new AttachmentId(0, newGuid());\n                    const setter_1 = setter;\n                    const key = attachmentId;\n                    const value = tupledArg_1[0];\n                    if (atomScope.tag === 1) {\n                        const matchValue_2 = ((atom_3 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Attachment_timestamp(key)))), (atom_3 != null) ? ((atomPath = atom_3.fields[0], new AtomField$1((atomPath.tag === 0) ? atomPath.fields[0] : emptyAtom, (matchValue_1 = [Jotai_queryAtomPath(atomPath), new AtomScope(1)], (matchValue_1[0] != null) ? ((matchValue_1[1].tag === 1) ? ((atomPath_1 = value_64(matchValue_1[0]), readWriteValue(atomPath_1))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n                        if (matchValue_2 != null) {\n                            const atom_5 = matchValue_2;\n                            const value_5 = Auto_toString_5A41365E(0, value, void 0, void 0, void 0, {\n                                ResolveType: () => option_type(FlukeDateTime$reflection()),\n                            });\n                            setter_1(atom_5, value_5);\n                        }\n                    }\n                    else {\n                        setter_1(Atoms_Attachment_timestamp(key), value);\n                    }\n                    const setter_5 = setter;\n                    const key_1 = attachmentId;\n                    const value_8 = tupledArg_1[1];\n                    if (atomScope.tag === 1) {\n                        const matchValue_4 = ((atom_10 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Attachment_attachment(key_1)))), (atom_10 != null) ? ((atomPath_2 = atom_10.fields[0], new AtomField$1((atomPath_2.tag === 0) ? atomPath_2.fields[0] : emptyAtom, (matchValue_3 = [Jotai_queryAtomPath(atomPath_2), new AtomScope(1)], (matchValue_3[0] != null) ? ((matchValue_3[1].tag === 1) ? ((atomPath_3 = value_64(matchValue_3[0]), readWriteValue(atomPath_3))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n                        if (matchValue_4 != null) {\n                            const atom_12 = matchValue_4;\n                            const value_13 = Auto_toString_5A41365E(0, value_8, void 0, void 0, void 0, {\n                                ResolveType: () => option_type(Attachment$reflection()),\n                            });\n                            setter_5(atom_12, value_13);\n                        }\n                    }\n                    else {\n                        setter_5(Atoms_Attachment_attachment(key_1), value_8);\n                    }\n                }, informationState.Attachments);\n            }, map_1((_arg1_2) => _arg1_2[1], databaseState.InformationStateMap));\n            return Promise_ignore((pr = map_1((taskState) => hydrateTaskState_1([atomScope, databaseState.Database.Id, taskState]), map_1((_arg1_3) => _arg1_3[1], databaseState.TaskStateMap)), Promise.all(pr))).then((() => {\n                const atom_14 = Atoms_Database_taskIdSet(databaseState.Database.Id);\n                const value_16 = ofSeq_1(map_1((_arg1_4) => _arg1_4[0], databaseState.TaskStateMap), {\n                    Compare: (x, y) => compare(x, y),\n                });\n                setter(atom_14, value_16);\n                return Promise.resolve();\n            }));\n        })))));\n    }, [hydrateDatabase_1, hydrateTaskState_1]);\n}\n\nexport function useHydrateTemplates() {\n    const hydrateDatabaseState = useHydrateDatabaseState();\n    return useCallback((_arg1, set$, unitVar2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let pr;\n        const databaseStateMap = fetchTemplatesDatabaseStateMap();\n        return Promise_ignore((pr = map_1((databaseState) => hydrateDatabaseState([new AtomScope(0), databaseState]), map_1((_arg1_1) => _arg1_1[1], databaseStateMap)), Promise.all(pr))).then((() => {\n            let value;\n            const set1 = ofSeq_1(map_1((_arg1_3) => _arg1_3[0], databaseStateMap), {\n                Compare: (x, y) => compare(x, y),\n            });\n            value = ((set2) => union(set1, set2));\n            set$(Atoms_databaseIdSet, value);\n            return Promise.resolve();\n        }));\n    })), [hydrateDatabaseState]);\n}\n\nexport function useExportDatabase() {\n    const toast = useToast();\n    return useCallback((getter, _arg2, databaseId) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let _arg7, date, date_1, date_2, _arg6_1, _arg1_1;\n        const database = getter(Selectors_Database_database(databaseId));\n        const taskStateList = map((atom_2) => getter(atom_2), map(Selectors_Task_taskState, toList(getter(Atoms_Database_taskIdSet(databaseId)))));\n        const databaseState = new DatabaseState(database, ofSeq(map((informationState) => [informationState.Information, informationState], getter(Selectors_Session_informationStateList))), ofSeq(map((taskState) => [taskState.Task.Id, taskState], taskStateList)));\n        if (exists((_arg1, taskState_1) => {\n            let informationName, activePatternResult37001, str, activePatternResult37002, str_4;\n            if (isNullOrWhiteSpace(taskState_1.Task.Name.fields[0])) {\n                return true;\n            }\n            else {\n                return isNullOrWhiteSpace((informationName = Information_Name_Z233FE4C2(taskState_1.Task.Information), (informationName.tag === 0) ? informationName.fields[0].fields[0] : ((informationName.tag === 2) ? informationName.fields[0].fields[0] : ((activePatternResult37001 = ((str = informationName.fields[0].fields[0], (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))), (activePatternResult37001.tag === 0) ? ((activePatternResult37002 = ((str_4 = informationName.fields[1].fields[0], (str_4 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_4) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_4))))), (activePatternResult37002.tag === 0) ? toText(interpolate(\"%P()/%P()\", [activePatternResult37001.fields[0], activePatternResult37002.fields[0]])) : \"\")) : \"\")))));\n            }\n        }, databaseState.TaskStateMap)) {\n            toast((x) => {\n                x.description = \"Database is not fully synced\";\n            });\n            return Promise.resolve();\n        }\n        else {\n            JS_download(Auto_toString_5A41365E(0, databaseState, void 0, void 0, void 0, {\n                ResolveType: DatabaseState$reflection,\n            }), toText(interpolate(\"%P()-%P().json\", [database.Name.fields[0], (_arg7 = ((date = now(), new FlukeDateTime((date_1 = date, new FlukeDate(new Year(0, year_1(date_1)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_1(date_1))), new Day(0, day_1(date_1)))), (date_2 = date, new FlukeTime(new Hour(0, hour_1(date_2)), new Minute(0, minute_1(date_2))))))), toText(interpolate(\"%P() %P()\", [(_arg6_1 = _arg7.Date, toText(interpolate(\"%d%P()-%02d%P()-%02d%P()\", [_arg6_1.Year.fields[0], _arg6_1.Month, _arg6_1.Day.fields[0]]))), (_arg1_1 = _arg7.Time, toText(interpolate(\"%02d%P():%02d%P()\", [_arg1_1.Hour.fields[0], _arg1_1.Minute.fields[0]])))])))])), \"application/json\");\n            toast((x_1) => {\n                x_1.description = \"Database exported successfully\";\n                x_1.title = \"Success\";\n                x_1.status = \"success\";\n            });\n            return Promise.resolve();\n        }\n    })), [toast]);\n}\n\nexport function useImportDatabase() {\n    const hydrateDatabaseState = useHydrateDatabaseState();\n    const toast = useToast();\n    return useCallback((getter, setter, files) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let items_1;\n        const matchValue = [getter(Atoms_username), files];\n        let pattern_matching_result, files_1, username_1;\n        if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n                pattern_matching_result = 0;\n                files_1 = matchValue[1];\n                username_1 = matchValue[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return startAsPromise(parallel(map_1((file) => singleton.Delay(() => singleton.Bind(FileReader_readFileAsText(file), (_arg1) => singleton.Return(_arg1))), (items_1 = files_1, delay(() => map_1((i) => items_1.item(i), rangeDouble(0, 1, items_1.length - 1))))))).then(((_arg2) => (PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    let pr;\n                    return Promise_ignore((pr = map_2((content_1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        let _arg7, date, date_1, date_2, _arg6, _arg1_1;\n                        const databaseState = Auto_unsafeFromString_Z5CB6BD(content_1, void 0, void 0, {\n                            ResolveType: DatabaseState$reflection,\n                        });\n                        let database;\n                        const databaseName_1 = new DatabaseName(0, toText(interpolate(\"%P()_%P()\", [databaseState.Database.Name.fields[0], (_arg7 = ((date = now(), new FlukeDateTime((date_1 = date, new FlukeDate(new Year(0, year_1(date_1)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_1(date_1))), new Day(0, day_1(date_1)))), (date_2 = date, new FlukeTime(new Hour(0, hour_1(date_2)), new Minute(0, minute_1(date_2))))))), toText(interpolate(\"%P() %P()\", [(_arg6 = _arg7.Date, toText(interpolate(\"%d%P()-%02d%P()-%02d%P()\", [_arg6.Year.fields[0], _arg6.Month, _arg6.Day.fields[0]]))), (_arg1_1 = _arg7.Time, toText(interpolate(\"%02d%P():%02d%P()\", [_arg1_1.Hour.fields[0], _arg1_1.Minute.fields[0]])))])))])));\n                        database = (new Database(new DatabaseId(0, newGuid()), databaseName_1, username_1, new DatabaseAccess(1, empty_1()), databaseState.Database.Position));\n                        return hydrateDatabaseState([new AtomScope(0), new DatabaseState(database, databaseState.InformationStateMap, ofSeq(map_1((tupledArg) => {\n                            let inputRecord;\n                            const taskState = tupledArg[1];\n                            const taskId = new TaskId(0, newGuid());\n                            return [taskId, new TaskState((inputRecord = taskState.Task, new Task_1(taskId, inputRecord.Name, inputRecord.Information, inputRecord.Duration, inputRecord.PendingAfter, inputRecord.MissedAfter, inputRecord.Scheduling, inputRecord.Priority)), taskState.Sessions, taskState.Attachments, taskState.SortList, map_3((_arg1_3, _arg3) => {\n                                if (_arg3.Status.tag === 5) {\n                                    const cellState = _arg3;\n                                    return new CellState(new CellStatus(5, username_1, _arg3.Status.fields[1]), cellState.Attachments, cellState.Sessions);\n                                }\n                                else {\n                                    return _arg3;\n                                }\n                            }, taskState.CellStateMap))];\n                        }, toSeq(databaseState.TaskStateMap))))]).then((() => {\n                            setter(Atoms_databaseIdSet, (set$) => add(database.Id, set$));\n                            return Promise.resolve();\n                        }));\n                    })), _arg2), Promise.all(pr))).then((() => {\n                        toast((x_2) => {\n                            x_2.description = \"Database imported successfully\";\n                            x_2.title = \"Success\";\n                            x_2.status = \"success\";\n                        });\n                        return Promise.resolve();\n                    }));\n                }).catch(((_arg6_1) => {\n                    toast((x_3) => {\n                        x_3.description = toText(interpolate(\"Error importing database: $%P()\", [_arg6_1.message]));\n                    });\n                    return Promise.resolve();\n                })))));\n            }\n            case 1: {\n                toast((x_4) => {\n                    x_4.description = \"No files selected\";\n                });\n                return Promise.resolve();\n            }\n        }\n    })), [toast, hydrateDatabaseState]);\n}\n\n","import { Atoms_gunKeys, Atoms_username, Selectors_gunNamespace, useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { format, interpolate, toText, printf, toConsole } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { createUser, deleteUser, changeUserPassword, authUser, GunKeys } from \"../Bindings/Gun.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { FSharpResult$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { Username } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { useHydrateTemplates } from \"./Hydrate.fs.js\";\nimport { templatesUser } from \"../../../Fluke.Shared/Templates.fs.js\";\nimport { some } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { JS_window } from \"../Bindings/JS.fs.js\";\nimport { Atoms_color, Atoms_filterTasksByViewDefault, Atoms_filterTasksByView, Atoms_showViewOptionsDefault, Atoms_showViewOptions, Atoms_hideSchedulingOverlayDefault, Atoms_hideSchedulingOverlay, Atoms_hideTemplatesDefault, Atoms_hideTemplates, Atoms_rightDockDefault, Atoms_rightDock, Atoms_leftDockDefault, Atoms_leftDock, Atoms_darkModeDefault, Atoms_darkMode, Atoms_systemUiFontDefault, Atoms_systemUiFont, Atoms_fontSizeDefault, Atoms_fontSize, Atoms_cellSizeDefault, Atoms_cellSize, Atoms_searchTextDefault, Atoms_searchText, Atoms_daysAfterDefault, Atoms_daysAfter, Atoms_daysBeforeDefault, Atoms_daysBefore, Atoms_sessionBreakDurationDefault, Atoms_sessionBreakDuration, Atoms_sessionDurationDefault, Atoms_sessionDuration, Atoms_dayStartDefault, Atoms_dayStart, Atoms_weekStartDefault, Atoms_weekStart, Atoms_languageDefault, Atoms_language, Atoms_viewDefault, Atoms_view, Atoms_selectedDatabaseIdSetDefault, Atoms_selectedDatabaseIdSet, Atoms_expandedDatabaseIdSetDefault, Atoms_expandedDatabaseIdSet, Atoms_informationAttachmentMapDefault, Atoms_informationAttachmentMap } from \"../State.fs.js\";\nimport { randomNext } from \"../../.fable/fable-library.3.2.7/Util.js\";\n\nexport function useLogout() {\n    return useCallback((getter, setter, unitVar2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        const gunNamespace = getter(Selectors_gunNamespace);\n        toConsole(printf(\"before leave\"));\n        gunNamespace.leave();\n        setter(Atoms_username, void 0);\n        const value_3 = new GunKeys(\"\", \"\", \"\", \"\");\n        setter(Atoms_gunKeys, value_3);\n        return Promise.resolve();\n    })), []);\n}\n\nexport function usePostSignIn() {\n    return useCallback((getter, setter, username) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        const gunNamespace = getter(Selectors_gunNamespace);\n        const keys = (gunNamespace._).sea;\n        if (keys == null) {\n            return Promise.resolve((new FSharpResult$2(1, toText(interpolate(\"No keys found for user %P()\", [gunNamespace.is])))));\n        }\n        else {\n            const keys_1 = keys;\n            setter(Atoms_gunKeys, keys_1);\n            setter(Atoms_username, username);\n            return Promise.resolve((new FSharpResult$2(0, [username, keys_1])));\n        }\n    })), []);\n}\n\nexport function useSignIn() {\n    const postSignIn = usePostSignIn();\n    return useCallback((getter, _arg1, tupledArg) => {\n        const username = tupledArg[0];\n        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            const gunNamespace = getter(Selectors_gunNamespace);\n            return authUser(gunNamespace, username, tupledArg[1]).then(((_arg1_1) => {\n                const ack = _arg1_1;\n                if (ack.err != null) {\n                    const error = ack.err;\n                    return Promise.resolve((new FSharpResult$2(1, error)));\n                }\n                else {\n                    return postSignIn(new Username(0, username));\n                }\n            }));\n        }));\n    }, [postSignIn]);\n}\n\nexport function useChangePassword() {\n    return useCallback((getter, _arg1, tupledArg) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        const username = getter(Atoms_username);\n        if (username != null) {\n            const username_1 = username.fields[0];\n            const gunNamespace = getter(Selectors_gunNamespace);\n            return changeUserPassword(gunNamespace, username_1, tupledArg[0], tupledArg[1]).then(((_arg1_1) => {\n                const ack = _arg1_1;\n                return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    let error;\n                    return (ack.err != null) ? ((error = ack.err, Promise.resolve((new FSharpResult$2(1, error))))) : ((ack.ok != null) ? ((ack.ok === 1) ? (Promise.resolve((new FSharpResult$2(0, void 0)))) : (Promise.resolve((new FSharpResult$2(1, toText(interpolate(\"invalid ack %P()\", [JSON.stringify(ack)]))))))) : (Promise.resolve((new FSharpResult$2(1, toText(interpolate(\"invalid ack %P()\", [JSON.stringify(ack)])))))));\n                }));\n            }));\n        }\n        else {\n            return Promise.resolve((new FSharpResult$2(1, \"Invalid username\")));\n        }\n    })), []);\n}\n\nexport function useDeleteUser() {\n    const logout = useLogout();\n    return useCallback((getter, _arg1, password) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        const username = getter(Atoms_username);\n        if (username != null) {\n            const username_1 = username.fields[0];\n            const gunNamespace = getter(Selectors_gunNamespace);\n            return deleteUser(gunNamespace, username_1, password).then(((_arg1_1) => {\n                const ack = _arg1_1;\n                toConsole(interpolate(\"ack=%P()\", [JSON.stringify(ack)]));\n                return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    let error;\n                    return (ack.err != null) ? ((error = ack.err, Promise.resolve((new FSharpResult$2(1, error))))) : ((ack.ok != null) ? ((ack.ok === 0) ? (logout().then((() => (Promise.resolve((new FSharpResult$2(0, void 0))))))) : (Promise.resolve((new FSharpResult$2(1, toText(interpolate(\"invalid ack %P()\", [JSON.stringify(ack)]))))))) : (Promise.resolve((new FSharpResult$2(1, toText(interpolate(\"invalid ack %P()\", [JSON.stringify(ack)])))))));\n                }));\n            }));\n        }\n        else {\n            return Promise.resolve((new FSharpResult$2(1, \"Invalid username\")));\n        }\n    })), [logout]);\n}\n\nexport function useSignUp() {\n    const signIn = useSignIn();\n    const hydrateTemplates = useHydrateTemplates();\n    return useCallback((getter, setter, tupledArg) => {\n        const username = tupledArg[0];\n        const password = tupledArg[1];\n        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if ((username === \"\") ? true : (username === \"\")) {\n                return Promise.resolve((new FSharpResult$2(1, \"Required fields\")));\n            }\n            else if (username === templatesUser.Username.fields[0]) {\n                return Promise.resolve((new FSharpResult$2(1, \"Invalid username\")));\n            }\n            else {\n                const gunNamespace = getter(Selectors_gunNamespace);\n                toConsole(interpolate(\"Auth.useSignUp. gunNamespace=%P()\", [JSON.stringify(gunNamespace)]));\n                return createUser(gunNamespace, username, password).then(((_arg1) => {\n                    let matchValue, window$;\n                    const ack = _arg1;\n                    toConsole(interpolate(\"Auth.useSignUp. Gun.createUser signUpAck=%P()\", [JSON.stringify(ack)]));\n                    console.log(some([\"ack\", ack]));\n                    return ((matchValue = JS_window((x_1) => x_1), (matchValue == null) ? ((Promise.resolve())) : ((window$ = matchValue, (window$.signUpAck = ack, Promise.resolve()))))).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => (PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        let err;\n                        return (ack.err != null) ? ((err = ack.err, Promise.resolve((new FSharpResult$2(1, err))))) : ((ack.ok != null) ? ((ack.ok === 0) ? ((ack.pub != null) ? (signIn([username, password]).then(((_arg2_1) => ((_arg2_1.tag === 1) ? (Promise.resolve((new FSharpResult$2(1, _arg2_1.fields[0])))) : (hydrateTemplates().then((() => {\n                            setter(Atoms_informationAttachmentMap, Atoms_informationAttachmentMapDefault);\n                            setter(Atoms_expandedDatabaseIdSet, Atoms_expandedDatabaseIdSetDefault);\n                            setter(Atoms_selectedDatabaseIdSet, Atoms_selectedDatabaseIdSetDefault);\n                            setter(Atoms_view, Atoms_viewDefault);\n                            setter(Atoms_language, Atoms_languageDefault);\n                            setter(Atoms_weekStart, Atoms_weekStartDefault);\n                            setter(Atoms_dayStart, Atoms_dayStartDefault);\n                            setter(Atoms_sessionDuration, Atoms_sessionDurationDefault);\n                            setter(Atoms_sessionBreakDuration, Atoms_sessionBreakDurationDefault);\n                            setter(Atoms_daysBefore, Atoms_daysBeforeDefault);\n                            setter(Atoms_daysAfter, Atoms_daysAfterDefault);\n                            setter(Atoms_searchText, Atoms_searchTextDefault);\n                            setter(Atoms_cellSize, Atoms_cellSizeDefault);\n                            setter(Atoms_fontSize, Atoms_fontSizeDefault);\n                            setter(Atoms_systemUiFont, Atoms_systemUiFontDefault);\n                            setter(Atoms_darkMode, Atoms_darkModeDefault);\n                            setter(Atoms_leftDock, Atoms_leftDockDefault);\n                            setter(Atoms_rightDock, Atoms_rightDockDefault);\n                            setter(Atoms_hideTemplates, Atoms_hideTemplatesDefault);\n                            setter(Atoms_hideSchedulingOverlay, Atoms_hideSchedulingOverlayDefault);\n                            setter(Atoms_showViewOptions, Atoms_showViewOptionsDefault);\n                            setter(Atoms_filterTasksByView, Atoms_filterTasksByViewDefault);\n                            void setTimeout(() => {\n                                const value_66 = format(\"#{0:X6}\", randomNext(0, 16777216));\n                                setter(Atoms_color, value_66);\n                            }, 0);\n                            return Promise.resolve((new FSharpResult$2(0, [_arg2_1.fields[0][0], _arg2_1.fields[0][1]])));\n                        }))))))) : (Promise.resolve((new FSharpResult$2(1, toText(interpolate(\"Invalid ack: %P()\", [JSON.stringify(ack)]))))))) : (Promise.resolve((new FSharpResult$2(1, toText(interpolate(\"Invalid ack: %P()\", [JSON.stringify(ack)]))))))) : (Promise.resolve((new FSharpResult$2(1, toText(interpolate(\"Invalid ack: %P()\", [JSON.stringify(ack)])))))));\n                    })))));\n                }));\n            }\n        }));\n    }, [hydrateTemplates, signIn]);\n}\n\n","import { useReact_useElementRef } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { useElementHover } from \"../Hooks/Listener.fs.js\";\nimport { box, tooltip } from \"../Bindings/Chakra.fs.js\";\nimport { singleton } from \"../../.fable/fable-library.3.2.7/List.js\";\n\nexport function Tooltip(tooltipInputProps) {\n    const children = tooltipInputProps.children;\n    const wrapperProps = tooltipInputProps.wrapperProps;\n    const props = tooltipInputProps.props;\n    const ref = useReact_useElementRef();\n    const hovered = useElementHover(ref);\n    const arg10 = singleton(tooltip()((x_1) => {\n        x_1.isLazy = true;\n        x_1.isOpen = hovered;\n        x_1.paddingTop = \"3px\";\n        x_1.paddingBottom = \"4px\";\n        x_1.backgroundColor = \"gray.77\";\n        x_1.zIndex = 20000;\n        x_1.color = \"gray.13\";\n        x_1.closeOnMouseDown = true;\n        x_1.portalProps = {\n            appendToParentPortal: true,\n        };\n        props(x_1);\n    })(children));\n    return box()((x) => {\n        x.ref = ref;\n        x.display = \"inline\";\n        wrapperProps(x);\n    })(arg10);\n}\n\n","import { Icons_externalLinkIcon } from \"../Bindings/Chakra.fs.js\";\n\nexport const externalLinkIcon = Icons_externalLinkIcon()((x) => {\n    x.marginLeft = \"3px\";\n    x.marginTop = \"-1px\";\n})([]);\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_viewDefault, Atoms_view, Atoms_rightDock, Atoms_leftDock, Selectors_deviceInfo } from \"../State.fs.js\";\nimport { useLogout } from \"../Hooks/Auth.fs.js\";\nimport { useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { empty, singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { singleton as singleton_1, ofArray, map } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { stack, link, iconButton, spacer, flex, simpleGrid, box } from \"../Bindings/Chakra.fs.js\";\nimport { manualCellStatusColor, cellStatusColor } from \"../TempUI.fs.js\";\nimport { ManualCellStatus, CellStatus } from \"../../../Fluke.Shared/Domain/State.fs.js\";\nimport { JS_window, JS_newObj } from \"../Bindings/JS.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport * as vsc from \"react-icons/vsc\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { Tooltip } from \"./Tooltip.fs.js\";\nimport { externalLinkIcon } from \"./ExternalLink.fs.js\";\nimport * as ai from \"react-icons/ai\";\nimport * as hi from \"react-icons/hi\";\n\nexport function TopBar() {\n    let arg10_4, arg10_5, arg10_9;\n    const deviceInfo = Jotai_jotaiUtils.useAtomValue(Selectors_deviceInfo);\n    const logout = useLogout();\n    const onLogoClick = useCallback((_arg2, setter, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        setter(Atoms_leftDock, void 0);\n        setter(Atoms_rightDock, void 0);\n        setter(Atoms_view, Atoms_viewDefault);\n        return Promise.resolve();\n    })), []);\n    const arg10_3 = ofArray([(arg10_4 = ofArray([(arg10_5 = toList(delay(() => map((color) => box()((x_3) => {\n        x_3.height = \"7px\";\n        x_3.width = \"7px\";\n        x_3.backgroundColor = color;\n    })([]), ofArray([cellStatusColor(new CellStatus(3)), cellStatusColor(new CellStatus(2)), manualCellStatusColor(new ManualCellStatus(1, void 0)), manualCellStatusColor(new ManualCellStatus(0))])))), simpleGrid()((x_2) => {\n        x_2.columns = 2;\n        x_2.borderWidth = \"1px\";\n        x_2.borderColor = cellStatusColor(new CellStatus(0));\n    })(arg10_5)), box()((x_4) => {\n        x_4.marginLeft = \"5px\";\n    })([\"Fluke\"])]), flex()((x_1) => {\n        x_1.cursor = \"pointer\";\n        x_1.paddingLeft = \"7px\";\n        x_1.paddingTop = \"6px\";\n        x_1.paddingBottom = \"7px\";\n        x_1.alignItems = \"center\";\n        x_1.onClick = onLogoClick;\n    })(arg10_4)), spacer()((x_5) => {\n        x_5.style = JS_newObj((x_6) => {\n            let copyOfStruct = x_6;\n            copyOfStruct.WebkitAppRegion = \"drag\";\n        });\n    })([]), (arg10_9 = toList(delay(() => {\n        let label, children_1, input;\n        return append(deviceInfo.IsElectron ? singleton((label = \"Refresh\", (children_1 = [(input = {\n            Props: (x_8) => {\n                x_8.icon = react.createElement(vsc.VscRefresh, void 0);\n                x_8.height = \"27px\";\n                x_8.fontSize = \"17px\";\n                x_8.onClick = ((_arg3) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    const matchValue_1 = JS_window((x_9) => x_9);\n                    if (matchValue_1 == null) {\n                        return Promise.resolve();\n                    }\n                    else {\n                        const window$ = matchValue_1;\n                        window$.location.href = window$.location.href;\n                        return Promise.resolve();\n                    }\n                })));\n            },\n        }, iconButton()((x_10) => {\n            x_10.backgroundColor = \"transparent\";\n            x_10.variant = \"outline\";\n            x_10.border = \"0\";\n            x_10.width = \"30px\";\n            x_10.height = \"30px\";\n            x_10.borderRadius = \"0\";\n            x_10.textAlign = \"-webkit-center\";\n            input.Props(x_10);\n        })([]))], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_1) : createElement(Tooltip, {\n            props: (x_11) => {\n                x_11.label = label;\n            },\n            wrapperProps: (_arg1_1) => {\n            },\n            children: children_1,\n        })))) : empty(), delay(() => {\n            let label_1, children_5, arg10_11, input_1;\n            return append(singleton((label_1 = react.createElement(react.Fragment, {}, \"GitHub repository\", externalLinkIcon), (children_5 = [(arg10_11 = singleton_1((input_1 = {\n                Props: (x_13) => {\n                    x_13.tabIndex = -1;\n                    x_13.icon = react.createElement(ai.AiOutlineGithub, void 0);\n                    x_13.fontSize = \"17px\";\n                    x_13.height = \"27px\";\n                },\n            }, iconButton()((x_14) => {\n                x_14.backgroundColor = \"transparent\";\n                x_14.variant = \"outline\";\n                x_14.border = \"0\";\n                x_14.width = \"30px\";\n                x_14.height = \"30px\";\n                x_14.borderRadius = \"0\";\n                x_14.textAlign = \"-webkit-center\";\n                input_1.Props(x_14);\n            })([]))), link()((x_12) => {\n                x_12.href = \"https://github.com/fc1943s/fluke\";\n                x_12.isExternal = true;\n                x_12.display = \"block\";\n            })(arg10_11))], equals(label_1, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_5) : createElement(Tooltip, {\n                props: (x_15) => {\n                    x_15.label = label_1;\n                },\n                wrapperProps: (_arg1_2) => {\n                },\n                children: children_5,\n            })))), delay(() => {\n                let label_2, children_8, input_2;\n                return append(singleton((label_2 = \"Logout\", (children_8 = [(input_2 = {\n                    Props: (x_16) => {\n                        x_16.icon = react.createElement(hi.HiLogout, void 0);\n                        x_16.fontSize = \"17px\";\n                        x_16.height = \"27px\";\n                        x_16.onClick = ((_arg4) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (logout().then((() => (Promise.resolve(undefined))))))));\n                    },\n                }, iconButton()((x_17) => {\n                    x_17.backgroundColor = \"transparent\";\n                    x_17.variant = \"outline\";\n                    x_17.border = \"0\";\n                    x_17.width = \"30px\";\n                    x_17.height = \"30px\";\n                    x_17.borderRadius = \"0\";\n                    x_17.textAlign = \"-webkit-center\";\n                    input_2.Props(x_17);\n                })([]))], equals(label_2, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_8) : createElement(Tooltip, {\n                    props: (x_18) => {\n                        x_18.label = label_2;\n                    },\n                    wrapperProps: (_arg1_4) => {\n                    },\n                    children: children_8,\n                })))), delay(() => {\n                    let label_3, children_11, input_3;\n                    return deviceInfo.IsElectron ? singleton((label_3 = \"Close\", (children_11 = [(input_3 = {\n                        Props: (x_19) => {\n                            x_19.icon = react.createElement(vsc.VscChromeClose, void 0);\n                            x_19.height = \"27px\";\n                            x_19.fontSize = \"17px\";\n                            x_19.onClick = ((_arg5) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                const matchValue_2 = JS_window((x_20) => x_20);\n                                if (matchValue_2 == null) {\n                                    return Promise.resolve();\n                                }\n                                else {\n                                    const window$_1 = matchValue_2;\n                                    if (deviceInfo.IsElectron) {\n                                        window$_1.api.send(\"close\");\n                                        return Promise.resolve();\n                                    }\n                                    else {\n                                        window$_1.close(\"\", \"_parent\", \"\");\n                                        return Promise.resolve();\n                                    }\n                                }\n                            })));\n                        },\n                    }, iconButton()((x_21) => {\n                        x_21.backgroundColor = \"transparent\";\n                        x_21.variant = \"outline\";\n                        x_21.border = \"0\";\n                        x_21.width = \"30px\";\n                        x_21.height = \"30px\";\n                        x_21.borderRadius = \"0\";\n                        x_21.textAlign = \"-webkit-center\";\n                        input_3.Props(x_21);\n                    })([]))], equals(label_3, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_11) : createElement(Tooltip, {\n                        props: (x_22) => {\n                            x_22.label = label_3;\n                        },\n                        wrapperProps: (_arg1_5) => {\n                        },\n                        children: children_11,\n                    })))) : empty();\n                }));\n            }));\n        }));\n    })), stack()((x_7) => {\n        x_7.margin = \"1px\";\n        x_7.spacing = \"1px\";\n        x_7.alignItems = \"center\";\n        x_7.direction = \"row\";\n    })(arg10_9))]);\n    return flex()((x) => {\n        x.height = \"29px\";\n        x.alignItems = \"center\";\n        x.backgroundColor = \"gray.10\";\n    })(arg10_3);\n}\n\n","import { spinner } from \"../Bindings/Chakra.fs.js\";\n\nexport function Spinner(spinnerInputProps) {\n    const props = spinnerInputProps.props;\n    return spinner()((x) => {\n        x.size = \"xl\";\n        props(x);\n    })([]);\n}\n\n","import { createElement } from \"react\";\nimport { Spinner } from \"./Spinner.fs.js\";\nimport { flex, center, stack, box } from \"../Bindings/Chakra.fs.js\";\nimport { singleton, ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\n\nexport function LoadingSpinner() {\n    let arg10_1;\n    const arg10 = singleton((arg10_1 = ofArray([createElement(Spinner, {\n        props: (_arg1) => {\n        },\n    }), box()((_arg2) => {\n    })([\"Loading...\"])]), stack()((x_1) => {\n        x_1.alignItems = \"center\";\n    })(arg10_1)));\n    return center()((x) => {\n        x.flex = \"1\";\n    })(arg10);\n}\n\nexport function InlineLoadingSpinner() {\n    const arg10 = singleton(createElement(Spinner, {\n        props: (x) => {\n            x.width = \"10px\";\n            x.height = \"10px\";\n        },\n    }));\n    return flex()((_arg1) => {\n    })(arg10);\n}\n\n","import { accordion, accordionItem as accordionItem_1, accordionPanel, accordionButton, accordionIcon, spacer, box } from \"../Bindings/Chakra.fs.js\";\nimport { item, findIndex, map, ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { indexed, map as map_1, toArray, delay, toList, exists } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { useState } from \"../Bindings/Store.fs.js\";\nimport { equalsWith, map as map_2 } from \"../../.fable/fable-library.3.2.7/Array.js\";\nimport { comparePrimitives } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { JS_toJsArray } from \"../Bindings/JS.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\n\nexport function accordionItem(title, children) {\n    let arg10_1;\n    const arg10 = ofArray([(arg10_1 = ofArray([box()((_arg1) => {\n    })([title]), spacer()((_arg2) => {\n    })([]), accordionIcon()((_arg3) => {\n    })([])]), accordionButton()((x_1) => {\n        x_1.backgroundColor = \"gray.16\";\n        x_1.tabIndex = -1;\n    })(arg10_1)), accordionPanel()((x_2) => {\n        x_2.flex = \"1\";\n        x_2.flexDirection = \"column\";\n        x_2.display = \"flex\";\n        x_2.paddingTop = \"10px\";\n    })(children)]);\n    return accordionItem_1()((x) => {\n        if (exists((cmp) => {\n            let str;\n            const matchValue = cmp.props.flex;\n            if (((str = matchValue, (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))).tag === 0) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }, children)) {\n            x.flex = \"1\";\n        }\n        x.borderColor = \"gray.45\";\n        x.borderBottomWidth = \"0 !important\";\n        x.flexDirection = \"column\";\n        x.display = \"flex\";\n    })(arg10);\n}\n\nexport function Accordion(input) {\n    const patternInput = useState()(input.Atom);\n    const arg10 = toList(delay(() => map((tupledArg) => accordionItem(tupledArg[0], [tupledArg[1]]), input.Items)));\n    return accordion()((x) => {\n        let _arg1;\n        x.allowMultiple = true;\n        x.reduceMotion = true;\n        x.display = \"flex\";\n        x.flexDirection = \"column\";\n        x.flex = \"1\";\n        x.defaultIndex = toArray(map_1((tuple) => tuple[0], indexed(input.Items)));\n        x.index = ((_arg1 = map_2((title) => findIndex((x_1) => (x_1 === title), map((tuple_1) => tuple_1[0], input.Items)), patternInput[0], Int32Array), ((!equalsWith((x_2, y) => comparePrimitives(x_2, y), _arg1, null)) ? (_arg1.length === 0) : false) ? x.defaultIndex : JS_toJsArray(_arg1)));\n        x.onChange = ((indexes) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            let matchValue_1;\n            const newIndexes = map_2((index_1) => item(index_1, input.Items)[0], ((typeof indexes) === \"number\") ? ((matchValue_1 = (indexes | 0), (matchValue_1 === -1) ? (new Int32Array([])) : (new Int32Array([matchValue_1])))) : indexes);\n            if (newIndexes.length > 0) {\n                patternInput[1](newIndexes);\n                return Promise.resolve();\n            }\n            else {\n                return Promise.resolve();\n            }\n        })));\n        input.Props(x);\n    })(arg10);\n}\n\n","\nexport function Browser_Types_Event__Event_get_Value(this$) {\n    return this$.target.value;\n}\n\nexport function Browser_Types_Event__Event_get_Checked(this$) {\n    return this$.target.checked;\n}\n\n","import { Union } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { union_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { append, singleton, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { button, stack, transformShiftBy, box, iconButton } from \"../Bindings/Chakra.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { isEmpty, singleton as singleton_1 } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Tooltip } from \"./Tooltip.fs.js\";\n\nexport class IconPosition extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Left\", \"Right\"];\n    }\n}\n\nexport function IconPosition$reflection() {\n    return union_type(\"Fluke.UI.Frontend.Components.Button.IconPosition\", [], IconPosition, () => [[], []]);\n}\n\nexport function Button(input) {\n    let patternInput;\n    const matchValue = input.Icon;\n    patternInput = ((matchValue != null) ? [matchValue[0], matchValue[1]] : [void 0, void 0]);\n    const iconPosition_1 = patternInput[1];\n    const label = defaultArg(input.Hint, null);\n    const children_1 = toList(delay(() => {\n        let arg10_2, arg10_3;\n        const matchValue_1 = [patternInput[0], toList(input.Children)];\n        let pattern_matching_result, icon_2, children, icon_3;\n        if (matchValue_1[0] != null) {\n            if (isEmpty(matchValue_1[1])) {\n                pattern_matching_result = 0;\n                icon_2 = matchValue_1[0];\n            }\n            else {\n                pattern_matching_result = 1;\n                children = matchValue_1[1];\n                icon_3 = matchValue_1[0];\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n            children = matchValue_1[1];\n            icon_3 = matchValue_1[0];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return singleton(iconButton()((x) => {\n                    x.icon = icon_2();\n                    input.Props(x);\n                })([]));\n            }\n            case 1: {\n                const icon_5 = () => {\n                    if (icon_3 == null) {\n                        return Helpers_nothing;\n                    }\n                    else {\n                        const arg10_1 = singleton_1(icon_3());\n                        return box()((x_1) => {\n                            x_1.transform = transformShiftBy(void 0, 2);\n                        })(arg10_1);\n                    }\n                };\n                return singleton((arg10_2 = singleton_1((arg10_3 = toList(delay(() => append((iconPosition_1 != null) ? ((iconPosition_1.tag === 0) ? singleton(icon_5()) : singleton(Helpers_nothing)) : singleton(Helpers_nothing), delay(() => {\n                    let arg10_4;\n                    return append(singleton((arg10_4 = toList(delay(() => children)), box()((_arg1) => {\n                    })(arg10_4))), delay(() => ((iconPosition_1 != null) ? ((iconPosition_1.tag === 1) ? singleton(icon_5()) : singleton(Helpers_nothing)) : singleton(Helpers_nothing))));\n                })))), stack()((x_3) => {\n                    x_3.direction = \"row\";\n                    x_3.spacing = \"7px\";\n                })(arg10_3))), button()((x_2) => {\n                    x_2.height = \"auto\";\n                    x_2.alignSelf = \"flex-start\";\n                    x_2.color = \"gray\";\n                    x_2.paddingTop = \"4px\";\n                    x_2.paddingBottom = \"4px\";\n                    x_2.borderRadius = \"3px\";\n                    input.Props(x_2);\n                })(arg10_2)));\n            }\n        }\n    }));\n    if (equals(label, Helpers_nothing)) {\n        return react.createElement(react.Fragment, {}, ...children_1);\n    }\n    else {\n        return createElement(Tooltip, {\n            props: (x_4) => {\n                x_4.label = label;\n            },\n            wrapperProps: (_arg1_1) => {\n            },\n            children: children_1,\n        });\n    }\n}\n\n","import * as react from \"@chakra-ui/react\";\nimport { useReact_useRef_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { popover, popoverContent, popoverBody, popoverArrow, popoverTrigger, box } from \"../Bindings/Chakra.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { head, tail, isEmpty, singleton as singleton_1 } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { createElement } from \"react\";\nimport * as react_1 from \"react\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as io from \"react-icons/io\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\n\nexport function CustomPopover(input) {\n    let arg10_2;\n    const disclosure = react.useDisclosure();\n    const initialFocusRef = useReact_useRef_1505();\n    if (!disclosure.isOpen) {\n        return box()((x) => {\n            x.onClick = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                disclosure.onOpen();\n                e.preventDefault();\n                return Promise.resolve();\n            })));\n        })([input.Trigger]);\n    }\n    else {\n        const arg10_1 = singleton_1((arg10_2 = toList(delay(() => {\n            let arg10_3;\n            return append(singleton((arg10_3 = singleton_1(box()((_arg3) => {\n            })([input.Trigger])), popoverTrigger()((_arg2) => {\n            })(arg10_3))), delay(() => {\n                let arg10_5;\n                const matchValue = input.Body([disclosure, initialFocusRef]);\n                let pattern_matching_result;\n                if (!isEmpty(matchValue)) {\n                    if (isEmpty(tail(matchValue))) {\n                        if (equals(head(matchValue), Helpers_nothing)) {\n                            pattern_matching_result = 0;\n                        }\n                        else {\n                            pattern_matching_result = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        return singleton(Helpers_nothing);\n                    }\n                    case 1: {\n                        return singleton((arg10_5 = toList(delay(() => append(singleton(popoverArrow()((_arg4) => {\n                        })([])), delay(() => {\n                            let cmp;\n                            return append((!input.CloseButton) ? singleton(Helpers_nothing) : singleton(createElement(Button, {\n                                Children: [],\n                                Hint: void 0,\n                                Icon: [(cmp = io.IoMdClose, () => react_1.createElement(cmp, void 0)), new IconPosition(0)],\n                                Props: (x_6) => {\n                                    x_6.position = \"absolute\";\n                                    x_6.right = \"0\";\n                                    x_6.margin = \"5px\";\n                                    x_6.minWidth = \"20px\";\n                                    x_6.height = \"20px\";\n                                    x_6.onClick = ((e_1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                        disclosure.onClose();\n                                        e_1.preventDefault();\n                                        return Promise.resolve();\n                                    })));\n                                },\n                            })), delay(() => {\n                                let arg10_7;\n                                return singleton((arg10_7 = toList(delay(() => matchValue)), popoverBody()((x_7) => {\n                                    x_7.padding = input.Padding;\n                                    x_7.backgroundColor = \"gray.13\";\n                                    x_7.maxWidth = \"95vw\";\n                                    x_7.maxHeight = \"95vh\";\n                                    x_7.overflow = \"auto\";\n                                })(arg10_7)));\n                            }));\n                        })))), popoverContent()((x_5) => {\n                            x_5.width = \"auto\";\n                            x_5.border = \"0\";\n                            x_5.borderRadius = \"0\";\n                        })(arg10_5)));\n                    }\n                }\n            }));\n        })), popover()((x_1) => {\n            x_1.closeOnBlur = true;\n            x_1.autoFocus = true;\n            x_1.defaultIsOpen = true;\n            x_1.initialFocusRef = initialFocusRef;\n            x_1.isOpen = disclosure.isOpen;\n            x_1.onOpen = disclosure.onOpen;\n            x_1.onClose = (() => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                disclosure.onClose();\n                return Promise.resolve();\n            })));\n            input.Props(x_1);\n        })(arg10_2)));\n        return box()((_arg1) => {\n        })(arg10_1);\n    }\n}\n\n","import { useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\nimport { singleton, empty, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { iconButton, box, icon } from \"../Bindings/Chakra.fs.js\";\nimport * as bs from \"react-icons/bs\";\nimport { ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { CustomPopover } from \"./Popover.fs.js\";\n\nexport function Hint(hintInputProps) {\n    const props = hintInputProps.props;\n    const props_1 = useReact_useMemo_CF4EA67(() => JS_newObj(props), [props]);\n    const input = {\n        Body: (tupledArg) => toList(delay(() => {\n            let matchValue, copyOfStruct, hintTitle, arg10_1;\n            return append((matchValue = ((copyOfStruct = props_1, copyOfStruct.hintTitle)), (matchValue == null) ? ((empty())) : ((hintTitle = matchValue, singleton((arg10_1 = ofArray([icon()((x_3) => {\n                x_3.as = bs.BsQuestionCircle;\n                x_3.marginTop = \"-3px\";\n                x_3.marginRight = \"5px\";\n                x_3.color = \"heliotrope\";\n            })([]), hintTitle]), box()((x_2) => {\n                x_2.paddingBottom = \"12px\";\n                x_2.fontSize = \"15px\";\n            })(arg10_1)))))), delay(() => {\n                let copyOfStruct_1;\n                return singleton((copyOfStruct_1 = props_1, copyOfStruct_1.hint));\n            }));\n        })),\n        Props: (_arg1) => {\n        },\n        Trigger: iconButton()((x_1) => {\n            x_1.border = \"0\";\n            x_1.color = \"heliotrope\";\n            x_1.marginLeft = \"3px\";\n            x_1.marginTop = \"-2px\";\n            x_1.padding = \"2px\";\n            x_1.minWidth = \"0\";\n            x_1.width = \"auto\";\n            x_1.height = \"auto\";\n            const x = x_1;\n            x.icon = react.createElement(bs.BsQuestionCircle, void 0);\n            x.marginLeft = \"4px\";\n            x.marginTop = \"-5px\";\n        })([]),\n    };\n    return createElement(CustomPopover, {\n        Body: input.Body,\n        CloseButton: true,\n        Padding: \"10px\",\n        Props: input.Props,\n        RenderOnHover: false,\n        Trigger: input.Trigger,\n    });\n}\n\n","import { FSharpRef, toString, Union } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { union_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_darkMode } from \"../State.fs.js\";\nimport { useReact_useEffect_Z101E1A95, useFeliz_React__React_useState_Static_1505, useReact_useRef_1505, useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\nimport { value as value_12, some, ofNullable, map, defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { useCallback, Hooks_useAtomFieldOptions } from \"../Bindings/Store.fs.js\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { Browser_Types_Event__Event_get_Value } from \"../../.fable/Fable.React.7.4.1/Fable.React.Extensions.fs.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Hint as Hint_2 } from \"./Hint.fs.js\";\nimport { box, stack, input as input_2, textarea, flex } from \"../Bindings/Chakra.fs.js\";\nimport { empty } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { tryParse } from \"../../.fable/fable-library.3.2.7/Double.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as fa from \"react-icons/fa\";\n\nexport class InputFormat extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Date\", \"Time\", \"DateTime\", \"Email\", \"Password\", \"Number\"];\n    }\n}\n\nexport function InputFormat$reflection() {\n    return union_type(\"Fluke.UI.Frontend.Components.Input.InputFormat\", [], InputFormat, () => [[], [], [], [], [], []]);\n}\n\nexport function Input(input) {\n    const darkMode = Jotai_jotaiUtils.useAtomValue(Atoms_darkMode);\n    const patternInput = useReact_useMemo_CF4EA67(() => [JS_newObj(input.Props), JS_newObj(input.CustomProps)], [input.CustomProps, input.Props]);\n    const props = patternInput[0];\n    const customProps = patternInput[1];\n    const inputFallbackRef = useReact_useRef_1505(null);\n    const inputRef = useReact_useMemo_CF4EA67(() => defaultArg(map((x) => x, ofNullable(props.ref)), inputFallbackRef), [props.ref, inputFallbackRef]);\n    const atomFieldOptions = Hooks_useAtomFieldOptions(customProps.atom, customProps.inputScope);\n    const patternInput_1 = useFeliz_React__React_useState_Static_1505(false);\n    const setMounted = patternInput_1[1];\n    const mounted = patternInput_1[0];\n    const patternInput_2 = useReact_useMemo_CF4EA67(() => {\n        let value_5, matchValue_4;\n        let value_3;\n        const matchValue = [mounted, customProps.fixedValue];\n        if (matchValue[1] == null) {\n            if (matchValue[0]) {\n                const matchValue_1 = [inputRef.current, atomFieldOptions.AtomValue];\n                if (equals(matchValue_1[0], null)) {\n                    value_3 = (void 0);\n                }\n                else if (equals(matchValue_1[1], null)) {\n                    const matchValue_2 = customProps.onValidate;\n                    value_3 = ((matchValue_2 == null) ? (void 0) : matchValue_2([inputRef.current.value, some(atomFieldOptions.AtomValue)]));\n                }\n                else {\n                    const matchValue_3 = customProps.atom;\n                    value_3 = ((matchValue_3 == null) ? (void 0) : some(atomFieldOptions.AtomValue));\n                }\n            }\n            else {\n                value_3 = (void 0);\n            }\n        }\n        else {\n            value_3 = some(value_12(matchValue[1]));\n        }\n        return [value_3, (value_3 != null) ? ((!equals(value_12(value_3), null)) ? ((value_5 = value_12(value_3), (matchValue_4 = customProps.onFormat, (matchValue_4 == null) ? toString(value_5) : matchValue_4(value_5)))) : \"\") : \"\"];\n    }, [mounted, customProps.fixedValue, customProps.onValidate, customProps.onFormat, customProps.atom, inputRef, atomFieldOptions.AtomValue]);\n    const currentValueString = patternInput_2[1];\n    const currentValue = patternInput_2[0];\n    const fireChange = useCallback((_arg3, _arg2, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        void inputRef.current.dispatchEvent(new Event(\"change\", {\n            bubbles: true,\n        }));\n        return Promise.resolve();\n    })), [inputRef]);\n    useReact_useEffect_Z101E1A95(() => {\n        if (equals(inputRef.current, null)) {\n        }\n        else {\n            inputRef.current.value = currentValueString;\n            if (props.autoFocus ? ((!mounted) ? true : customProps.autoFocusOnAllMounts) : false) {\n                const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    inputRef.current.focus();\n                    return Promise.resolve();\n                }));\n                pr.then();\n            }\n            if (!mounted) {\n                setMounted(true);\n                if (customProps.atom != null) {\n                    const pr_1 = fireChange();\n                    pr_1.then();\n                }\n            }\n        }\n    }, [fireChange, props, customProps, inputRef, currentValueString, mounted, setMounted]);\n    const onChange = useCallback((_arg5, _arg4, e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (((!equals(inputRef.current, null)) ? (!equals(e.target, null)) : false) ? ((equals(props.onChange, null) ? ((Promise.resolve())) : (props.onChange(e).then((() => (Promise.resolve(undefined)))))).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let validValue_1;\n        const matchValue_11 = customProps.onValidate;\n        validValue_1 = ((matchValue_11 == null) ? some(Browser_Types_Event__Event_get_Value(e)) : matchValue_11([Browser_Types_Event__Event_get_Value(e), currentValue]));\n        let validValueString;\n        if (validValue_1 == null) {\n            validValueString = \"\";\n        }\n        else {\n            const validValue_2 = value_12(validValue_1);\n            const matchValue_12 = customProps.onFormat;\n            validValueString = ((matchValue_12 == null) ? toString(validValue_2) : matchValue_12(validValue_2));\n        }\n        return ((validValueString !== currentValueString) ? ((inputRef.current.value = validValueString, Promise.resolve())) : (Promise.resolve())).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            if (customProps.atom != null) {\n                if (validValue_1 == null) {\n                    atomFieldOptions.SetAtomValue(atomFieldOptions.ReadOnlyValue);\n                    return Promise.resolve();\n                }\n                else {\n                    atomFieldOptions.SetAtomValue(value_12(validValue_1));\n                    return Promise.resolve();\n                }\n            }\n            else {\n                return Promise.resolve();\n            }\n        }));\n    }))) : (Promise.resolve())))), [props, atomFieldOptions, currentValue, currentValueString, inputRef, customProps.onFormat, customProps.onValidate, customProps.atom]);\n    const arg10 = toList(delay(() => {\n        let input_1, arg10_1;\n        return append(equals(props.label, null) ? singleton(Helpers_nothing) : singleton((input_1 = {\n            Hint: customProps.hint,\n            HintTitle: customProps.hintTitle,\n            Label: props.label,\n            Props: (_arg6) => {\n            },\n        }, (arg10_1 = toList(delay(() => append(singleton(input_1.Label), delay(() => {\n            const matchValue_14 = input_1.Hint;\n            if (matchValue_14 == null) {\n                return singleton(Helpers_nothing);\n            }\n            else {\n                const hint = matchValue_14;\n                return singleton(createElement(Hint_2, {\n                    props: (x_2) => {\n                        let matchValue_15;\n                        x_2.hint = hint;\n                        x_2.hintTitle = ((matchValue_15 = input_1.HintTitle, (matchValue_15 == null) ? input_1.Label : matchValue_15));\n                    },\n                }));\n            }\n        })))), flex()(input_1.Props)(arg10_1)))), delay(() => {\n            let arg10_2;\n            return singleton((arg10_2 = toList(delay(() => {\n                let clo0_3, clo0_4;\n                return append(singleton((customProps.textarea ? ((clo0_3 = textarea(), (arg00_3) => {\n                    const clo1_3 = clo0_3(arg00_3);\n                    return (arg10_3) => clo1_3(arg10_3);\n                })) : ((clo0_4 = input_2(), (arg00_4) => {\n                    const clo1_4 = clo0_4(arg00_4);\n                    return (arg10_4) => clo1_4(arg10_4);\n                })))((x_4) => {\n                    let matchValue_18, inputFormat;\n                    x_4.onChange = onChange;\n                    x_4.ref = inputRef;\n                    x_4._focus = JS_newObj((x_5) => {\n                        let copyOfStruct = x_5;\n                        copyOfStruct.borderColor = \"heliotrope\";\n                    });\n                    x_4.borderColor = (darkMode ? \"#484848\" : \"#b7b7b7\");\n                    if (customProps.textarea) {\n                        x_4.paddingTop = \"6px\";\n                    }\n                    x_4.onKeyDown = ((e_1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => ((equals(props.onKeyDown, null) ? ((Promise.resolve())) : (props.onKeyDown(e_1).then((() => (Promise.resolve(undefined)))))).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const matchValue_17 = customProps.onEnterPress;\n                        if (matchValue_17 == null) {\n                            return Promise.resolve();\n                        }\n                        else {\n                            const onEnterPress = matchValue_17;\n                            return (e_1.key === \"Enter\") ? (onEnterPress().then((() => (Promise.resolve(undefined))))) : (Promise.resolve());\n                        }\n                    }))))));\n                    x_4.type = ((matchValue_18 = customProps.inputFormat, (matchValue_18 == null) ? null : ((inputFormat = matchValue_18, (inputFormat.tag === 1) ? \"time\" : ((inputFormat.tag === 5) ? \"number\" : ((inputFormat.tag === 2) ? \"datetime-local\" : ((inputFormat.tag === 3) ? \"email\" : ((inputFormat.tag === 4) ? \"password\" : \"date\"))))))));\n                    input.Props(x_4);\n                })(empty())), delay(() => {\n                    let cmp, cmp_4;\n                    let rightButton_1;\n                    const matchValue_19 = [customProps.rightButton, customProps.inputFormat];\n                    let pattern_matching_result, rightButton;\n                    if (matchValue_19[0] != null) {\n                        pattern_matching_result = 0;\n                        rightButton = matchValue_19[0];\n                    }\n                    else if (matchValue_19[1] != null) {\n                        if (matchValue_19[1].tag === 5) {\n                            pattern_matching_result = 1;\n                        }\n                        else {\n                            pattern_matching_result = 2;\n                        }\n                    }\n                    else {\n                        pattern_matching_result = 2;\n                    }\n                    switch (pattern_matching_result) {\n                        case 0: {\n                            rightButton_1 = rightButton;\n                            break;\n                        }\n                        case 1: {\n                            const numberButtonClick = (value_8, op) => {\n                                let matchValue_23;\n                                let matchValue_20;\n                                let outArg = 0;\n                                matchValue_20 = [tryParse(value_8, new FSharpRef(() => outArg, (v) => {\n                                    outArg = v;\n                                })), outArg];\n                                if (matchValue_20[0]) {\n                                    const value_9 = matchValue_20[1];\n                                    const matchValue_21 = customProps.onValidate;\n                                    if (matchValue_21 == null) {\n                                        inputRef.current.valueAsNumber = op(value_9);\n                                    }\n                                    else {\n                                        const matchValue_22 = matchValue_21([op(value_9).toString(), currentValue]);\n                                        if (matchValue_22 == null) {\n                                        }\n                                        else {\n                                            const value_10 = value_12(matchValue_22);\n                                            inputRef.current.valueAsNumber = ((matchValue_23 = customProps.onFormat, (matchValue_23 == null) ? value_10 : matchValue_23(value_10)));\n                                        }\n                                    }\n                                }\n                            };\n                            rightButton_1 = react.createElement(react.Fragment, {}, createElement(Button, {\n                                Children: [],\n                                Hint: void 0,\n                                Icon: [(cmp = fa.FaSortUp, () => react.createElement(cmp, void 0)), new IconPosition(0)],\n                                Props: (x_6) => {\n                                    x_6.height = \"50%\";\n                                    x_6.paddingTop = \"6px\";\n                                    x_6.borderRadius = \"0 5px 0 0\";\n                                    x_6.minWidth = \"26px\";\n                                    x_6.onClick = ((_arg7) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                        numberButtonClick(inputRef.current.value, (y) => (1 + y));\n                                        return fireChange().then((() => (Promise.resolve(undefined))));\n                                    })));\n                                },\n                            }), createElement(Button, {\n                                Children: [],\n                                Hint: void 0,\n                                Icon: [(cmp_4 = fa.FaSortDown, () => react.createElement(cmp_4, void 0)), new IconPosition(0)],\n                                Props: (x_8) => {\n                                    x_8.height = \"50%\";\n                                    x_8.paddingBottom = \"6px\";\n                                    x_8.borderRadius = \"0 0 5px 0\";\n                                    x_8.minWidth = \"26px\";\n                                    x_8.onClick = ((_arg8) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                        numberButtonClick(inputRef.current.value, (n) => (n - 1));\n                                        return fireChange().then((() => (Promise.resolve(undefined))));\n                                    })));\n                                },\n                            }));\n                            break;\n                        }\n                        case 2: {\n                            rightButton_1 = (void 0);\n                            break;\n                        }\n                    }\n                    if (rightButton_1 != null) {\n                        const rightButton_2 = rightButton_1;\n                        return singleton(stack()((x_9) => {\n                            x_9.position = \"absolute\";\n                            x_9.right = \"1px\";\n                            x_9.top = \"1px\";\n                            x_9.bottom = \"2px\";\n                            x_9.borderLeftWidth = \"1px\";\n                            x_9.borderLeftColor = (darkMode ? \"#484848\" : \"#b7b7b7\");\n                            x_9.spacing = \"1px\";\n                        })([rightButton_2]));\n                    }\n                    else {\n                        return singleton(Helpers_nothing);\n                    }\n                }));\n            })), box()((x_3) => {\n                x_3.position = \"relative\";\n                x_3.flex = \"1\";\n            })(arg10_2)));\n        }));\n    }));\n    return stack()((x_1) => {\n        x_1.spacing = \"5px\";\n        x_1.flex = \"1\";\n    })(arg10);\n}\n\n","import { useFeliz_React__React_useState_Static_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_darkMode } from \"../State.fs.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Tooltip } from \"./Tooltip.fs.js\";\nimport { flex, box } from \"../Bindings/Chakra.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\n\nexport function Dropdown(input) {\n    const patternInput = useFeliz_React__React_useState_Static_1505(false);\n    const visible = patternInput[0];\n    const setVisible = patternInput[1];\n    const darkMode = Jotai_jotaiUtils.useAtomValue(Atoms_darkMode);\n    const arg10 = toList(delay(() => {\n        let label, children;\n        return append(singleton((label = input.Tooltip, (children = [input.Trigger(visible, setVisible)], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children) : createElement(Tooltip, {\n            props: (x_1) => {\n                x_1.label = label;\n            },\n            wrapperProps: (_arg1) => {\n            },\n            children: children,\n        })))), delay(() => {\n            let arg10_1;\n            return (!visible) ? singleton(Helpers_nothing) : singleton((arg10_1 = toList(delay(() => input.Body(() => {\n                setVisible(false);\n            }))), box()((x_2) => {\n                x_2.flex = \"1\";\n                x_2.flexDirection = \"column\";\n                x_2.marginTop = \"-1px\";\n                if (input.Left) {\n                    x_2.borderLeftWidth = \"1px\";\n                }\n                else {\n                    x_2.borderRightWidth = \"1px\";\n                }\n                x_2.borderBottomWidth = \"1px\";\n                x_2.borderColor = \"whiteAlpha.200\";\n                const n = darkMode ? \"255\" : \"0\";\n                x_2.background = toText(interpolate(\"linear-gradient(\\n                                    180deg,\\n                                    rgba(%P(),%P(),%P(),0) 0%%,\\n                                    rgba(%P(),%P(),%P(),0.01) 20%%,\\n                                    rgba(%P(),%P(),%P(),0.02) 100%%);\", [n, n, n, n, n, n, n, n, n]));\n                x_2.padding = \"17px\";\n            })(arg10_1)));\n        }));\n    }));\n    return flex()((x) => {\n        x.direction = \"column\";\n    })(arg10);\n}\n\n","import { SketchPicker } from \"react-color\";\nimport * as react from \"react\";\n\nconst sketchPicker = SketchPicker;\n\nexport function render(props) {\n    return react.createElement(sketchPicker, {\n        color: props.color,\n        onChange: props.onChange,\n        width: \"calc(100% - 19px)\",\n    });\n}\n\n","import { useChangePassword } from \"../Hooks/Auth.fs.js\";\nimport { stack, box, useToast } from \"../Bindings/Chakra.fs.js\";\nimport { useFeliz_React__React_useState_Static_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Dropdown } from \"./Dropdown.fs.js\";\nimport { InputFormat, Input } from \"./Input.fs.js\";\nimport { Browser_Types_Event__Event_get_Value } from \"../../.fable/Fable.React.7.4.1/Fable.React.Extensions.fs.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as fi from \"react-icons/fi\";\nimport { ofArray, singleton } from \"../../.fable/fable-library.3.2.7/List.js\";\n\nexport function ChangeUserPasswordButton() {\n    const changePassword = useChangePassword();\n    const toast = useToast();\n    const patternInput = useFeliz_React__React_useState_Static_1505(\"\");\n    const setPasswordField = patternInput[1];\n    const passwordField = patternInput[0];\n    const patternInput_1 = useFeliz_React__React_useState_Static_1505(\"\");\n    const setNewPasswordField = patternInput_1[1];\n    const newPasswordField = patternInput_1[0];\n    const patternInput_2 = useFeliz_React__React_useState_Static_1505(\"\");\n    const setNewPassword2Field = patternInput_2[1];\n    const newPassword2Field = patternInput_2[0];\n    const confirmClick = useCallback((_arg3, _arg2, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        if (newPasswordField !== newPassword2Field) {\n            toast((x) => {\n                x.description = \"Passwords don\\u0027t match\";\n            });\n            return Promise.resolve(false);\n        }\n        else {\n            return changePassword([passwordField, newPasswordField]).then(((_arg1_1) => {\n                if (_arg1_1.tag === 1) {\n                    toast((x_2) => {\n                        x_2.description = _arg1_1.fields[0];\n                    });\n                    return Promise.resolve(false);\n                }\n                else {\n                    toast((x_1) => {\n                        x_1.title = \"Success\";\n                        x_1.status = \"success\";\n                        x_1.description = \"Password changed successfully\";\n                    });\n                    setPasswordField(\"\");\n                    setNewPasswordField(\"\");\n                    setNewPassword2Field(\"\");\n                    return Promise.resolve(true);\n                }\n            }));\n        }\n    })), [newPasswordField, newPassword2Field, setNewPasswordField, setNewPassword2Field, setPasswordField, passwordField, changePassword, toast]);\n    return createElement(Dropdown, {\n        Body: (onHide) => {\n            let arg10, arg10_2, cmp_4;\n            return singleton((arg10 = ofArray([box()((x_5) => {\n                x_5.paddingBottom = \"5px\";\n                x_5.fontSize = \"15px\";\n            })([\"Change Password\"]), createElement(Input, {\n                CustomProps: (x_6) => {\n                    x_6.fixedValue = passwordField;\n                    x_6.inputFormat = (new InputFormat(4));\n                },\n                Props: (x_7) => {\n                    x_7.autoFocus = true;\n                    x_7.placeholder = \"Password\";\n                    x_7.onChange = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        setPasswordField(Browser_Types_Event__Event_get_Value(e));\n                        return Promise.resolve();\n                    })));\n                },\n            }), createElement(Input, {\n                CustomProps: (x_8) => {\n                    x_8.fixedValue = newPasswordField;\n                    x_8.inputFormat = (new InputFormat(4));\n                },\n                Props: (x_9) => {\n                    x_9.placeholder = \"New Password\";\n                    x_9.onChange = ((e_1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        setNewPasswordField(Browser_Types_Event__Event_get_Value(e_1));\n                        return Promise.resolve();\n                    })));\n                },\n            }), createElement(Input, {\n                CustomProps: (x_10) => {\n                    x_10.fixedValue = newPassword2Field;\n                    x_10.inputFormat = (new InputFormat(4));\n                    x_10.onEnterPress = ((_arg5) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (confirmClick().then(((_arg2_1) => {\n                        if (_arg2_1) {\n                            onHide();\n                            return Promise.resolve();\n                        }\n                        else {\n                            return Promise.resolve();\n                        }\n                    }))))));\n                },\n                Props: (x_11) => {\n                    x_11.placeholder = \"Confirm New Password\";\n                    x_11.onChange = ((e_2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        setNewPassword2Field(Browser_Types_Event__Event_get_Value(e_2));\n                        return Promise.resolve();\n                    })));\n                },\n            }), (arg10_2 = singleton(createElement(Button, {\n                Children: [\"Confirm\"],\n                Hint: void 0,\n                Icon: [(cmp_4 = fi.FiKey, () => react.createElement(cmp_4, void 0)), new IconPosition(0)],\n                Props: (x_12) => {\n                    x_12.onClick = ((_arg7) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (confirmClick().then(((_arg3_1) => {\n                        if (_arg3_1) {\n                            onHide();\n                            return Promise.resolve();\n                        }\n                        else {\n                            return Promise.resolve();\n                        }\n                    }))))));\n                },\n            })), box()((_arg6) => {\n            })(arg10_2))]), stack()((x_4) => {\n                x_4.spacing = \"10px\";\n            })(arg10)));\n        },\n        Left: true,\n        Tooltip: \"\",\n        Trigger: (visible, setVisible) => {\n            let cmp;\n            return createElement(Button, {\n                Children: [\"Change Password\"],\n                Hint: void 0,\n                Icon: [(cmp = (visible ? fi.FiChevronUp : fi.FiChevronDown), () => react.createElement(cmp, void 0)), new IconPosition(1)],\n                Props: (x_3) => {\n                    x_3.onClick = ((_arg4) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        setVisible(!visible);\n                        return Promise.resolve();\n                    })));\n                },\n            });\n        },\n    });\n}\n\n","import { createElement } from \"react\";\nimport * as react from \"react\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as fi from \"react-icons/fi\";\nimport { box } from \"../Bindings/Chakra.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\n\nexport function DropdownMenuButton(input) {\n    let cmp;\n    return createElement(Button, {\n        Children: [input.Label],\n        Hint: void 0,\n        Icon: [input.Checked ? ((cmp = fi.FiCheck, () => react.createElement(cmp, void 0))) : (() => box()((x) => {\n            x.width = \"11px\";\n        })([])), new IconPosition(0)],\n        Props: (x_1) => {\n            x_1.onClick = ((_arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (input.OnClick().then((() => (Promise.resolve(undefined))))))));\n            x_1.alignSelf = \"stretch\";\n            x_1.backgroundColor = \"whiteAlpha.100\";\n            x_1.borderRadius = \"2px\";\n        },\n    });\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_darkMode } from \"../State.fs.js\";\nimport { singleton, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { checkbox, box } from \"../Bindings/Chakra.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\n\nexport function Checkbox(checkboxInputProps) {\n    const props = checkboxInputProps.props;\n    const label = checkboxInputProps.label;\n    const darkMode = Jotai_jotaiUtils.useAtomValue(Atoms_darkMode);\n    const arg10 = toList(delay(() => {\n        if (label != null) {\n            const label_1 = label;\n            return singleton(box()((x_1) => {\n                x_1.fontSize = \"main\";\n            })([label_1]));\n        }\n        else {\n            return singleton(Helpers_nothing);\n        }\n    }));\n    return checkbox()((x) => {\n        x.colorScheme = \"purple\";\n        x.borderColor = (darkMode ? \"#484848\" : \"#b7b7b7\");\n        x.size = \"lg\";\n        props(x);\n    })(arg10);\n}\n\n","import { useState } from \"../Bindings/Store.fs.js\";\nimport { createElement } from \"react\";\nimport { Checkbox } from \"./Checkbox.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\n\nexport function CheckboxInput(input) {\n    const patternInput = useState()(input.Atom);\n    const value = patternInput[0];\n    return createElement(Checkbox, {\n        label: input.Label,\n        props: (x) => {\n            x.isChecked = value;\n            x.onChange = ((_arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                patternInput[1](!value);\n                return Promise.resolve();\n            })));\n            input.Props(x);\n        },\n    });\n}\n\n","import { useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\nimport { Hooks_useAtomFieldOptions } from \"../Bindings/Store.fs.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { compare, equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { flex, box, iconButton } from \"../Bindings/Chakra.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport * as fa from \"react-icons/fa\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { indexed, map, mapIndexed, equalsWith, append as append_1 } from \"../../.fable/fable-library.3.2.7/Array.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { Tooltip } from \"./Tooltip.fs.js\";\nimport { ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { Hint } from \"./Hint.fs.js\";\nimport { Input } from \"./Input.fs.js\";\nimport { some } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { Browser_Types_Event__Event_get_Value } from \"../../.fable/Fable.React.7.4.1/Fable.React.Extensions.fs.js\";\nimport * as fi from \"react-icons/fi\";\n\nexport function InputList(inputListInputProps) {\n    let copyOfStruct, copyOfStruct_1;\n    const props = inputListInputProps.props;\n    const props_1 = useReact_useMemo_CF4EA67(() => JS_newObj(props), [props]);\n    const atomFieldOptions = Hooks_useAtomFieldOptions((copyOfStruct = props_1, copyOfStruct.atom), (copyOfStruct_1 = props_1, copyOfStruct_1.inputScope));\n    const arg10 = toList(delay(() => {\n        let copyOfStruct_2, input, Label, arg10_1, copyOfStruct_3, label, children_1, copyOfStruct_4, copyOfStruct_5, arg10_3;\n        return append(equals((copyOfStruct_2 = props_1, copyOfStruct_2.label), null) ? singleton(Helpers_nothing) : singleton((input = ((Label = ((arg10_1 = ofArray([(copyOfStruct_3 = props_1, copyOfStruct_3.label), (label = \"Add row\", (children_1 = [iconButton()((x_1) => {\n            x_1.border = \"0\";\n            x_1.color = \"heliotrope\";\n            x_1.marginLeft = \"3px\";\n            x_1.marginTop = \"-2px\";\n            x_1.padding = \"2px\";\n            x_1.minWidth = \"0\";\n            x_1.width = \"auto\";\n            x_1.height = \"auto\";\n            const x = x_1;\n            x.icon = react.createElement(fa.FaPlus, void 0);\n            x.marginLeft = \"5px\";\n            x.onClick = ((_arg3) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                atomFieldOptions.SetAtomValue(append_1([\"\"], atomFieldOptions.AtomValue));\n                return Promise.resolve();\n            })));\n        })([])], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_1) : createElement(Tooltip, {\n            props: (x_2) => {\n                x_2.label = label;\n            },\n            wrapperProps: (_arg1_1) => {\n            },\n            children: children_1,\n        })))]), box()((_arg2) => {\n        })(arg10_1))), {\n            Hint: (copyOfStruct_4 = props_1, copyOfStruct_4.hint),\n            HintTitle: (copyOfStruct_5 = props_1, copyOfStruct_5.hintTitle),\n            Label: Label,\n            Props: (x_3) => {\n                x_3.marginBottom = \"5px\";\n            },\n        })), (arg10_3 = toList(delay(() => append(singleton(input.Label), delay(() => {\n            const matchValue_1 = input.Hint;\n            if (matchValue_1 == null) {\n                return singleton(Helpers_nothing);\n            }\n            else {\n                const hint = matchValue_1;\n                return singleton(createElement(Hint, {\n                    props: (x_4) => {\n                        let matchValue_2;\n                        x_4.hint = hint;\n                        x_4.hintTitle = ((matchValue_2 = input.HintTitle, (matchValue_2 == null) ? input.Label : matchValue_2));\n                    },\n                }));\n            }\n        })))), flex()(input.Props)(arg10_3)))), delay(() => {\n            let copyOfStruct_6;\n            if (((copyOfStruct_6 = props_1, copyOfStruct_6.atom)) != null) {\n                let inputList_1;\n                const matchValue_4 = atomFieldOptions.AtomValue;\n                inputList_1 = (((!equalsWith((x_5, y) => compare(x_5, y), matchValue_4, null)) ? (matchValue_4.length === 0) : false) ? [\"\"] : matchValue_4);\n                return mapIndexed((i, value) => {\n                    const arg10_4 = toList(delay(() => append(singleton(createElement(Input, {\n                        CustomProps: (x_7) => {\n                            x_7.fixedValue = some(value);\n                        },\n                        Props: (x_8) => {\n                            x_8.onChange = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                atomFieldOptions.SetAtomValue(mapIndexed((i$0027, v) => {\n                                    if (i$0027 === i) {\n                                        return Browser_Types_Event__Event_get_Value(e);\n                                    }\n                                    else {\n                                        return v;\n                                    }\n                                }, atomFieldOptions.AtomValue));\n                                return Promise.resolve();\n                            })));\n                        },\n                    })), delay(() => {\n                        let label_1, children_4;\n                        return (inputList_1.length === 1) ? singleton(Helpers_nothing) : singleton((label_1 = \"Remove row\", (children_4 = [iconButton()((x_10) => {\n                            x_10.border = \"0\";\n                            x_10.color = \"heliotrope\";\n                            x_10.marginLeft = \"3px\";\n                            x_10.marginTop = \"-2px\";\n                            x_10.padding = \"2px\";\n                            x_10.minWidth = \"0\";\n                            x_10.width = \"auto\";\n                            x_10.height = \"auto\";\n                            const x_9 = x_10;\n                            x_9.icon = react.createElement(fi.FiMinus, void 0);\n                            x_9.onClick = ((_arg5) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                atomFieldOptions.SetAtomValue(map((tuple) => tuple[1], indexed(atomFieldOptions.AtomValue).filter((tupledArg) => (tupledArg[0] !== i))));\n                                return Promise.resolve();\n                            })));\n                            x_9.position = \"absolute\";\n                            x_9.right = \"5px\";\n                            x_9.top = \"50%\";\n                            x_9.transform = \"translate(0, -50%)\";\n                            x_9.margin = \"0\";\n                        })([])], equals(label_1, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_4) : createElement(Tooltip, {\n                            props: (x_11) => {\n                                x_11.label = label_1;\n                            },\n                            wrapperProps: (_arg1_2) => {\n                            },\n                            children: children_4,\n                        }))));\n                    }))));\n                    return box()((x_6) => {\n                        x_6.position = \"relative\";\n                    })(arg10_4);\n                }, inputList_1);\n            }\n            else {\n                return singleton(Helpers_nothing);\n            }\n        }));\n    }));\n    return box()((_arg1) => {\n    })(arg10);\n}\n\n","import { Atoms_gunPeers, InputAtom$1, useState } from \"../Bindings/Store.fs.js\";\nimport { Atoms_systemUiFont, Atoms_darkMode, Atoms_fontSize, Atoms_cellSize, Atoms_daysAfter, Atoms_daysBefore, Atoms_sessionBreakDuration, Atoms_sessionDuration, Atoms_dayStart, TextKey, Atoms_accordionFlag, Atoms_debug, Atoms_color, Atoms_weekStart } from \"../State.fs.js\";\nimport { Jotai_AtomReference$1, Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Accordion } from \"./Accordion.fs.js\";\nimport { InputFormat, Input } from \"./Input.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { minute as minute_3, hour as hour_1, parse, tryParse, minValue } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { FSharpRef } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { FlukeTime, Minute, Hour } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { comparePrimitives, int32ToString } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { String_parseIntMin } from \"../../../Fluke.Shared/Core.fs.js\";\nimport { Dropdown } from \"./Dropdown.fs.js\";\nimport { render } from \"../Bindings/ColorPicker.fs.js\";\nimport { sortBy, ofArray, singleton } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as io5 from \"react-icons/io5\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { stack, box } from \"../Bindings/Chakra.fs.js\";\nimport { ChangeUserPasswordButton } from \"./ChangeUserPasswordButton.fs.js\";\nimport { map, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { DropdownMenuButton } from \"./DropdownMenuButton.fs.js\";\nimport { getEnumValues, enum_type, int32_type, getEnumName } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { CheckboxInput } from \"./CheckboxInput.fs.js\";\nimport { JS_window } from \"../Bindings/JS.fs.js\";\nimport { InputList } from \"./InputList.fs.js\";\n\nexport function Settings(settingsInputProps) {\n    let arg10, arg10_2, arg10_5;\n    const props = settingsInputProps.props;\n    const patternInput = useState()(Atoms_weekStart);\n    const weekStart = patternInput[0] | 0;\n    const patternInput_1 = useState()(Atoms_color);\n    const color = patternInput_1[0];\n    const debug = Jotai_jotaiUtils.useAtomValue(Atoms_debug);\n    return createElement(Accordion, {\n        Atom: Atoms_accordionFlag(new TextKey(0, \"Settings\")),\n        Items: ofArray([[\"User\", (arg10 = ofArray([createElement(Input, {\n            CustomProps: (x_1) => {\n                x_1.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_dayStart)));\n                x_1.inputFormat = (new InputFormat(1));\n                x_1.onFormat = ((arg00_1) => {\n                    const _arg1 = arg00_1;\n                    return toText(interpolate(\"%02d%P():%02d%P()\", [_arg1.Hour.fields[0], _arg1.Minute.fields[0]]));\n                });\n                x_1.onValidate = ((arg_3) => {\n                    let date, _arg1_1, outArg;\n                    return (date = ((_arg1_1 = ((outArg = minValue(), [tryParse(arg_3[0], new FSharpRef(() => outArg, (v) => {\n                        outArg = v;\n                    })), outArg])), _arg1_1[0] ? _arg1_1[1] : parse(\"00:00\"))), new FlukeTime(new Hour(0, hour_1(date)), new Minute(0, minute_3(date))));\n                });\n            },\n            Props: (x_2) => {\n                x_2.label = \"Day Start\";\n                x_2.alignSelf = \"flex-start\";\n                x_2.placeholder = \"00:00\";\n            },\n        }), createElement(Input, {\n            CustomProps: (x_3) => {\n                x_3.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_sessionDuration)));\n                x_3.inputFormat = (new InputFormat(5));\n                x_3.onFormat = ((arg_4) => int32ToString(arg_4.fields[0]));\n                x_3.onValidate = ((arg_8) => (new Minute(0, defaultArg(String_parseIntMin(1, arg_8[0]), 1))));\n            },\n            Props: (x_4) => {\n                x_4.label = \"Session Duration\";\n            },\n        }), createElement(Input, {\n            CustomProps: (x_5) => {\n                x_5.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_sessionBreakDuration)));\n                x_5.inputFormat = (new InputFormat(5));\n                x_5.onFormat = ((arg_9) => int32ToString(arg_9.fields[0]));\n                x_5.onValidate = ((arg_13) => (new Minute(0, defaultArg(String_parseIntMin(1, arg_13[0]), 1))));\n            },\n            Props: (x_6) => {\n                x_6.label = \"Session Break Duration\";\n            },\n        }), createElement(Dropdown, {\n            Body: (_onHide) => singleton(render({\n                color: defaultArg(color, \"\"),\n                onChange: (color_1) => {\n                    patternInput_1[1](color_1.hex.toLocaleUpperCase());\n                },\n            })),\n            Left: false,\n            Tooltip: \"\",\n            Trigger: (visible, setVisible) => {\n                const arg10_1 = singleton(createElement(Input, {\n                    CustomProps: (x_8) => {\n                        let cmp;\n                        x_8.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_color)));\n                        x_8.rightButton = createElement(Button, {\n                            Children: [],\n                            Hint: void 0,\n                            Icon: [(cmp = io5.IoCaretDown, () => react.createElement(cmp, void 0)), new IconPosition(0)],\n                            Props: (x_9) => {\n                                x_9.borderRadius = \"0 5px 5px 0\";\n                                x_9.right = \"0\";\n                                x_9.top = \"0\";\n                                x_9.bottom = \"0\";\n                                x_9.minWidth = \"26px\";\n                                x_9.onClick = ((_arg1_4) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                    setVisible(!visible);\n                                    return Promise.resolve();\n                                })));\n                            },\n                        });\n                    },\n                    Props: (x_10) => {\n                        x_10.label = \"Color\";\n                        x_10.color = defaultArg(color, \"\");\n                        x_10.fontWeight = \"bold\";\n                        x_10.isReadOnly = true;\n                    },\n                }));\n                return box()((x_7) => {\n                    x_7.position = \"relative\";\n                })(arg10_1);\n            },\n        }), createElement(ChangeUserPasswordButton, null)]), stack()((x) => {\n            x.spacing = \"10px\";\n        })(arg10))], [\"View\", (arg10_2 = ofArray([createElement(Dropdown, {\n            Body: (onHide) => {\n                let arg10_4;\n                return singleton((arg10_4 = toList(delay(() => map((dayOfWeek) => createElement(DropdownMenuButton, {\n                    Checked: weekStart === dayOfWeek,\n                    Label: getEnumName(enum_type(\"System.DayOfWeek\", int32_type, [[\"Sunday\", 0], [\"Monday\", 1], [\"Tuesday\", 2], [\"Wednesday\", 3], [\"Thursday\", 4], [\"Friday\", 5], [\"Saturday\", 6]]), dayOfWeek),\n                    OnClick: () => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        patternInput[1](dayOfWeek);\n                        onHide();\n                        return Promise.resolve();\n                    })),\n                }), sortBy((arg_14) => {\n                    const x_17 = arg_14 | 0;\n                    if (weekStart >= x_17) {\n                        return (x_17 * x_17) | 0;\n                    }\n                    else {\n                        return x_17 | 0;\n                    }\n                }, ofArray(getEnumValues(enum_type(\"System.DayOfWeek\", int32_type, [[\"Sunday\", 0], [\"Monday\", 1], [\"Tuesday\", 2], [\"Wednesday\", 3], [\"Thursday\", 4], [\"Friday\", 5], [\"Saturday\", 6]]))), {\n                    Compare: (x_18, y) => comparePrimitives(x_18, y),\n                })))), stack()((x_16) => {\n                    x_16.flex = \"1\";\n                    x_16.spacing = \"1px\";\n                    x_16.padding = \"1px\";\n                    x_16.marginBottom = \"6px\";\n                    x_16.maxHeight = \"217px\";\n                    x_16.overflowY = \"auto\";\n                    x_16.flexBasis = 0;\n                })(arg10_4)));\n            },\n            Left: false,\n            Tooltip: \"\",\n            Trigger: (visible_1, setVisible_1) => {\n                const arg10_3 = singleton(createElement(Input, {\n                    CustomProps: (x_13) => {\n                        let cmp_4;\n                        x_13.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_weekStart)));\n                        x_13.onFormat = ((value_7) => getEnumName(enum_type(\"System.DayOfWeek\", int32_type, [[\"Sunday\", 0], [\"Monday\", 1], [\"Tuesday\", 2], [\"Wednesday\", 3], [\"Thursday\", 4], [\"Friday\", 5], [\"Saturday\", 6]]), value_7));\n                        x_13.rightButton = createElement(Button, {\n                            Children: [],\n                            Hint: void 0,\n                            Icon: [(cmp_4 = io5.IoCaretDown, () => react.createElement(cmp_4, void 0)), new IconPosition(0)],\n                            Props: (x_14) => {\n                                x_14.borderRadius = \"0 5px 5px 0\";\n                                x_14.right = \"0\";\n                                x_14.top = \"0\";\n                                x_14.bottom = \"0\";\n                                x_14.minWidth = \"26px\";\n                                x_14.onClick = ((_arg2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                    setVisible_1(!visible_1);\n                                    return Promise.resolve();\n                                })));\n                            },\n                        });\n                    },\n                    Props: (x_15) => {\n                        x_15.label = \"Week Start\";\n                        x_15.isReadOnly = true;\n                    },\n                }));\n                return box()((x_12) => {\n                    x_12.position = \"relative\";\n                })(arg10_3);\n            },\n        }), createElement(Input, {\n            CustomProps: (x_19) => {\n                x_19.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_daysBefore)));\n                x_19.inputFormat = (new InputFormat(5));\n            },\n            Props: (x_20) => {\n                x_20.label = \"Days Before\";\n            },\n        }), createElement(Input, {\n            CustomProps: (x_21) => {\n                x_21.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_daysAfter)));\n                x_21.inputFormat = (new InputFormat(5));\n            },\n            Props: (x_22) => {\n                x_22.label = \"Days After\";\n            },\n        }), createElement(Input, {\n            CustomProps: (x_23) => {\n                x_23.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_cellSize)));\n                x_23.inputFormat = (new InputFormat(5));\n            },\n            Props: (x_24) => {\n                x_24.label = \"Cell Size\";\n            },\n        }), createElement(Input, {\n            CustomProps: (x_25) => {\n                x_25.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_fontSize)));\n                x_25.inputFormat = (new InputFormat(5));\n            },\n            Props: (x_26) => {\n                x_26.label = \"Font Size\";\n            },\n        }), createElement(CheckboxInput, {\n            Atom: Atoms_darkMode,\n            Label: \"Dark Mode\",\n            Props: (x_27) => {\n                x_27.alignSelf = \"flex-start\";\n            },\n        }), createElement(CheckboxInput, {\n            Atom: Atoms_systemUiFont,\n            Label: \"System UI Font\",\n            Props: (x_28) => {\n                x_28.alignSelf = \"flex-start\";\n            },\n        }), createElement(CheckboxInput, {\n            Atom: Atoms_debug,\n            Label: \"Show Debug Information\",\n            Props: (x_29) => {\n                x_29.alignSelf = \"flex-start\";\n                x_29.onClick = ((_arg3) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    const matchValue = JS_window((x_30) => x_30);\n                    if (matchValue != null) {\n                        const window$ = matchValue;\n                        window$.Debug = (!debug);\n                        return Promise.resolve();\n                    }\n                    else {\n                        return Promise.resolve();\n                    }\n                })));\n            },\n        })]), stack()((x_11) => {\n            x_11.spacing = \"10px\";\n        })(arg10_2))], [\"Connection\", (arg10_5 = singleton(createElement(InputList, {\n            props: (x_32) => {\n                x_32.label = \"Gun peers\";\n                x_32.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_gunPeers)));\n            },\n        })), stack()((x_31) => {\n            x_31.spacing = \"10px\";\n        })(arg10_5))]]),\n        Props: props,\n    });\n}\n\n","import { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Tooltip } from \"./Tooltip.fs.js\";\nimport { delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { menu, menuList } from \"../Bindings/Chakra.fs.js\";\nimport * as react_1 from \"@chakra-ui/react\";\nimport { ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\n\nexport function Menu(input) {\n    let label, children, arg10_1;\n    const arg10 = ofArray([(label = input.Tooltip, (children = [input.Trigger], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children) : createElement(Tooltip, {\n        props: (x_1) => {\n            x_1.label = label;\n        },\n        wrapperProps: (_arg1) => {\n        },\n        children: children,\n    }))), (arg10_1 = toList(delay(() => input.Body)), menuList()((x_2) => {\n        x_2.as = react_1.Stack;\n        x_2.spacing = \"2px\";\n        x_2.backgroundColor = \"gray.13\";\n        input.MenuListProps(x_2);\n    })(arg10_1))]);\n    return menu()((x) => {\n        x.isLazy = true;\n        x.closeOnSelect = false;\n    })(arg10);\n}\n\n","import { stack, iconButton, box, menuItem } from \"../Bindings/Chakra.fs.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { class_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_UIFlag, Atoms_databaseIdSet, Atoms_UIFlagType, Atoms_uiFlag, Atoms_rightDock, Atoms_leftDock, Selectors_Database_isReadWrite, Selectors_deviceInfo } from \"../State.fs.js\";\nimport { useExportDatabase } from \"../Hooks/Hydrate.fs.js\";\nimport { createElement } from \"react\";\nimport * as react_1 from \"react\";\nimport { Menu } from \"./Menu.fs.js\";\nimport * as react from \"@chakra-ui/react\";\nimport * as bs from \"react-icons/bs\";\nimport { empty, singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { DockType } from \"../TempUI.fs.js\";\nimport { Task, Scheduling as Scheduling_1, ManualScheduling, Information as Information_1, Area, AreaName, TaskName, TaskId } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport * as fi from \"react-icons/fi\";\nimport * as bi from \"react-icons/bi\";\nimport { CustomPopover } from \"./Popover.fs.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport { remove } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { ofArray, singleton as singleton_1 } from \"../../.fable/fable-library.3.2.7/List.js\";\n\nexport function MenuItem_MenuItem(menuItem_MenuItemInputProps) {\n    const props = menuItem_MenuItemInputProps.props;\n    const fn = menuItem_MenuItemInputProps.fn;\n    const label = menuItem_MenuItemInputProps.label;\n    const icon = menuItem_MenuItemInputProps.icon;\n    return menuItem()((x) => {\n        x.closeOnSelect = true;\n        x.paddingLeft = \"15px\";\n        x.paddingRight = \"10px\";\n        x.paddingTop = \"5px\";\n        x.paddingBottom = \"5px\";\n        x._hover = JS_newObj((x_1) => {\n            let copyOfStruct = x_1;\n            copyOfStruct.backgroundColor = \"gray.10\";\n        });\n        x.icon = box()((x_3) => {\n            const x_2 = x_3;\n            x_2.fontSize = \"13px\";\n            x_2.marginBottom = \"-1px\";\n            x_3.as = icon;\n        })([]);\n        x.onClick = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (fn().then((() => {\n            e.preventDefault();\n            return Promise.resolve();\n        }))))));\n        props(x);\n    })([label]);\n}\n\nexport class DatabaseNodeMenu {\n    constructor() {\n    }\n}\n\nexport function DatabaseNodeMenu$reflection() {\n    return class_type(\"Fluke.UI.Frontend.Components.DatabaseNodeMenu\", void 0, DatabaseNodeMenu);\n}\n\nexport function DatabaseNodeMenu_$ctor() {\n    return new DatabaseNodeMenu();\n}\n\nexport function DatabaseNodeMenu_DatabaseNodeMenu_Z63772A98(databaseNodeMenu_DatabaseNodeMenu_Z63772A98InputProps) {\n    let Trigger;\n    const disabled = databaseNodeMenu_DatabaseNodeMenu_Z63772A98InputProps.disabled;\n    const databaseId = databaseNodeMenu_DatabaseNodeMenu_Z63772A98InputProps.databaseId;\n    const deviceInfo = Jotai_jotaiUtils.useAtomValue(Selectors_deviceInfo);\n    const isReadWrite = Jotai_jotaiUtils.useAtomValue(Selectors_Database_isReadWrite(databaseId));\n    const setLeftDock = Jotai_jotaiUtils.useUpdateAtom(Atoms_leftDock);\n    const setRightDock = Jotai_jotaiUtils.useUpdateAtom(Atoms_rightDock);\n    const setDatabaseUIFlag = Jotai_jotaiUtils.useUpdateAtom(Atoms_uiFlag(new Atoms_UIFlagType(0)));\n    const setTaskUIFlag = Jotai_jotaiUtils.useUpdateAtom(Atoms_uiFlag(new Atoms_UIFlagType(2)));\n    const exportDatabase = useExportDatabase();\n    let setDatabaseIdSet;\n    const setter = Jotai_jotaiUtils.useUpdateAtom(Atoms_databaseIdSet);\n    setDatabaseIdSet = ((value) => {\n        setter(value);\n    });\n    return createElement(Menu, (Trigger = iconButton()((x_1) => {\n        x_1.border = \"0\";\n        x_1.color = \"heliotrope\";\n        x_1.marginLeft = \"3px\";\n        x_1.marginTop = \"-2px\";\n        x_1.padding = \"2px\";\n        x_1.minWidth = \"0\";\n        x_1.width = \"auto\";\n        x_1.height = \"auto\";\n        const x = x_1;\n        x.as = react.MenuButton;\n        x.icon = react_1.createElement(bs.BsThreeDots, void 0);\n        x.fontSize = \"11px\";\n        x.disabled = disabled;\n        x.marginLeft = \"6px\";\n    })([]), {\n        Body: toList(delay(() => append(isReadWrite ? append(singleton(createElement(MenuItem_MenuItem, {\n            icon: bs.BsPlus,\n            label: \"Add Task\",\n            fn: () => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => ((deviceInfo.IsMobile ? ((setLeftDock(void 0), Promise.resolve())) : (Promise.resolve())).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                let tupledArg;\n                setRightDock(new DockType(4));\n                setTaskUIFlag((tupledArg = [databaseId, (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_1(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_1(0, new ManualScheduling(1)), void 0)).Id], new Atoms_UIFlag(3, tupledArg[0], tupledArg[1])));\n                return Promise.resolve();\n            }))))),\n            props: (_arg1) => {\n            },\n        })), delay(() => append(singleton(createElement(MenuItem_MenuItem, {\n            icon: bs.BsPen,\n            label: \"Edit Database\",\n            fn: () => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => ((deviceInfo.IsMobile ? ((setLeftDock(void 0), Promise.resolve())) : (Promise.resolve())).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                setRightDock(new DockType(2));\n                setDatabaseUIFlag(new Atoms_UIFlag(1, databaseId));\n                return Promise.resolve();\n            }))))),\n            props: (_arg2) => {\n            },\n        })), delay(() => append(singleton(createElement(MenuItem_MenuItem, {\n            icon: fi.FiCopy,\n            label: \"Clone Database\",\n            fn: () => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                return Promise.resolve();\n            })),\n            props: (x_2) => {\n                x_2.isDisabled = true;\n            },\n        })), delay(() => singleton(createElement(MenuItem_MenuItem, {\n            icon: bi.BiExport,\n            label: \"Export Database\",\n            fn: () => exportDatabase(databaseId),\n            props: (_arg3) => {\n            },\n        })))))))) : empty(), delay(() => singleton(createElement(CustomPopover, {\n            Body: (tupledArg_1) => {\n                let arg10_1, arg10_2, arg10_4, cmp_3;\n                return singleton_1((arg10_1 = singleton_1((arg10_2 = ofArray([box()((x_6) => {\n                    x_6.paddingBottom = \"5px\";\n                    x_6.marginRight = \"24px\";\n                    x_6.fontSize = \"15px\";\n                })([\"Delete Database\"]), (arg10_4 = singleton_1(createElement(Button, {\n                    Children: [\"Confirm\"],\n                    Hint: void 0,\n                    Icon: [(cmp_3 = bi.BiTrash, () => react_1.createElement(cmp_3, void 0)), new IconPosition(0)],\n                    Props: (x_7) => {\n                        x_7.ref = tupledArg_1[1];\n                        x_7.onClick = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            setDatabaseIdSet((set$) => remove(databaseId, set$));\n                            tupledArg_1[0].onClose();\n                            e.preventDefault();\n                            return Promise.resolve();\n                        })));\n                    },\n                })), box()((_arg5) => {\n                })(arg10_4))]), stack()((x_5) => {\n                    x_5.spacing = \"10px\";\n                })(arg10_2))), box()((_arg4) => {\n                })(arg10_1)));\n            },\n            CloseButton: true,\n            Padding: \"10px\",\n            Props: (x_3) => {\n                x_3.closeOnBlur = false;\n            },\n            RenderOnHover: true,\n            Trigger: createElement(MenuItem_MenuItem, {\n                icon: bi.BiTrash,\n                label: \"Delete Database\",\n                fn: () => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    return Promise.resolve();\n                })),\n                props: (x_4) => {\n                    x_4.closeOnSelect = false;\n                },\n            }),\n        })))))),\n        MenuListProps: (_arg6) => {\n        },\n        Tooltip: \"\",\n        Trigger: Trigger,\n    }));\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_username } from \"../Bindings/Store.fs.js\";\nimport { Atoms_Database_position, Atoms_Database_sharedWith, Atoms_Database_owner } from \"../State.fs.js\";\nimport { useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { templatesUser } from \"../../../Fluke.Shared/Templates.fs.js\";\nimport { append, empty, singleton, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { isEmpty, singleton as singleton_1, exists, empty as empty_1, map } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { stack, box, icon } from \"../Bindings/Chakra.fs.js\";\nimport * as fa from \"react-icons/fa\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Tooltip } from \"./Tooltip.fs.js\";\nimport { join, interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport * as hi from \"react-icons/hi\";\nimport * as bs from \"react-icons/bs\";\n\nexport function DatabaseLeafIcon(databaseLeafIconInputProps) {\n    const databaseId = databaseLeafIconInputProps.databaseId;\n    const username = Jotai_jotaiUtils.useAtomValue(Atoms_username);\n    const owner = Jotai_jotaiUtils.useAtomValue(Atoms_Database_owner(databaseId));\n    const sharedWith = Jotai_jotaiUtils.useAtomValue(Atoms_Database_sharedWith(databaseId));\n    const position = Jotai_jotaiUtils.useAtomValue(Atoms_Database_position(databaseId));\n    const patternInput = useReact_useMemo_CF4EA67(() => {\n        let matchValue, username_2;\n        const newSharedWith = equals(owner, templatesUser.Username) ? toList(delay(() => {\n            if (username != null) {\n                return singleton(username);\n            }\n            else {\n                return empty();\n            }\n        })) : ((sharedWith.tag === 1) ? map((tuple) => tuple[0], sharedWith.fields[0]) : empty_1());\n        return [newSharedWith, (matchValue = [username, sharedWith], (matchValue[1].tag === 0) ? false : ((matchValue[0] != null) ? ((username_2 = matchValue[0], !exists((share) => (!equals(share, username_2)), newSharedWith))) : true))];\n    }, [username, owner, sharedWith]);\n    const newSharedWith_1 = patternInput[0];\n    const arg10 = toList(delay(() => {\n        let label_1, children_2, arg10_4, label, arg10_1, children, arg10_2;\n        return append(patternInput[1] ? singleton((label_1 = \"Private\", (children_2 = [(arg10_4 = singleton_1(icon()((x_3) => {\n            x_3.as = fa.FaUserShield;\n            x_3.color = \"_green\";\n            x_3.marginLeft = \"-3px\";\n        })([])), box()((_arg3) => {\n        })(arg10_4))], equals(label_1, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_2) : createElement(Tooltip, {\n            props: (x_4) => {\n                x_4.label = label_1;\n            },\n            wrapperProps: (_arg1_2) => {\n            },\n            children: children_2,\n        })))) : singleton((label = ((arg10_1 = toList(delay(() => append(singleton(toText(interpolate(\"Owner: %P()\", [owner.fields[0]]))), delay(() => append(singleton(react.createElement(\"br\", {})), delay(() => ((!isEmpty(newSharedWith_1)) ? singleton(toText(interpolate(\"Shared with: %P()\", [join(\", \", map((arg00_3) => arg00_3.fields[0], newSharedWith_1))]))) : empty()))))))), box()((_arg1) => {\n        })(arg10_1))), (children = [(arg10_2 = singleton_1(icon()((x_1) => {\n            x_1.as = hi.HiUsers;\n            x_1.color = \"_orange\";\n            x_1.marginLeft = \"-3px\";\n        })([])), box()((_arg2_2) => {\n        })(arg10_2))], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children) : createElement(Tooltip, {\n            props: (x_2) => {\n                x_2.label = label;\n            },\n            wrapperProps: (_arg1_1) => {\n            },\n            children: children,\n        })))), delay(() => {\n            let label_3, children_6, arg10_8, label_2, _arg7, _arg6, _arg1_3, children_4, arg10_6;\n            return (position == null) ? singleton((label_3 = \"Live Database\", (children_6 = [(arg10_8 = singleton_1(icon()((x_7) => {\n                x_7.as = bs.BsPlayFill;\n                x_7.color = \"_green\";\n                x_7.marginLeft = \"-3px\";\n            })([])), box()((_arg5) => {\n            })(arg10_8))], equals(label_3, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_6) : createElement(Tooltip, {\n                props: (x_8) => {\n                    x_8.label = label_3;\n                },\n                wrapperProps: (_arg1_5) => {\n                },\n                children: children_6,\n            })))) : singleton((label_2 = toText(interpolate(\"Database paused at position %P()\", [(_arg7 = position, toText(interpolate(\"%P() %P()\", [(_arg6 = _arg7.Date, toText(interpolate(\"%d%P()-%02d%P()-%02d%P()\", [_arg6.Year.fields[0], _arg6.Month, _arg6.Day.fields[0]]))), (_arg1_3 = _arg7.Time, toText(interpolate(\"%02d%P():%02d%P()\", [_arg1_3.Hour.fields[0], _arg1_3.Minute.fields[0]])))])))])), (children_4 = [(arg10_6 = singleton_1(icon()((x_5) => {\n                x_5.as = bs.BsPauseFill;\n                x_5.color = \"_orange\";\n                x_5.marginLeft = \"-3px\";\n            })([])), box()((_arg4) => {\n            })(arg10_6))], equals(label_2, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_4) : createElement(Tooltip, {\n                props: (x_6) => {\n                    x_6.label = label_2;\n                },\n                wrapperProps: (_arg1_4) => {\n                },\n                children: children_4,\n            }))));\n        }));\n    }));\n    return stack()((x) => {\n        x.display = \"inline\";\n        x.spacing = \"4px\";\n        x.direction = \"row\";\n    })(arg10);\n}\n\n","import * as react$002Dcheckbox$002Dtree from \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport react$002Dcheckbox$002Dtree_1 from \"react-checkbox-tree\";\nimport * as react from \"react\";\n\n\nconst checkboxTree = react$002Dcheckbox$002Dtree_1;\n\nexport function render(props) {\n    return react.createElement(checkboxTree, props);\n}\n\n","import { stack, flex, box, icon as icon_1 } from \"../Bindings/Chakra.fs.js\";\nimport * as md from \"react-icons/md\";\nimport * as fa from \"react-icons/fa\";\nimport * as fi from \"react-icons/fi\";\nimport { Union, Record } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { int32_type, list_type, union_type, record_type, string_type, class_type, obj_type, bool_type, option_type, array_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { map as map_1, equalsWith } from \"../../.fable/fable-library.3.2.7/Array.js\";\nimport { comparePrimitives, safeHash, stringHash, equals, compare } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { empty as empty_2, map as map_2, item, singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { cons, sortBy, filter, toArray, ofArray, tail as tail_1, head as head_2, isEmpty, take, tryItem, mapIndexed, collect, item as item_1, map, empty, singleton as singleton_1 } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { DatabaseNodeMenu_DatabaseNodeMenu_Z63772A98 } from \"./DatabaseNodeMenu.fs.js\";\nimport { Database, DatabaseAccess, DatabaseName, DatabaseId as DatabaseId_1 } from \"../../../Fluke.Shared/Domain/State.fs.js\";\nimport { Username } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { Tooltip } from \"./Tooltip.fs.js\";\nimport { List_groupBy } from \"../../.fable/fable-library.3.2.7/Seq2.js\";\nimport { defaultArgWith, map as map_4, defaultArg, value as value_3 } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { getTextGuidHash } from \"../Bindings/Crypto.fs.js\";\nimport { interpolate, toText, split, replace, isNullOrWhiteSpace, join } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { waitForAll, useState, Atoms_isTesting, Atoms_username } from \"../Bindings/Store.fs.js\";\nimport { Atoms_selectedDatabaseIdSet, Atoms_databaseIdSet, Selectors_Database_database, Atoms_expandedDatabaseIdSet, Atoms_hideTemplates } from \"../State.fs.js\";\nimport { useReact_useMemo_CF4EA67, useReact_useEffect_Z101E1A95, useReact_useRef_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { ofSeq as ofSeq_1, toArray as toArray_1, FSharpSet__get_IsEmpty, exists, map as map_5, toList as toList_1, empty as empty_1 } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { tryFind, map as map_3, ofSeq } from \"../../.fable/fable-library.3.2.7/Map.js\";\nimport { templatesUser } from \"../../../Fluke.Shared/Templates.fs.js\";\nimport { DatabaseLeafIcon } from \"./DatabaseLeafIcon.fs.js\";\nimport { parse, newGuid } from \"../../.fable/fable-library.3.2.7/Guid.js\";\nimport { JS_window } from \"../Bindings/JS.fs.js\";\nimport { render } from \"../Bindings/CheckboxTree.fs.js\";\n\nexport const icons = (() => {\n    const check = icon_1()((x) => {\n        x.as = md.MdCheckBox;\n        x.tabIndex = 0;\n        x.marginLeft = \"-41px\";\n        x.marginRight = \"2px\";\n        x.height = \"19px\";\n        x.width = \"19px\";\n        x.color = \"gray.87\";\n    })([]);\n    const halfCheck = icon_1()((x_1) => {\n        x_1.as = md.MdIndeterminateCheckBox;\n        x_1.tabIndex = 0;\n        x_1.marginLeft = \"-41px\";\n        x_1.marginRight = \"2px\";\n        x_1.height = \"19px\";\n        x_1.width = \"19px\";\n        x_1.color = \"gray.87\";\n    })([]);\n    const uncheck = icon_1()((x_2) => {\n        x_2.as = md.MdCheckBoxOutlineBlank;\n        x_2.tabIndex = 0;\n        x_2.marginLeft = \"-41px\";\n        x_2.marginRight = \"2px\";\n        x_2.height = \"19px\";\n        x_2.width = \"19px\";\n        x_2.color = \"gray.87\";\n    })([]);\n    const expandOpen = icon_1()((x_3) => {\n        x_3.as = fa.FaChevronDown;\n        x_3.height = \"16px\";\n        x_3.width = \"16px\";\n        x_3.fontSize = \"14px\";\n        x_3.color = \"gray.87\";\n    })([]);\n    return {\n        check: check,\n        expandClose: icon_1()((x_4) => {\n            x_4.as = fa.FaChevronRight;\n            x_4.height = \"16px\";\n            x_4.width = \"16px\";\n            x_4.fontSize = \"14px\";\n            x_4.color = \"gray.87\";\n        })([]),\n        expandOpen: expandOpen,\n        halfCheck: halfCheck,\n        parentClose: icon_1()((x_5) => {\n            x_5.as = fi.FiDatabase;\n            x_5.marginLeft = \"-11px\";\n            x_5.color = \"gray.87\";\n        })([]),\n        parentOpen: icon_1()((x_6) => {\n            x_6.as = fi.FiDatabase;\n            x_6.marginLeft = \"-11px\";\n            x_6.color = \"gray.87\";\n        })([]),\n        uncheck: uncheck,\n    };\n})();\n\nexport class CheckboxTreeNode extends Record {\n    constructor(children, disabled, icon, label, value) {\n        super();\n        this.children = children;\n        this.disabled = disabled;\n        this.icon = icon;\n        this.label = label;\n        this.value = value;\n    }\n}\n\nexport function CheckboxTreeNode$reflection() {\n    return record_type(\"Fluke.UI.Frontend.Components.Databases.CheckboxTreeNode\", [], CheckboxTreeNode, () => [[\"children\", option_type(array_type(CheckboxTreeNode$reflection()))], [\"disabled\", bool_type], [\"icon\", obj_type], [\"label\", class_type(\"Fable.React.ReactElement\")], [\"value\", string_type]]);\n}\n\nexport function node(input) {\n    let label_2, children, arg10_1;\n    const disabled = input.Disabled ? true : (input.Value === \"\");\n    const labelText = equalsWith((x, y) => compare(x, y), input.Children, void 0) ? (input.Label.match((new RegExp(\"^(.*? )([^ ]+)$\")))) : (void 0);\n    return new CheckboxTreeNode(input.Children, input.IsEmptyNode ? true : disabled, input.IsEmptyNode ? box()((x_1) => {\n        x_1.marginLeft = \"-10px\";\n        x_1.height = \"10px\";\n    })([]) : input.Icon, (label_2 = (input.Disabled ? \"There are databases selected with a different position\" : Helpers_nothing), (children = [(arg10_1 = toList(delay(() => {\n        let arg10_2;\n        return append(singleton((arg10_2 = toList(delay(() => ((labelText != null) ? singleton(item(1, labelText)) : singleton(input.Label)))), box()((x_3) => {\n            x_3.fontSize = \"main\";\n            x_3.paddingTop = \"1px\";\n            x_3.paddingBottom = \"1px\";\n            x_3.marginLeft = ((input.DatabaseId == null) ? \"2px\" : null);\n            x_3.display = \"inline\";\n        })(arg10_2))), delay(() => {\n            let matchValue, databaseId, arg10_3;\n            return append((matchValue = input.DatabaseId, (matchValue != null) ? ((databaseId = matchValue, singleton((arg10_3 = toList(delay(() => {\n                let arg10_4;\n                return append((labelText == null) ? singleton(Helpers_nothing) : singleton((arg10_4 = singleton_1(item(2, labelText)), box()((x_5) => {\n                    x_5.display = \"inline\";\n                })(arg10_4))), delay(() => singleton(createElement(DatabaseNodeMenu_DatabaseNodeMenu_Z63772A98, {\n                    databaseId: databaseId,\n                    disabled: disabled,\n                }))));\n            })), box()((x_4) => {\n                x_4.display = \"inline\";\n                x_4.fontSize = \"main\";\n                x_4.visibility = (equals(databaseId, (new Database(new DatabaseId_1(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Id) ? \"hidden\" : \"visible\");\n                x_4.whiteSpace = \"nowrap\";\n            })(arg10_3))))) : singleton(Helpers_nothing)), delay(() => {\n                const matchValue_1 = [input.IsEmptyNode, input.DatabaseId];\n                let pattern_matching_result;\n                if (matchValue_1[1] != null) {\n                    pattern_matching_result = 0;\n                }\n                else if (matchValue_1[0]) {\n                    pattern_matching_result = 0;\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        return singleton(box()((x_6) => {\n                            x_6.height = \"14px\";\n                        })([]));\n                    }\n                    case 1: {\n                        return singleton(Helpers_nothing);\n                    }\n                }\n            }));\n        }));\n    })), box()((x_2) => {\n        x_2.display = \"inline\";\n        x_2.marginLeft = \"-2px\";\n        x_2.lineHeight = \"19px\";\n    })(arg10_1))], equals(label_2, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children) : createElement(Tooltip, {\n        props: (x_7) => {\n            x_7.label = label_2;\n        },\n        wrapperProps: (_arg1) => {\n        },\n        children: children,\n    }))), input.Value);\n}\n\nexport class NodeValue extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Empty\", \"Parent\", \"Leaf\"];\n    }\n}\n\nexport function NodeValue$reflection() {\n    return union_type(\"Fluke.UI.Frontend.Components.Databases.NodeValue\", [], NodeValue, () => [[], [[\"Item\", class_type(\"System.Guid\")]], [[\"Item\", class_type(\"System.Guid\")]]]);\n}\n\nexport class Node$ extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Node\"];\n    }\n}\n\nexport function Node$$reflection() {\n    return union_type(\"Fluke.UI.Frontend.Components.Databases.Node\", [], Node$, () => [[[\"value\", NodeValue$reflection()], [\"label\", string_type], [\"children\", list_type(Node$$reflection())], [\"index\", option_type(int32_type)]]]);\n}\n\nexport function buildNodesFromPath(ids, paths) {\n    const groupNodes = (nodes) => map((tupledArg) => {\n        const nodes_1 = tupledArg[1];\n        const patternInput = item_1(0, nodes_1);\n        return new Node$(0, patternInput.fields[0], tupledArg[0], groupNodes(collect((_arg2) => _arg2.fields[2], nodes_1)), patternInput.fields[3]);\n    }, List_groupBy((_arg1) => _arg1.fields[1], nodes, {\n        Equals: (x, y) => (x === y),\n        GetHashCode: (x) => stringHash(x),\n    }));\n    return groupNodes(mapIndexed((i, nodes_2) => {\n        const loop = (depth, list_4) => {\n            let matchValue, id;\n            let pattern_matching_result, head, head_1, tail;\n            if (!isEmpty(list_4)) {\n                let activePatternResult42539;\n                const str_1 = head_2(list_4);\n                activePatternResult42539 = ((str_1 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_1) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_1))));\n                if (activePatternResult42539.tag === 0) {\n                    if (isEmpty(tail_1(list_4))) {\n                        pattern_matching_result = 0;\n                        head = activePatternResult42539.fields[0];\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                        head_1 = activePatternResult42539.fields[0];\n                        tail = tail_1(list_4);\n                    }\n                }\n                else {\n                    pattern_matching_result = 2;\n                }\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    return new Node$(0, (matchValue = tryItem(i, ids), (matchValue != null) ? ((value_3(matchValue) != null) ? ((id = value_3(matchValue), new NodeValue(2, id))) : (new NodeValue(0))) : (new NodeValue(0))), head, empty(), i);\n                }\n                case 1: {\n                    return new Node$(0, new NodeValue(1, getTextGuidHash(join(\"/\", take(depth, nodes_2)))), head_1, singleton_1(loop(depth + 1, tail)), void 0);\n                }\n                case 2: {\n                    return new Node$(0, new NodeValue(0), \"\", empty(), void 0);\n                }\n            }\n        };\n        return loop(1, nodes_2);\n    }, map((path) => ofArray(map_1((str) => replace(str, \"|||\", \"/\"), split(replace(path, \"\\\\/\", \"|||\"), [\"/\"], null, 0))), paths)));\n}\n\nexport class NodeType extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Template\", \"Owned\", \"Shared\"];\n    }\n}\n\nexport function NodeType$reflection() {\n    return union_type(\"Fluke.UI.Frontend.Components.Databases.NodeType\", [], NodeType, () => [[], [], []]);\n}\n\nexport function Databases(databasesInputProps) {\n    let arg10_1;\n    const props = databasesInputProps.props;\n    const username = Jotai_jotaiUtils.useAtomValue(Atoms_username);\n    const isTesting = Jotai_jotaiUtils.useAtomValue(Atoms_isTesting);\n    const hideTemplates = Jotai_jotaiUtils.useAtomValue(Atoms_hideTemplates);\n    const hideTemplatesCache = useReact_useRef_1505(void 0);\n    const patternInput = useState()(Atoms_expandedDatabaseIdSet);\n    const setExpandedDatabaseIdSet = patternInput[1];\n    const expandedDatabaseIdSet = patternInput[0];\n    useReact_useEffect_Z101E1A95(() => {\n        const matchValue = [hideTemplates, hideTemplatesCache.current];\n        let pattern_matching_result;\n        if (matchValue[0]) {\n            if (matchValue[1] != null) {\n                if (matchValue[1]) {\n                    pattern_matching_result = 1;\n                }\n                else {\n                    pattern_matching_result = 0;\n                }\n            }\n            else {\n                pattern_matching_result = 0;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                setExpandedDatabaseIdSet(empty_1({\n                    Compare: (x, y) => compare(x, y),\n                }));\n                break;\n            }\n        }\n        hideTemplatesCache.current = hideTemplates;\n    }, [setExpandedDatabaseIdSet, hideTemplates, hideTemplatesCache]);\n    const databaseList = Jotai_jotaiUtils.useAtomValue(waitForAll(toArray(map(Selectors_Database_database, toList_1(Jotai_jotaiUtils.useAtomValue(Atoms_databaseIdSet))))));\n    const databaseMap = useReact_useMemo_CF4EA67(() => ofSeq(map_2((database) => [database.Id, database], databaseList)), [databaseList]);\n    const patternInput_1 = useState()(Atoms_selectedDatabaseIdSet);\n    const setSelectedDatabaseIdSet = patternInput_1[1];\n    const selectedDatabaseIdSet = patternInput_1[0];\n    const patternInput_2 = useReact_useMemo_CF4EA67(() => {\n        const filteredDatabaseMap = map_3((_arg2, v_1) => map((tuple_1) => tuple_1[1], v_1), ofSeq(List_groupBy((tuple) => tuple[0], filter((tupledArg) => {\n            if (!equals(tupledArg[0], new NodeType(0))) {\n                return true;\n            }\n            else {\n                return !hideTemplates;\n            }\n        }, map((database_1) => {\n            let matchValue_1;\n            return [(matchValue_1 = database_1.Owner, equals(matchValue_1, templatesUser.Username) ? (new NodeType(0)) : (equals(matchValue_1, username) ? (new NodeType(1)) : (new NodeType(2)))), database_1];\n        }, toList(map_2((_arg1) => _arg1[1], databaseMap)))), {\n            Equals: (x_1, y_1) => equals(x_1, y_1),\n            GetHashCode: (x_1) => safeHash(x_1),\n        })));\n        const nodeData = collect((nodeType_2) => {\n            const newDatabaseNameList = defaultArg(map_4((list_6) => map((database_2) => [database_2, database_2.Name], list_6), tryFind(nodeType_2, filteredDatabaseMap)), singleton_1([void 0, new DatabaseName(0, \"None\")]));\n            const prefix = (nodeType_2.tag === 1) ? \"Created by me\" : ((nodeType_2.tag === 2) ? \"Shared with me\" : \"Templates\\\\/Unit Tests\");\n            return sortBy((tuple_2) => tuple_2[1], map((tupledArg_1) => [tupledArg_1[0], toText(interpolate(\"%P()/%P()\", [prefix, tupledArg_1[1].fields[0]]))], newDatabaseNameList), {\n                Compare: (x_2, y_2) => comparePrimitives(x_2, y_2),\n            });\n        }, toList(delay(() => append((!hideTemplates) ? singleton(new NodeType(0)) : empty_2(), delay(() => append(singleton(new NodeType(1)), delay(() => singleton(new NodeType(2)))))))));\n        const loop = (nodes_1) => {\n            if (isEmpty(nodes_1)) {\n                return empty();\n            }\n            else {\n                const value_1 = head_2(nodes_1).fields[0];\n                const index = head_2(nodes_1).fields[3];\n                const children = head_2(nodes_1).fields[2];\n                const nodeChildren = isEmpty(children) ? (void 0) : toArray(loop(children));\n                const database_4 = (index != null) ? item_1(index, nodeData)[0] : (void 0);\n                let icon;\n                if (database_4 != null) {\n                    const database_5 = database_4;\n                    icon = createElement(DatabaseLeafIcon, {\n                        databaseId: database_5.Id,\n                    });\n                }\n                else {\n                    icon = (void 0);\n                }\n                let disabled;\n                if (database_4 != null) {\n                    const database_6 = database_4;\n                    const validSelectedDatabases = map_5((databaseId) => tryFind(databaseId, databaseMap), selectedDatabaseIdSet, {\n                        Compare: (x_4, y_3) => compare(x_4, y_3),\n                    });\n                    const matchValue_2 = database_6.Position;\n                    if (matchValue_2 == null) {\n                        disabled = exists((_arg2_2) => {\n                            if (_arg2_2 == null) {\n                                return false;\n                            }\n                            else {\n                                return _arg2_2.Position != null;\n                            }\n                        }, validSelectedDatabases);\n                    }\n                    else {\n                        const position = matchValue_2;\n                        disabled = exists((_arg1_3) => {\n                            if (_arg1_3 == null) {\n                                return false;\n                            }\n                            else {\n                                const database_7 = _arg1_3;\n                                if (database_7.Position == null) {\n                                    return true;\n                                }\n                                else {\n                                    return !equals(database_7.Position, position);\n                                }\n                            }\n                        }, validSelectedDatabases);\n                    }\n                }\n                else {\n                    disabled = false;\n                }\n                const newValue = defaultArgWith(map_4((database_9) => database_9.Id.fields[0], database_4), () => defaultArgWith((value_1.tag === 1) ? value_1.fields[0] : ((value_1.tag === 2) ? value_1.fields[0] : (void 0)), () => (new DatabaseId_1(0, newGuid())).fields[0]));\n                const isEmptyNode = (value_1.tag === 0) ? true : false;\n                return cons(node({\n                    Children: nodeChildren,\n                    DatabaseId: map_4((database_10) => database_10.Id, database_4),\n                    Disabled: disabled,\n                    Icon: icon,\n                    IsEmptyNode: isEmptyNode,\n                    IsTesting: isTesting,\n                    Label: head_2(nodes_1).fields[1],\n                    Value: newValue,\n                }), loop(tail_1(nodes_1)));\n            }\n        };\n        const nodes_2 = toArray(loop(buildNodesFromPath(map((option_2) => map_4((x_3) => x_3.Id.fields[0], option_2), map((tuple_3) => tuple_3[0], nodeData)), map((tuple_4) => tuple_4[1], nodeData))));\n        return [nodes_2, map_1((arg00_5) => arg00_5.fields[0], FSharpSet__get_IsEmpty(expandedDatabaseIdSet) ? map_1((node_1) => (new DatabaseId_1(0, parse(node_1.value))), nodes_2) : toArray_1(expandedDatabaseIdSet)), map_1((arg00_6) => arg00_6.fields[0], toArray_1(selectedDatabaseIdSet))];\n    }, [databaseMap, hideTemplates, expandedDatabaseIdSet, selectedDatabaseIdSet, isTesting, username]);\n    const nodes_3 = patternInput_2[0];\n    const newSelectedDatabaseGuidArray_1 = patternInput_2[2];\n    const newExpandedDatabaseGuidArray_1 = patternInput_2[1];\n    const matchValue_3 = JS_window((x_5) => x_5);\n    if (matchValue_3 == null) {\n    }\n    else {\n        const window$ = matchValue_3;\n        window$.nodes = nodes_3;\n    }\n    const arg10 = singleton_1((arg10_1 = singleton_1(render(useReact_useMemo_CF4EA67(() => ({\n        checked: newSelectedDatabaseGuidArray_1,\n        expandOnClick: true,\n        expanded: newExpandedDatabaseGuidArray_1,\n        icons: icons,\n        nodes: nodes_3,\n        onCheck: (x_6) => {\n            setSelectedDatabaseIdSet(ofSeq_1(map_1((arg_1) => (new DatabaseId_1(0, parse(arg_1))), x_6), {\n                Compare: (x_7, y_4) => compare(x_7, y_4),\n            }));\n        },\n        onExpand: (x_8) => {\n            setExpandedDatabaseIdSet(ofSeq_1(map_1((arg_2) => (new DatabaseId_1(0, parse(arg_2))), x_8), {\n                Compare: (x_9, y_5) => compare(x_9, y_5),\n            }));\n        },\n        onlyLeafCheckboxes: true,\n    }), [newSelectedDatabaseGuidArray_1, newExpandedDatabaseGuidArray_1, setSelectedDatabaseIdSet, setExpandedDatabaseIdSet, nodes_3]))), flex()((x_10) => {\n        x_10.marginLeft = \"6px\";\n        x_10.flex = \"1\";\n    })(arg10_1)));\n    return stack()(props)(arg10);\n}\n\n","import { Union } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { union_type, string_type, class_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { stack, flex, iconButton, spacer, icon as icon_2 } from \"../Bindings/Chakra.fs.js\";\nimport { ofArray, map } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { createElement } from \"react\";\nimport * as react_1 from \"react\";\nimport { Menu } from \"./Menu.fs.js\";\nimport * as react from \"@chakra-ui/react\";\nimport * as fi from \"react-icons/fi\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { Tooltip } from \"./Tooltip.fs.js\";\n\nexport class DockPanelIcon extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Component\", \"Menu\"];\n    }\n}\n\nexport function DockPanelIcon$reflection() {\n    return union_type(\"Fluke.UI.Frontend.Components.DockPanel.DockPanelIcon\", [], DockPanelIcon, () => [[[\"cmp\", class_type(\"Fable.React.ReactElement\")]], [[\"title\", string_type], [\"icon\", class_type(\"Fable.React.ReactElement\")], [\"children\", class_type(\"System.Collections.Generic.IEnumerable`1\", [class_type(\"Fable.React.ReactElement\")])]]]);\n}\n\nexport function DockPanel(input) {\n    let arg10_1, arg10_6;\n    const setAtom = Jotai_jotaiUtils.useUpdateAtom(input.Atom);\n    const arg10 = ofArray([(arg10_1 = toList(delay(() => append(singleton(icon_2()((x_2) => {\n        x_2.as = input.Icon;\n        x_2.marginRight = \"6px\";\n    })([])), delay(() => append(singleton(input.Name), delay(() => append(singleton(spacer()((_arg1) => {\n    })([])), delay(() => append(map((icon) => {\n        let input_1;\n        if (icon.tag === 1) {\n            return createElement(Menu, {\n                Body: icon.fields[2],\n                MenuListProps: (_arg2) => {\n                },\n                Tooltip: icon.fields[0],\n                Trigger: (input_1 = {\n                    Props: (x_3) => {\n                        x_3.as = react.MenuButton;\n                        x_3.fontSize = \"14px\";\n                        x_3.icon = icon.fields[1];\n                    },\n                }, iconButton()((x_4) => {\n                    x_4.backgroundColor = \"transparent\";\n                    x_4.variant = \"outline\";\n                    x_4.border = \"0\";\n                    x_4.width = \"30px\";\n                    x_4.height = \"30px\";\n                    x_4.borderRadius = \"0\";\n                    x_4.textAlign = \"-webkit-center\";\n                    input_1.Props(x_4);\n                })([])),\n            });\n        }\n        else {\n            return icon.fields[0];\n        }\n    }, input.RightIcons), delay(() => {\n        let label, children_1, input_2;\n        return singleton((label = \"Hide\", (children_1 = [(input_2 = {\n            Props: (x_5) => {\n                x_5.icon = react_1.createElement(fi.FiMinus, void 0);\n                x_5.onClick = ((_arg3) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    setAtom(void 0);\n                    return Promise.resolve();\n                })));\n            },\n        }, iconButton()((x_6) => {\n            x_6.backgroundColor = \"transparent\";\n            x_6.variant = \"outline\";\n            x_6.border = \"0\";\n            x_6.width = \"30px\";\n            x_6.height = \"30px\";\n            x_6.borderRadius = \"0\";\n            x_6.textAlign = \"-webkit-center\";\n            input_2.Props(x_6);\n        })([]))], equals(label, Helpers_nothing) ? react_1.createElement(react_1.Fragment, {}, ...children_1) : createElement(Tooltip, {\n            props: (x_7) => {\n                x_7.label = label;\n            },\n            wrapperProps: (_arg1_1) => {\n            },\n            children: children_1,\n        }))));\n    })))))))))), flex()((x_1) => {\n        x_1.paddingLeft = \"9px\";\n        x_1.paddingTop = \"1px\";\n        x_1.paddingRight = \"1px\";\n        x_1.marginLeft = \"1px\";\n        x_1.borderBottomWidth = \"1px\";\n        x_1.borderBottomColor = \"gray.16\";\n        x_1.alignItems = \"center\";\n    })(arg10_1)), (arg10_6 = toList(delay(() => input.children)), flex()((x_8) => {\n        x_8.direction = \"column\";\n        x_8.flex = \"1\";\n    })(arg10_6))]);\n    return stack()((x) => {\n        x.spacing = \"0\";\n        x.overflow = \"hidden\";\n        x.flex = \"1\";\n    })(arg10);\n}\n\n","import { useState } from \"../Bindings/Store.fs.js\";\nimport { menuOptionGroup, menuItemOption } from \"../Bindings/Chakra.fs.js\";\nimport { singleton } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { empty, singleton as singleton_1, delay, toArray } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { contains } from \"../../.fable/fable-library.3.2.7/Array.js\";\nimport { stringHash } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\n\nexport function MenuItemToggle(menuItemToggleInputProps) {\n    const label = menuItemToggleInputProps.label;\n    const atom = menuItemToggleInputProps.atom;\n    const patternInput = useState()(atom);\n    const key = atom.toString();\n    const arg10 = singleton(menuItemOption()((x_2) => {\n        x_2.closeOnSelect = true;\n        x_2.value = key;\n        x_2.marginTop = \"2px\";\n        x_2.marginBottom = \"2px\";\n    })([label]));\n    return menuOptionGroup()((x) => {\n        x.type = \"checkbox\";\n        x.value = toArray(delay(() => (patternInput[0] ? singleton_1(key) : empty())));\n        x.onChange = ((checks) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            patternInput[1](contains(key, checks, {\n                Equals: (x_1, y) => (x_1 === y),\n                GetHashCode: (x_1) => stringHash(x_1),\n            }));\n            return Promise.resolve();\n        })));\n    })(arg10);\n}\n\n","import { useState } from \"../Bindings/Store.fs.js\";\nimport { button, icon } from \"../Bindings/Chakra.fs.js\";\nimport { ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\n\nexport function DockButton(input) {\n    const patternInput = useState()(input.Atom);\n    const atom = patternInput[0];\n    const arg10 = ofArray([icon()((x_1) => {\n        x_1.as = input.Icon;\n        x_1.marginRight = \"6px\";\n    })([]), input.Name]);\n    return button()((x) => {\n        x.height = \"100%\";\n        x.borderRadius = \"0\";\n        x.backgroundColor = (equals(atom, input.DockType) ? \"gray.10\" : \"transparent\");\n        x.fontWeight = \"inherit\";\n        x.fontSize = \"14px\";\n        x.fontFamily = \"inherit\";\n        x.onClick = ((_arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            const newAtomValue = equals(atom, input.DockType) ? (void 0) : input.DockType;\n            patternInput[1](newAtomValue);\n            return input.OnClick(newAtomValue).then((() => (Promise.resolve(undefined))));\n        })));\n        input.Props(x);\n    })(arg10);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { useState, Atoms_isTesting } from \"../Bindings/Store.fs.js\";\nimport { Atoms_hideTemplates, Atoms_UIFlag, Atoms_UIFlagType, Atoms_uiFlag, Selectors_deviceInfo, Atoms_rightDock, Atoms_leftDock } from \"../State.fs.js\";\nimport { React_suspense_Z3796A576, useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { DockType } from \"../TempUI.fs.js\";\nimport * as md from \"react-icons/md\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Settings } from \"./Settings.fs.js\";\nimport { singleton as singleton_1, length, mapIndexed, ofArray, empty } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport * as fi from \"react-icons/fi\";\nimport { Databases } from \"./Databases.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { flex, box, stack, iconButton } from \"../Bindings/Chakra.fs.js\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { Tooltip } from \"./Tooltip.fs.js\";\nimport { DockPanel, DockPanelIcon } from \"./DockPanel.fs.js\";\nimport * as bs from \"react-icons/bs\";\nimport { MenuItemToggle } from \"./MenuItemToggle.fs.js\";\nimport { tryFind, ofSeq } from \"../../.fable/fable-library.3.2.7/Map.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { DockButton } from \"./DockButton.fs.js\";\nimport { LoadingSpinner } from \"./LoadingSpinner.fs.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\n\nexport function LeftDock() {\n    const isTesting = Jotai_jotaiUtils.useAtomValue(Atoms_isTesting);\n    const patternInput = useState()(Atoms_leftDock);\n    const setLeftDock = patternInput[1];\n    const leftDock = patternInput[0];\n    const setRightDock = Jotai_jotaiUtils.useUpdateAtom(Atoms_rightDock);\n    const deviceInfo = Jotai_jotaiUtils.useAtomValue(Selectors_deviceInfo);\n    const setDatabaseUIFlag = Jotai_jotaiUtils.useUpdateAtom(Atoms_uiFlag(new Atoms_UIFlagType(0)));\n    const patternInput_1 = useReact_useMemo_CF4EA67(() => {\n        let Icon, Icon_1, label, children_1, input;\n        const items = ofArray([[new DockType(1), (Icon = md.MdSettings, {\n            Content: createElement(Settings, {\n                props: (x) => {\n                    x.flex = \"1\";\n                    x.overflowY = \"auto\";\n                    x.flexBasis = 0;\n                },\n            }),\n            Icon: Icon,\n            Name: \"Settings\",\n            RightIcons: empty(),\n        })], [new DockType(0), (Icon_1 = fi.FiDatabase, {\n            Content: createElement(Databases, {\n                props: (x_1) => {\n                    x_1.flex = \"1\";\n                    x_1.padding = \"10px\";\n                    x_1.paddingLeft = \"0\";\n                    x_1.paddingTop = \"3px\";\n                    x_1.overflowY = \"auto\";\n                    x_1.flexBasis = 0;\n                },\n            }),\n            Icon: Icon_1,\n            Name: \"Databases\",\n            RightIcons: ofArray([new DockPanelIcon(0, (label = \"Add Database\", (children_1 = [(input = {\n                Props: (x_2) => {\n                    if (isTesting) {\n                        x_2[\"data-testid\"] = \"Add Database\";\n                    }\n                    x_2.icon = react.createElement(fi.FiPlus, void 0);\n                    x_2.fontSize = \"17px\";\n                    x_2.onClick = ((_arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => ((deviceInfo.IsMobile ? ((setLeftDock(void 0), Promise.resolve())) : (Promise.resolve())).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        setRightDock(new DockType(2));\n                        setDatabaseUIFlag(new Atoms_UIFlag(0));\n                        return Promise.resolve();\n                    }))))));\n                },\n            }, iconButton()((x_3) => {\n                x_3.backgroundColor = \"transparent\";\n                x_3.variant = \"outline\";\n                x_3.border = \"0\";\n                x_3.width = \"30px\";\n                x_3.height = \"30px\";\n                x_3.borderRadius = \"0\";\n                x_3.textAlign = \"-webkit-center\";\n                input.Props(x_3);\n            })([]))], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_1) : createElement(Tooltip, {\n                props: (x_4) => {\n                    x_4.label = label;\n                },\n                wrapperProps: (_arg1_1) => {\n                },\n                children: children_1,\n            })))), new DockPanelIcon(1, \"Options\", react.createElement(bs.BsThreeDotsVertical, void 0), [createElement(MenuItemToggle, {\n                atom: Atoms_hideTemplates,\n                label: \"Hide Templates\",\n            })])]),\n        })]]);\n        return [items, ofSeq(items)];\n    }, [setLeftDock, setRightDock, deviceInfo, isTesting, setDatabaseUIFlag]);\n    const items_1 = patternInput_1[0];\n    const arg10_1 = toList(delay(() => {\n        let arg10_2, arg10_3;\n        return append(singleton((arg10_2 = singleton_1((arg10_3 = toList(delay(() => mapIndexed((i, tupledArg) => {\n            const item = tupledArg[1];\n            return createElement(DockButton, {\n                Atom: Atoms_leftDock,\n                DockType: tupledArg[0],\n                Icon: item.Icon,\n                Name: item.Name,\n                OnClick: (_arg3) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    if (deviceInfo.IsMobile) {\n                        setRightDock(void 0);\n                        return Promise.resolve();\n                    }\n                    else {\n                        return Promise.resolve();\n                    }\n                })),\n                Props: (x_7) => {\n                    x_7.tabIndex = ((length(items_1) - i) | 0);\n                },\n            });\n        }, items_1))), stack()((x_6) => {\n            x_6.spacing = \"1px\";\n            x_6.direction = \"row\";\n            x_6.right = \"0\";\n            x_6.position = \"absolute\";\n            x_6.transform = \"rotate(-90deg) translate(0, -100%)\";\n            x_6.transformOrigin = \"100% 0\";\n            x_6.height = \"24px\";\n        })(arg10_3))), box()((x_5) => {\n            x_5.width = \"24px\";\n            x_5.position = \"relative\";\n            x_5.margin = \"1px\";\n        })(arg10_2))), delay(() => {\n            let arg10_4;\n            if (leftDock != null) {\n                const matchValue = tryFind(leftDock, patternInput_1[1]);\n                if (matchValue != null) {\n                    const item_1 = matchValue;\n                    return singleton((arg10_4 = singleton_1(createElement(DockPanel, {\n                        Atom: Atoms_leftDock,\n                        Icon: item_1.Icon,\n                        Name: item_1.Name,\n                        RightIcons: item_1.RightIcons,\n                        children: [React_suspense_Z3796A576(singleton_1(item_1.Content), createElement(LoadingSpinner, null))],\n                    })), flex()((x_8) => {\n                        x_8.width = JS_newObj((x_9) => {\n                            x_9.base = \"calc(100vw - 50px)\";\n                            x_9.md = \"300px\";\n                        });\n                        x_8.height = \"100%\";\n                        x_8.borderRightWidth = \"1px\";\n                        x_8.borderRightColor = \"gray.16\";\n                        x_8.flex = \"1\";\n                    })(arg10_4)));\n                }\n                else {\n                    return singleton(Helpers_nothing);\n                }\n            }\n            else {\n                return singleton(Helpers_nothing);\n            }\n        }));\n    }));\n    return flex()((_arg2) => {\n    })(arg10_1);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_color, Atoms_cellSize } from \"../State.fs.js\";\nimport { useReact_useElementRef } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { isEmpty } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { box } from \"../Bindings/Chakra.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\nimport { comparePrimitives, min } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\n\nexport function AttachmentIndicator(attachmentIndicatorInputProps) {\n    const attachments = attachmentIndicatorInputProps.attachments;\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const color = Jotai_jotaiUtils.useAtomValue(Atoms_color);\n    const tooltipContainerRef = useReact_useElementRef();\n    if (isEmpty(attachments)) {\n        return Helpers_nothing;\n    }\n    else {\n        return box()((x) => {\n            x.ref = tooltipContainerRef;\n            x.height = toText(interpolate(\"%P()px\", [cellSize]));\n            x.lineHeight = toText(interpolate(\"%P()px\", [cellSize]));\n            x.position = \"absolute\";\n            x.top = \"0px\";\n            x.right = \"0px\";\n            x._after = JS_newObj((x_1) => {\n                let copyOfStruct = x_1;\n                copyOfStruct.content = \"\\\"\\\"\";\n                let copyOfStruct_1 = x_1;\n                copyOfStruct_1.borderTopWidth = toText(interpolate(\"%P()px\", [min((x_2, y) => comparePrimitives(x_2, y), ~(~(cellSize / 2)), 10)]));\n                let copyOfStruct_2 = x_1;\n                copyOfStruct_2.borderTopColor = defaultArg(color, \"#000\");\n                let copyOfStruct_3 = x_1;\n                copyOfStruct_3.borderLeftWidth = toText(interpolate(\"%P()px\", [min((x_3, y_1) => comparePrimitives(x_3, y_1), ~(~(cellSize / 2)), 10)]));\n                let copyOfStruct_4 = x_1;\n                copyOfStruct_4.borderLeftColor = \"transparent\";\n                let copyOfStruct_5 = x_1;\n                copyOfStruct_5.position = \"absolute\";\n                let copyOfStruct_6 = x_1;\n                copyOfStruct_6.top = \"0\";\n                let copyOfStruct_7 = x_1;\n                copyOfStruct_7.right = \"0\";\n            });\n        })([]);\n    }\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_UIFlag, Atoms_UIFlagType, Atoms_uiFlag, Atoms_rightDock, Atoms_leftDock, Selectors_deviceInfo, Atoms_cellSize, Selectors_Information_attachments } from \"../State.fs.js\";\nimport { useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { informationColor, DockType } from \"../TempUI.fs.js\";\nimport { Information_Name_Z233FE4C2 } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { interpolate, toText, isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { box, iconButton } from \"../Bindings/Chakra.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport * as bs from \"react-icons/bs\";\nimport { ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { AttachmentIndicator } from \"./AttachmentIndicator.fs.js\";\n\nexport function InformationName(informationNameInputProps) {\n    let arg10_4, _arg1_1, informationName, activePatternResult37001, str, activePatternResult37002, str_4;\n    const information = informationNameInputProps.information;\n    const attachments = Jotai_jotaiUtils.useAtomValue(Selectors_Information_attachments(information));\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const detailsClick = useCallback((getter, setter, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        const deviceInfo = getter(Selectors_deviceInfo);\n        return (deviceInfo.IsMobile ? ((setter(Atoms_leftDock, void 0), Promise.resolve())) : (Promise.resolve())).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            setter(Atoms_rightDock, new DockType(3));\n            setter(Atoms_uiFlag(new Atoms_UIFlagType(1)), new Atoms_UIFlag(2, information));\n            return Promise.resolve();\n        }));\n    })), [information]);\n    const arg10_3 = ofArray([(arg10_4 = ofArray([(_arg1_1 = ((informationName = Information_Name_Z233FE4C2(information), (informationName.tag === 0) ? informationName.fields[0].fields[0] : ((informationName.tag === 2) ? informationName.fields[0].fields[0] : ((activePatternResult37001 = ((str = informationName.fields[0].fields[0], (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))), (activePatternResult37001.tag === 0) ? ((activePatternResult37002 = ((str_4 = informationName.fields[1].fields[0], (str_4 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_4) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_4))))), (activePatternResult37002.tag === 0) ? toText(interpolate(\"%P()/%P()\", [activePatternResult37001.fields[0], activePatternResult37002.fields[0]])) : \"\")) : \"\"))))), (_arg1_1 === \"\") ? \"???\" : _arg1_1), iconButton()((x_4) => {\n        x_4.border = \"0\";\n        x_4.color = \"heliotrope\";\n        x_4.marginLeft = \"3px\";\n        x_4.marginTop = \"-2px\";\n        x_4.padding = \"2px\";\n        x_4.minWidth = \"0\";\n        x_4.width = \"auto\";\n        x_4.height = \"auto\";\n        const x_3 = x_4;\n        x_3.icon = react.createElement(bs.BsThreeDots, void 0);\n        x_3.fontSize = \"11px\";\n        x_3.height = \"15px\";\n        x_3.color = \"whiteAlpha.700\";\n        x_3.marginTop = \"-1px\";\n        x_3.marginLeft = \"6px\";\n        x_3.onClick = detailsClick;\n    })([])]), box()((x_1) => {\n        x_1.whiteSpace = \"nowrap\";\n        x_1.color = informationColor(information);\n    })(arg10_4)), createElement(AttachmentIndicator, {\n        attachments: attachments,\n    })]);\n    return box()((x) => {\n        x.position = \"relative\";\n        x.height = toText(interpolate(\"%P()px\", [cellSize]));\n        x.lineHeight = toText(interpolate(\"%P()px\", [cellSize]));\n    })(arg10_3);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_cellSize, Atoms_Task_priority } from \"../State.fs.js\";\nimport { map, defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { int32ToString } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { Priority_toTag } from \"../../../Fluke.Shared/Domain/ModelGenerated.fs.js\";\nimport { box } from \"../Bindings/Chakra.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\n\nexport function TaskPriority(taskPriorityInputProps) {\n    const priority = Jotai_jotaiUtils.useAtomValue(Atoms_Task_priority(taskPriorityInputProps.taskId));\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const priorityText = defaultArg(map((arg_1) => int32ToString(1 + Priority_toTag(arg_1)), priority), \"\");\n    return box()((x_2) => {\n        x_2.position = \"relative\";\n        x_2.height = toText(interpolate(\"%P()px\", [cellSize]));\n        x_2.lineHeight = toText(interpolate(\"%P()px\", [cellSize]));\n    })([priorityText]);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_Task_sessions, Atoms_UIFlag, Atoms_UIFlagType, Atoms_uiFlag, Selectors_Task_databaseId, Atoms_rightDock, Atoms_leftDock, Selectors_deviceInfo, Selectors_Task_isReadWrite, Atoms_cellSize, Selectors_Task_taskState, Selectors_Task_hasSelection } from \"../State.fs.js\";\nimport { useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { DockType } from \"../TempUI.fs.js\";\nimport { minute, hour, day, month, year, addMinutes, second, now as now_1 } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { Session, FlukeDateTime, FlukeDate, Year } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { enum_type, int32_type, parseEnum } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { int32ToString } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { FlukeTime, Minute, Hour, Day } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { ofArray, cons } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { createElement } from \"react\";\nimport * as react_1 from \"react\";\nimport { Menu } from \"./Menu.fs.js\";\nimport { flex, box, menuItem, iconButton } from \"../Bindings/Chakra.fs.js\";\nimport * as react from \"@chakra-ui/react\";\nimport * as bs from \"react-icons/bs\";\nimport * as gi from \"react-icons/gi\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { AttachmentIndicator } from \"./AttachmentIndicator.fs.js\";\n\nexport function TaskName(taskNameInputProps) {\n    let arg10_5;\n    const taskId = taskNameInputProps.taskId;\n    const hasSelection = Jotai_jotaiUtils.useAtomValue(Selectors_Task_hasSelection(taskId));\n    const taskState = Jotai_jotaiUtils.useAtomValue(Selectors_Task_taskState(taskId));\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const isReadWrite = Jotai_jotaiUtils.useAtomValue(Selectors_Task_isReadWrite(taskId));\n    const editTask = useCallback((getter, setter, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        const deviceInfo = getter(Selectors_deviceInfo);\n        return (deviceInfo.IsMobile ? ((setter(Atoms_leftDock, void 0), Promise.resolve())) : (Promise.resolve())).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            setter(Atoms_rightDock, new DockType(4));\n            const databaseId = getter(Selectors_Task_databaseId(taskId));\n            setter(Atoms_uiFlag(new Atoms_UIFlagType(2)), new Atoms_UIFlag(3, databaseId, taskId));\n            return Promise.resolve();\n        }));\n    })), [taskId]);\n    const startSession = useCallback((getter_3, setter_4, _arg2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let date, now, date_1, date_2;\n        const sessions = getter_3(Atoms_Task_sessions(taskId));\n        const atom_10 = Atoms_Task_sessions(taskId);\n        const value_9 = cons(new Session(0, (date = ((now = now_1(), (second(now) < 30) ? now : addMinutes(now, 1))), new FlukeDateTime((date_1 = date, new FlukeDate(new Year(0, year(date_1)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month(date_1))), new Day(0, day(date_1)))), (date_2 = date, new FlukeTime(new Hour(0, hour(date_2)), new Minute(0, minute(date_2))))))), sessions);\n        setter_4(atom_10, value_9);\n        return Promise.resolve();\n    })), [taskId]);\n    const deleteTask = useCallback((_arg5, _arg4, _arg3) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        return Promise.resolve();\n    })), []);\n    const arg10_4 = ofArray([(arg10_5 = toList(delay(() => append(singleton(taskState.Task.Name.fields[0]), delay(() => {\n        let Trigger;\n        return (!isReadWrite) ? singleton(Helpers_nothing) : singleton(createElement(Menu, (Trigger = iconButton()((x_3) => {\n            x_3.border = \"0\";\n            x_3.color = \"heliotrope\";\n            x_3.marginLeft = \"3px\";\n            x_3.marginTop = \"-2px\";\n            x_3.padding = \"2px\";\n            x_3.minWidth = \"0\";\n            x_3.width = \"auto\";\n            x_3.height = \"auto\";\n            const x_2 = x_3;\n            x_2.as = react.MenuButton;\n            x_2.icon = react_1.createElement(bs.BsThreeDots, void 0);\n            x_2.fontSize = \"11px\";\n            x_2.height = \"15px\";\n            x_2.color = \"whiteAlpha.700\";\n            x_2.display = (isReadWrite ? null : \"none\");\n            x_2.marginTop = \"-3px\";\n            x_2.marginLeft = \"6px\";\n        })([]), {\n            Body: [menuItem()((x_4) => {\n                let cmp_3;\n                x_4.closeOnSelect = true;\n                x_4.icon = ((cmp_3 = bs.BsPen, box()((x_6) => {\n                    x_6.fontSize = \"13px\";\n                    x_6.as = cmp_3;\n                })([])));\n                x_4.onClick = editTask;\n            })([\"Edit Task\"]), menuItem()((x_7) => {\n                let cmp_5;\n                x_7.closeOnSelect = true;\n                x_7.icon = ((cmp_5 = gi.GiHourglass, box()((x_9) => {\n                    x_9.fontSize = \"13px\";\n                    x_9.as = cmp_5;\n                })([])));\n                x_7.onClick = startSession;\n            })([\"Start Session\"]), menuItem()((x_10) => {\n                let cmp_7;\n                x_10.closeOnSelect = true;\n                x_10.isDisabled = true;\n                x_10.icon = ((cmp_7 = bs.BsTrash, box()((x_12) => {\n                    x_12.fontSize = \"13px\";\n                    x_12.as = cmp_7;\n                })([])));\n                x_10.onClick = deleteTask;\n            })([\"Delete Task\"])],\n            MenuListProps: (_arg6_1) => {\n            },\n            Tooltip: \"\",\n            Trigger: Trigger,\n        })));\n    })))), box()((x_1) => {\n        x_1.color = (hasSelection ? \"#ff5656\" : null);\n        x_1.overflow = \"hidden\";\n        x_1.paddingLeft = \"5px\";\n        x_1.paddingRight = \"5px\";\n        x_1.lineHeight = toText(interpolate(\"%P()px\", [cellSize]));\n        x_1.whiteSpace = \"nowrap\";\n        x_1.textOverflow = \"ellipsis\";\n    })(arg10_5)), createElement(AttachmentIndicator, {\n        attachments: taskState.Attachments,\n    })]);\n    return flex()((x) => {\n        x.flex = \"1\";\n        x.alignItems = \"center\";\n        x.position = \"relative\";\n        x.height = toText(interpolate(\"%P()px\", [cellSize]));\n    })(arg10_4);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_cellSize, Atoms_weekStart } from \"../State.fs.js\";\nimport { format as format_1 } from \"date-fns\";\nimport { dayOfWeek, create } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { box } from \"../Bindings/Chakra.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\n\nexport function MonthResponsiveCell(monthResponsiveCellInputProps) {\n    let _arg5;\n    const props = monthResponsiveCellInputProps.props;\n    const date = monthResponsiveCellInputProps.date;\n    const weekStart = Jotai_jotaiUtils.useAtomValue(Atoms_weekStart) | 0;\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const month_1 = format_1((_arg5 = date, create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0)), \"MMM\");\n    return box()((x) => {\n        let matchValue, date_3, copyOfStruct, _arg5_1, matchValue_1, date_7, copyOfStruct_1, _arg5_2;\n        x.whiteSpace = \"nowrap\";\n        x.textAlign = \"center\";\n        x.height = toText(interpolate(\"%P()px\", [cellSize]));\n        x.lineHeight = toText(interpolate(\"%P()px\", [cellSize]));\n        x.borderLeftWidth = ((matchValue = [weekStart, date], (((date_3 = matchValue[1], (date_3.Day.fields[0] === 1) ? (new FSharpChoice$2(0, void 0)) : ((((copyOfStruct = ((_arg5_1 = date_3, create(_arg5_1.Year.fields[0], _arg5_1.Month, _arg5_1.Day.fields[0], 12, 0, 0))), dayOfWeek(copyOfStruct))) === matchValue[0]) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(2, void 0))))).tag === 0) ? \"1px\" : null));\n        x.borderLeftColor = ((matchValue_1 = [weekStart, date], (((date_7 = matchValue_1[1], (date_7.Day.fields[0] === 1) ? (new FSharpChoice$2(0, void 0)) : ((((copyOfStruct_1 = ((_arg5_2 = date_7, create(_arg5_2.Year.fields[0], _arg5_2.Month, _arg5_2.Day.fields[0], 12, 0, 0))), dayOfWeek(copyOfStruct_1))) === matchValue_1[0]) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(2, void 0))))).tag === 0) ? \"#ffffff3d\" : null));\n        props(x);\n    })([month_1]);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_cellSize, Atoms_weekStart, Selectors_FlukeDate_hasCellSelection, Selectors_FlukeDate_isToday } from \"../State.fs.js\";\nimport { singleton } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { box } from \"../Bindings/Chakra.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { dayOfWeek, create } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\n\nexport function Day(dayInputProps) {\n    let source;\n    const label = dayInputProps.label;\n    const date = dayInputProps.date;\n    const isToday = Jotai_jotaiUtils.useAtomValue(Selectors_FlukeDate_isToday(date));\n    const hasCellSelection = Jotai_jotaiUtils.useAtomValue(Selectors_FlukeDate_hasCellSelection(date));\n    const weekStart = Jotai_jotaiUtils.useAtomValue(Atoms_weekStart) | 0;\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const arg10 = singleton((source = label, (source == null) ? source : source.toLowerCase()));\n    return box()((x) => {\n        let matchValue, activePatternResult40919, date_2, copyOfStruct, _arg5, matchValue_1, activePatternResult40920, date_6, copyOfStruct_1, _arg5_1;\n        x.color = (hasCellSelection ? \"#ff5656\" : (isToday ? \"#777\" : null));\n        x.borderLeftWidth = ((matchValue = [weekStart, date], (activePatternResult40919 = ((date_2 = matchValue[1], (date_2.Day.fields[0] === 1) ? (new FSharpChoice$2(0, void 0)) : ((((copyOfStruct = ((_arg5 = date_2, create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0))), dayOfWeek(copyOfStruct))) === matchValue[0]) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(2, void 0))))), (activePatternResult40919.tag === 0) ? \"1px\" : ((activePatternResult40919.tag === 1) ? \"1px\" : null))));\n        x.borderLeftColor = ((matchValue_1 = [weekStart, date], (activePatternResult40920 = ((date_6 = matchValue_1[1], (date_6.Day.fields[0] === 1) ? (new FSharpChoice$2(0, void 0)) : ((((copyOfStruct_1 = ((_arg5_1 = date_6, create(_arg5_1.Year.fields[0], _arg5_1.Month, _arg5_1.Day.fields[0], 12, 0, 0))), dayOfWeek(copyOfStruct_1))) === matchValue_1[0]) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(2, void 0))))), (activePatternResult40920.tag === 0) ? \"#ffffff3d\" : ((activePatternResult40920.tag === 1) ? \"#222\" : null))));\n        x.whiteSpace = \"nowrap\";\n        x.height = toText(interpolate(\"%P()px\", [cellSize]));\n        x.width = toText(interpolate(\"%P()px\", [cellSize]));\n        x.lineHeight = toText(interpolate(\"%P()px\", [cellSize]));\n        x.textAlign = \"center\";\n    })(arg10);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Selectors_dateSequence, Atoms_cellSize } from \"../State.fs.js\";\nimport { ofArray, length, tryHead, map } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { List_groupBy } from \"../../.fable/fable-library.3.2.7/Seq2.js\";\nimport { int32ToString, numberHash } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { create, day as day_2, month as month_1, year as year_1, minValue } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { FlukeDate, Year } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { enum_type, int32_type, parseEnum } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { Day } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { createElement } from \"react\";\nimport { MonthResponsiveCell } from \"./MonthResponsiveCell.fs.js\";\nimport { format as format_2, interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { box, flex } from \"../Bindings/Chakra.fs.js\";\nimport { Day as Day_1 } from \"./Day.fs.js\";\nimport { format as format_1 } from \"date-fns\";\n\nexport function GridHeader() {\n    let arg10_1, arg10_2, arg10_3;\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const dateSequence = Jotai_jotaiUtils.useAtomValue(Selectors_dateSequence);\n    const datesByMonth = map((tuple) => tuple[1], List_groupBy((date) => date.Month, dateSequence, {\n        Equals: (x, y) => (x === y),\n        GetHashCode: (x) => numberHash(x),\n    }));\n    const arg10 = ofArray([(arg10_1 = toList(delay(() => map((dates) => {\n        let date_1;\n        const firstDate = defaultArg(tryHead(dates), (date_1 = minValue(), new FlukeDate(new Year(0, year_1(date_1)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month_1(date_1))), new Day(0, day_2(date_1)))));\n        const cellWidth = (cellSize * length(dates)) | 0;\n        return createElement(MonthResponsiveCell, {\n            date: firstDate,\n            props: (x_1) => {\n                x_1.width = toText(interpolate(\"%P()px\", [cellWidth]));\n            },\n        });\n    }, datesByMonth))), flex()((_arg2) => {\n    })(arg10_1)), (arg10_2 = toList(delay(() => map((date_2) => {\n        let _arg5;\n        return createElement(Day_1, {\n            date: date_2,\n            label: format_1((_arg5 = date_2, create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0)), \"EEEEEE\"),\n        });\n    }, dateSequence))), flex()((_arg3) => {\n    })(arg10_2)), (arg10_3 = toList(delay(() => map((date_4) => {\n        const date_5 = date_4;\n        return createElement(Day_1, {\n            date: date_5,\n            label: format_2('{0:' + \"D2\" + '}', date_5.Day.fields[0]),\n        });\n    }, dateSequence))), flex()((_arg4) => {\n    })(arg10_3))]);\n    return box()((_arg1) => {\n    })(arg10);\n}\n\n","import { useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { Atoms_shiftPressed, Atoms_ctrlPressed, Selectors_Cell_selected, Selectors_Session_cellSelectionMap, Selectors_Session_sortedTaskIdList } from \"../State.fs.js\";\nimport { ofArray, last, head, empty as empty_1, isEmpty as isEmpty_1, sort, skipWhile, reverse, map, append, collect, iterate } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { DateId } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { add as add_1, ofSeq as ofSeq_1, toSeq, tryFind } from \"../../.fable/fable-library.3.2.7/Map.js\";\nimport { singleton, remove, unionMany, FSharpSet__Contains, isEmpty, ofSeq, add, difference, toList, empty } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { compare } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { filter, map as map_1 } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { getDateSequence } from \"../../../Fluke.Shared/Rendering.fs.js\";\n\nexport function useSetCellSelectionMap() {\n    return useCallback((getter, setter, newSelection) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        const sortedTaskIdList = getter(Selectors_Session_sortedTaskIdList);\n        const cellSelectionMap = getter(Selectors_Session_cellSelectionMap);\n        iterate((tupledArg) => {\n            setter(Selectors_Cell_selected([tupledArg[0], new DateId(0, tupledArg[1])]), tupledArg[2]);\n        }, collect((taskId) => {\n            const dates = defaultArg(tryFind(taskId, cellSelectionMap), empty({\n                Compare: (x, y) => compare(x, y),\n            }));\n            const newDates = defaultArg(tryFind(taskId, newSelection), empty({\n                Compare: (x_1, y_1) => compare(x_1, y_1),\n            }));\n            return append(map((date) => [taskId, date, false], toList(difference(dates, newDates))), map((date_1) => [taskId, date_1, true], toList(difference(newDates, dates))));\n        }, sortedTaskIdList));\n        return Promise.resolve();\n    })), []);\n}\n\nexport function useSetSelected() {\n    const setCellSelectionMap = useSetCellSelectionMap();\n    return useCallback((getter, _arg2, tupledArg) => {\n        const taskId = tupledArg[0];\n        const dateId = tupledArg[1];\n        const newValue = tupledArg[2];\n        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            let matchValue_1, a;\n            const ctrlPressed = getter(Atoms_ctrlPressed);\n            const shiftPressed = getter(Atoms_shiftPressed);\n            return ((matchValue_1 = [shiftPressed, ctrlPressed], matchValue_1[0] ? PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                let dateList;\n                const sortedTaskIdList = getter(Selectors_Session_sortedTaskIdList);\n                const oldCellSelectionMap = getter(Selectors_Session_cellSelectionMap);\n                const initialTaskIdSet = add(taskId, ofSeq(map_1((tuple) => tuple[0], filter((tupledArg_1) => (!isEmpty(tupledArg_1[1])), toSeq(oldCellSelectionMap))), {\n                    Compare: (x_3, y_3) => compare(x_3, y_3),\n                }));\n                const newTaskIdList = reverse(skipWhile((arg_1) => (!FSharpSet__Contains(initialTaskIdSet, arg_1)), reverse(skipWhile((arg) => (!FSharpSet__Contains(initialTaskIdSet, arg)), sortedTaskIdList))));\n                const initialDateList = sort(toList(add(dateId.fields[0], unionMany(map_1((_arg1_1) => _arg1_1[1], oldCellSelectionMap), {\n                    Compare: (x_4, y_4) => compare(x_4, y_4),\n                }))), {\n                    Compare: (x_5, y_5) => compare(x_5, y_5),\n                });\n                const dateSet = ofSeq(isEmpty_1(initialDateList) ? empty_1() : ((dateList = initialDateList, getDateSequence(0, 0, ofArray([head(dateList), last(dateList)])))), {\n                    Compare: (x_6, y_6) => compare(x_6, y_6),\n                });\n                const newMap = ofSeq_1(map((taskId_2) => [taskId_2, dateSet], newTaskIdList));\n                return Promise.resolve(newMap);\n            })) : (matchValue_1[1] ? PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                let taskId_1, oldSelection;\n                const oldSelection_1 = getter(Selectors_Session_cellSelectionMap);\n                return Promise.resolve(((taskId_1 = taskId, (oldSelection = oldSelection_1, add_1(taskId_1, (newValue ? ((value_1) => ((set$) => add(value_1, set$))) : ((value_2) => ((set$_1) => remove(value_2, set$_1))))(dateId.fields[0])(defaultArg(tryFind(taskId_1, oldSelection), empty({\n                    Compare: (x_2, y_2) => compare(x_2, y_2),\n                }))), oldSelection)))));\n            })) : ((a = ofSeq_1([[taskId, newValue ? singleton(dateId.fields[0], {\n                Compare: (x, y) => compare(x, y),\n            }) : empty({\n                Compare: (x_1, y_1) => compare(x_1, y_1),\n            })]]), Promise.resolve(a)))))).then(((_arg1_2) => (setCellSelectionMap(_arg1_2).then((() => (Promise.resolve(undefined)))))));\n        }));\n    }, [setCellSelectionMap]);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { useCallback, useState, Atoms_username, Atoms_isTesting } from \"../Bindings/Store.fs.js\";\nimport { simpleGrid, stack, box, iconButton, useToast } from \"../Bindings/Chakra.fs.js\";\nimport { Atoms_UIFlag, Atoms_Task_selectionSet, Atoms_UIFlagType, Atoms_uiFlag, Atoms_rightDock, Atoms_darkMode, Atoms_dayStart, Selectors_Session_cellSelectionMap, Selectors_Cell_sessionStatus, Atoms_cellSize } from \"../State.fs.js\";\nimport { useFeliz_React__React_useState_Static_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { iterate } from \"../../.fable/fable-library.3.2.7/Map.js\";\nimport { empty, iterate as iterate_1 } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { DateId } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { append, singleton, delay, toList, map, iterate as iterate_2 } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { equals, compare } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { CellStatus, ManualCellStatus } from \"../../../Fluke.Shared/Domain/State.fs.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\nimport { DockType, cellStatusColor, manualCellStatusColor } from \"../TempUI.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Tooltip } from \"./Tooltip.fs.js\";\nimport * as fi from \"react-icons/fi\";\nimport * as md from \"react-icons/md\";\nimport { singleton as singleton_1, ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { InputFormat, Input } from \"./Input.fs.js\";\nimport { minute as minute_2, hour as hour_2, tryParse, minValue } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { FSharpRef } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { FlukeTime, Minute, Hour } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { Browser_Types_Event__Event_get_Value } from \"../../.fable/Fable.React.7.4.1/Fable.React.Extensions.fs.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport { defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { CustomPopover } from \"./Popover.fs.js\";\n\nexport function CellMenu(cellMenuInputProps) {\n    let until, arg10_4;\n    const onClose = cellMenuInputProps.onClose;\n    const dateId = cellMenuInputProps.dateId;\n    const taskId = cellMenuInputProps.taskId;\n    const isTesting = Jotai_jotaiUtils.useAtomValue(Atoms_isTesting);\n    const username = Jotai_jotaiUtils.useAtomValue(Atoms_username);\n    const toast = useToast();\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const patternInput = useState()(Selectors_Cell_sessionStatus([taskId, dateId]));\n    const setSessionStatus = patternInput[1];\n    const sessionStatus = patternInput[0];\n    const cellSelectionMap = Jotai_jotaiUtils.useAtomValue(Selectors_Session_cellSelectionMap);\n    const dayStart = Jotai_jotaiUtils.useAtomValue(Atoms_dayStart);\n    const darkMode = Jotai_jotaiUtils.useAtomValue(Atoms_darkMode);\n    const patternInput_1 = useFeliz_React__React_useState_Static_1505((sessionStatus.tag === 5) ? ((sessionStatus.fields[1].tag === 1) ? ((sessionStatus.fields[1].fields[0] != null) ? ((until = sessionStatus.fields[1].fields[0], until)) : (void 0)) : (void 0)) : (void 0));\n    const postponedUntil = patternInput_1[0];\n    let postponedUntilLabel;\n    let pattern_matching_result, until_1;\n    if (sessionStatus.tag === 5) {\n        if (sessionStatus.fields[1].tag === 1) {\n            if (sessionStatus.fields[1].fields[0] != null) {\n                pattern_matching_result = 0;\n                until_1 = sessionStatus.fields[1].fields[0];\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            const _arg1 = until_1;\n            postponedUntilLabel = toText(interpolate(\"%02d%P():%02d%P()\", [_arg1.Hour.fields[0], _arg1.Minute.fields[0]]));\n            break;\n        }\n        case 1: {\n            postponedUntilLabel = \"later\";\n            break;\n        }\n    }\n    const setRightDock = Jotai_jotaiUtils.useUpdateAtom(Atoms_rightDock);\n    const setCellUIFlag = Jotai_jotaiUtils.useUpdateAtom(Atoms_uiFlag(new Atoms_UIFlagType(3)));\n    const onClick = useCallback((_arg1_1, setter, onClickStatus) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        iterate((taskId_1, dates) => {\n            iterate_1((date) => {\n                setter(Selectors_Cell_sessionStatus([taskId_1, new DateId(0, date)]), onClickStatus);\n            }, dates);\n        }, cellSelectionMap);\n        setter(Selectors_Cell_sessionStatus([taskId, dateId]), onClickStatus);\n        iterate_2((taskId_2) => {\n            const atom_10 = Atoms_Task_selectionSet(taskId_2);\n            const value_6 = empty({\n                Compare: (x, y) => compare(x, y),\n            });\n            setter(atom_10, value_6);\n        }, map((_arg1_2) => _arg1_2[0], cellSelectionMap));\n        onClose();\n        return Promise.resolve();\n    })), [onClose, taskId, dateId, cellSelectionMap]);\n    const postponeUntilLater = useCallback((_arg4, _arg3, _arg2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        const matchValue_3 = [username, postponedUntil];\n        let pattern_matching_result_1, postponedUntil_1, username_1;\n        if (matchValue_3[0] != null) {\n            if (matchValue_3[1] != null) {\n                pattern_matching_result_1 = 0;\n                postponedUntil_1 = matchValue_3[1];\n                username_1 = matchValue_3[0];\n            }\n            else {\n                pattern_matching_result_1 = 1;\n            }\n        }\n        else {\n            pattern_matching_result_1 = 1;\n        }\n        switch (pattern_matching_result_1) {\n            case 0: {\n                setSessionStatus(new CellStatus(5, username_1, new ManualCellStatus(1, postponedUntil_1)));\n                onClose();\n                return Promise.resolve();\n            }\n            case 1: {\n                toast((x_1) => {\n                    x_1.description = \"Invalid time\";\n                });\n                return Promise.resolve();\n            }\n        }\n    })), [onClose, username, postponedUntil, setSessionStatus, toast]);\n    const arg10_3 = singleton_1((arg10_4 = toList(delay(() => {\n        let label_1, children_3;\n        const wrapButton = (icon, color, onClick_1) => iconButton()((x_4) => {\n            if (isTesting) {\n                x_4[\"data-testid\"] = toText(interpolate(\"cell-button-%P()\", [color]));\n            }\n            x_4.icon = icon;\n            x_4.color = \"#dddddd\";\n            x_4._hover = JS_newObj((x_5) => {\n                let copyOfStruct = x_5;\n                copyOfStruct.opacity = 0.8;\n            });\n            x_4.variant = \"outline\";\n            x_4.backgroundColor = color;\n            x_4.border = \"0\";\n            x_4.minWidth = toText(interpolate(\"%P()px\", [cellSize]));\n            x_4.height = toText(interpolate(\"%P()px\", [cellSize]));\n            x_4.borderRadius = \"0\";\n            if (onClick_1 == null) {\n            }\n            else {\n                const onClick_2 = onClick_1;\n                x_4.onClick = ((_arg5) => onClick_2());\n            }\n        })([]);\n        const wrapButtonStatus = (icon_1, color_1, status) => wrapButton(icon_1, color_1, () => onClick(status));\n        const wrapButtonTooltip = (status_1, tooltipLabel) => {\n            const color_2 = manualCellStatusColor(status_1);\n            const label = tooltipLabel;\n            const children = toList(delay(() => ((username != null) ? singleton(wrapButtonStatus(void 0, color_2, new CellStatus(5, username, status_1))) : singleton(Helpers_nothing))));\n            if (equals(label, Helpers_nothing)) {\n                return react.createElement(react.Fragment, {}, ...children);\n            }\n            else {\n                return createElement(Tooltip, {\n                    props: (x_6) => {\n                        x_6.label = label;\n                    },\n                    wrapperProps: (_arg1_3) => {\n                    },\n                    children: children,\n                });\n            }\n        };\n        return append(singleton((label_1 = \"Details\", (children_3 = [wrapButton(react.createElement(fi.FiArrowRight, void 0), cellStatusColor(new CellStatus(2)), () => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            setRightDock(new DockType(5));\n            setCellUIFlag(new Atoms_UIFlag(4, taskId, dateId));\n            onClose();\n            return Promise.resolve();\n        })))], equals(label_1, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_3) : createElement(Tooltip, {\n            props: (x_7) => {\n                x_7.label = label_1;\n            },\n            wrapperProps: (_arg1_4) => {\n            },\n            children: children_3,\n        })))), delay(() => {\n            let label_2, children_6;\n            return append((sessionStatus.tag === 5) ? singleton((label_2 = \"Clear\", (children_6 = [wrapButtonStatus(react.createElement(md.MdClear, void 0), cellStatusColor(new CellStatus(0)), new CellStatus(0))], equals(label_2, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_6) : createElement(Tooltip, {\n                props: (x_8) => {\n                    x_8.label = label_2;\n                },\n                wrapperProps: (_arg1_5) => {\n                },\n                children: children_6,\n            })))) : singleton(Helpers_nothing), delay(() => append(singleton(wrapButtonTooltip(new ManualCellStatus(0), box()((_arg6) => {\n            })([\"Complete\"]))), delay(() => {\n                let arg10_7;\n                return append(singleton(wrapButtonTooltip(new ManualCellStatus(2), (arg10_7 = ofArray([box()((_arg8) => {\n                })([\"Dismiss\"]), box()((_arg9) => {\n                })([\"???\"])]), box()((_arg7) => {\n                })(arg10_7)))), delay(() => append(singleton(wrapButtonTooltip(new ManualCellStatus(1, void 0), box()((_arg10) => {\n                })([\"Postpone until tomorrow\"]))), delay(() => {\n                    let input, label_3, children_8;\n                    return append(singleton((input = {\n                        Body: (tupledArg) => {\n                            let arg10_11, arg10_12, arg10_13, cmp_6;\n                            return singleton_1((arg10_11 = ofArray([(arg10_12 = singleton_1(toText(interpolate(\"Postpone until %P()\", [postponedUntilLabel]))), box()((x_11) => {\n                                x_11.paddingBottom = \"5px\";\n                                x_11.marginRight = \"24px\";\n                                x_11.fontSize = \"15px\";\n                            })(arg10_12)), createElement(Input, {\n                                CustomProps: (x_12) => {\n                                    x_12.fixedValue = postponedUntil;\n                                    x_12.inputFormat = (new InputFormat(1));\n                                    x_12.onFormat = ((arg00_14) => {\n                                        const _arg1_8 = arg00_14;\n                                        return toText(interpolate(\"%02d%P():%02d%P()\", [_arg1_8.Hour.fields[0], _arg1_8.Minute.fields[0]]));\n                                    });\n                                    x_12.onValidate = ((arg_1) => {\n                                        let date_2;\n                                        let _arg1_9;\n                                        let outArg = minValue();\n                                        _arg1_9 = [tryParse(arg_1[0], new FSharpRef(() => outArg, (v) => {\n                                            outArg = v;\n                                        })), outArg];\n                                        return _arg1_9[0] ? ((date_2 = _arg1_9[1], new FlukeTime(new Hour(0, hour_2(date_2)), new Minute(0, minute_2(date_2))))) : (void 0);\n                                    });\n                                },\n                                Props: (x_13) => {\n                                    x_13.label = \"Time\";\n                                    x_13.placeholder = \"00:00\";\n                                    x_13.ref = tupledArg[1];\n                                    x_13.onChange = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                        let _arg2_1, arg00_17, outArg_1, date_4;\n                                        patternInput_1[1]((_arg2_1 = ((arg00_17 = Browser_Types_Event__Event_get_Value(e), (outArg_1 = minValue(), [tryParse(arg00_17, new FSharpRef(() => outArg_1, (v_1) => {\n                                            outArg_1 = v_1;\n                                        })), outArg_1]))), _arg2_1[0] ? ((date_4 = _arg2_1[1], new FlukeTime(new Hour(0, hour_2(date_4)), new Minute(0, minute_2(date_4))))) : (void 0)));\n                                        return Promise.resolve();\n                                    })));\n                                },\n                            }), (arg10_13 = singleton_1(createElement(Button, {\n                                Children: [\"Confirm\"],\n                                Hint: void 0,\n                                Icon: [(cmp_6 = fi.FiKey, () => react.createElement(cmp_6, void 0)), new IconPosition(0)],\n                                Props: (x_14) => {\n                                    x_14.onClick = postponeUntilLater;\n                                },\n                            })), box()((_arg11) => {\n                            })(arg10_13))]), stack()((x_10) => {\n                                x_10.spacing = \"10px\";\n                            })(arg10_11)));\n                        },\n                        Props: (_arg12) => {\n                        },\n                        Trigger: (label_3 = toText(interpolate(\"Postpone until %P()\", [postponedUntilLabel])), (children_8 = [wrapButton(void 0, manualCellStatusColor(new ManualCellStatus(1, defaultArg(postponedUntil, dayStart))), void 0)], equals(label_3, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_8) : createElement(Tooltip, {\n                            props: (x_9) => {\n                                x_9.label = label_3;\n                            },\n                            wrapperProps: (_arg1_7) => {\n                            },\n                            children: children_8,\n                        }))),\n                    }, createElement(CustomPopover, {\n                        Body: input.Body,\n                        CloseButton: true,\n                        Padding: \"10px\",\n                        Props: input.Props,\n                        RenderOnHover: false,\n                        Trigger: input.Trigger,\n                    }))), delay(() => {\n                        let arg10_14;\n                        return singleton(wrapButtonTooltip(new ManualCellStatus(3), (arg10_14 = ofArray([box()((_arg13) => {\n                        })([\"Schedule\"]), box()((x_16) => {\n                            x_16.marginTop = \"8px\";\n                        })([\"Manually schedule a task,\\noverriding any other behavior.\\n\"])]), box()((x_15) => {\n                            x_15.padding = \"4px\";\n                        })(arg10_14))));\n                    }));\n                }))));\n            }))));\n        }));\n    })), simpleGrid()((x_3) => {\n        x_3.columns = 1;\n        x_3.borderColor = \"gray.77\";\n        x_3.backgroundColor = (darkMode ? \"#636363\" : \"gray.45\");\n        x_3.spacing = \"1px\";\n        x_3.width = toText(interpolate(\"%P()px\", [cellSize]));\n    })(arg10_4)));\n    return stack()((x_2) => {\n        x_2.spacing = \"0\";\n        x_2.borderWidth = \"1px\";\n        x_2.borderColor = (darkMode ? cellStatusColor(new CellStatus(0)) : \"gray.45\");\n        x_2.boxShadow = toText(interpolate(\"0px 0px 2px 1px #%P()\", [darkMode ? 262626 : 777]));\n    })(arg10_3);\n}\n\n","import { singleton, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { length } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { int32ToString } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { box } from \"../Bindings/Chakra.fs.js\";\n\nexport function CellSessionIndicator(cellSessionIndicatorInputProps) {\n    const sessions = cellSessionIndicatorInputProps.sessions;\n    const status = cellSessionIndicatorInputProps.status;\n    const arg10 = toList(delay(() => {\n        const matchValue = length(sessions) | 0;\n        return (matchValue > 0) ? singleton(int32ToString(matchValue)) : singleton(Helpers_nothing);\n    }));\n    return box()((x) => {\n        x.fontSize = \"11px\";\n        x.color = ((status.tag === 5) ? ((status.fields[1].tag === 0) ? \"#ccc\" : \"#999\") : \"#999\");\n        x.textShadow = \"0 0 2px #000\";\n    })(arg10);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Selectors_Task_isReadWrite, Atoms_cellSize, Atoms_weekStart } from \"../State.fs.js\";\nimport { map, defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { box } from \"../Bindings/Chakra.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { dayOfWeek, create } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\n\nexport function CellBorder(cellBorderInputProps) {\n    let matchValue, activePatternResult41073, date_2, copyOfStruct, _arg5;\n    const date = cellBorderInputProps.date;\n    const taskId = cellBorderInputProps.taskId;\n    const weekStart = Jotai_jotaiUtils.useAtomValue(Atoms_weekStart) | 0;\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const isReadWrite = Jotai_jotaiUtils.useAtomValue(Selectors_Task_isReadWrite(taskId));\n    return defaultArg(map((tupledArg) => box()((x) => {\n        x.position = \"absolute\";\n        x.top = \"-1px\";\n        x.left = \"-1px\";\n        x.bottom = \"-1px\";\n        x.width = toText(interpolate(\"%P()px\", [cellSize]));\n        if (isReadWrite) {\n            x._hover = JS_newObj((x_1) => {\n                let copyOfStruct_1 = x_1;\n                copyOfStruct_1.borderLeftWidth = \"0\";\n            });\n        }\n        x.borderLeftWidth = tupledArg[0];\n        x.borderLeftColor = tupledArg[1];\n    })([]), (matchValue = [weekStart, date], (activePatternResult41073 = ((date_2 = matchValue[1], (date_2.Day.fields[0] === 1) ? (new FSharpChoice$2(0, void 0)) : ((((copyOfStruct = ((_arg5 = date_2, create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0))), dayOfWeek(copyOfStruct))) === matchValue[0]) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(2, void 0))))), (activePatternResult41073.tag === 0) ? [\"1px\", \"#ffffff3d\"] : ((activePatternResult41073.tag === 1) ? [\"1px\", \"#222\"] : (void 0))))), Helpers_nothing);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_cellSize, Atoms_color } from \"../State.fs.js\";\nimport { box } from \"../Bindings/Chakra.fs.js\";\nimport { isNullOrWhiteSpace, interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { comparePrimitives, min } from \"../../.fable/fable-library.3.2.7/Util.js\";\n\nexport function CellStatusUserIndicator() {\n    const color = Jotai_jotaiUtils.useAtomValue(Atoms_color);\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    return box()((x) => {\n        x.height = toText(interpolate(\"%P()px\", [cellSize]));\n        x.lineHeight = toText(interpolate(\"%P()px\", [cellSize]));\n        x.position = \"absolute\";\n        x.top = \"0\";\n        x._after = JS_newObj((x_1) => {\n            let activePatternResult41067, str;\n            let copyOfStruct = x_1;\n            copyOfStruct.borderBottomColor = ((color != null) ? ((activePatternResult41067 = ((str = color, (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))), (activePatternResult41067.tag === 0) ? activePatternResult41067.fields[0] : \"#000000\")) : \"#000000\");\n            let copyOfStruct_1 = x_1;\n            copyOfStruct_1.borderBottomWidth = toText(interpolate(\"%P()px\", [min((x_2, y) => comparePrimitives(x_2, y), ~(~(cellSize / 2)), 10)]));\n            let copyOfStruct_2 = x_1;\n            copyOfStruct_2.borderLeftColor = \"transparent\";\n            let copyOfStruct_3 = x_1;\n            copyOfStruct_3.borderLeftWidth = toText(interpolate(\"%P()px\", [min((x_3, y_1) => comparePrimitives(x_3, y_1), ~(~(cellSize / 2)), 10)]));\n            let copyOfStruct_4 = x_1;\n            copyOfStruct_4.position = \"absolute\";\n            let copyOfStruct_5 = x_1;\n            copyOfStruct_5.content = \"\\\"\\\"\";\n            let copyOfStruct_6 = x_1;\n            copyOfStruct_6.bottom = \"0\";\n            let copyOfStruct_7 = x_1;\n            copyOfStruct_7.right = \"0\";\n        });\n    })([]);\n}\n\n","import { addCount } from \"../Bindings/Profiling.fs.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_shiftPressed, Atoms_ctrlPressed, Selectors_Cell_selected, Selectors_FlukeDate_isToday, Selectors_Cell_attachments, Selectors_Cell_sessions, Selectors_Cell_sessionStatus, Selectors_Task_isReadWrite, Selectors_Task_showUser, Atoms_cellSize } from \"../State.fs.js\";\nimport { useCallback, Atoms_isTesting } from \"../Bindings/Store.fs.js\";\nimport { useSetSelected } from \"../Hooks/Setters.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { createElement } from \"react\";\nimport { CustomPopover } from \"./Popover.fs.js\";\nimport { append, singleton, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { CellMenu } from \"./CellMenu.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { CellSessionIndicator } from \"./CellSessionIndicator.fs.js\";\nimport { CellBorder } from \"./CellBorder.fs.js\";\nimport { CellStatusUserIndicator } from \"./CellStatusUserIndicator.fs.js\";\nimport { AttachmentIndicator } from \"./AttachmentIndicator.fs.js\";\nimport { center } from \"../Bindings/Chakra.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { toShortDateString, create } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { cellStatusColor } from \"../TempUI.fs.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\n\nexport function Cell(input) {\n    let arg10;\n    addCount(\"- CellComponent.render\");\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const isTesting = Jotai_jotaiUtils.useAtomValue(Atoms_isTesting);\n    const showUser = Jotai_jotaiUtils.useAtomValue(Selectors_Task_showUser(input.TaskId));\n    const isReadWrite = Jotai_jotaiUtils.useAtomValue(Selectors_Task_isReadWrite(input.TaskId));\n    const sessionStatus = Jotai_jotaiUtils.useAtomValue(Selectors_Cell_sessionStatus([input.TaskId, input.DateId]));\n    const sessions = Jotai_jotaiUtils.useAtomValue(Selectors_Cell_sessions([input.TaskId, input.DateId]));\n    const attachments = Jotai_jotaiUtils.useAtomValue(Selectors_Cell_attachments([input.TaskId, input.DateId]));\n    const isToday = Jotai_jotaiUtils.useAtomValue(Selectors_FlukeDate_isToday(input.DateId.fields[0]));\n    const selected = Jotai_jotaiUtils.useAtomValue(Selectors_Cell_selected([input.TaskId, input.DateId]));\n    const setSelected = useSetSelected();\n    const onCellClick = useCallback((getter, _arg2, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        const newSelected = (getter(Atoms_ctrlPressed) ? true : getter(Atoms_shiftPressed)) ? [input.TaskId, input.DateId, !selected] : [input.TaskId, input.DateId, false];\n        return setSelected(newSelected).then((() => (Promise.resolve(undefined))));\n    })), [input.TaskId, input.DateId, selected, setSelected]);\n    return createElement(CustomPopover, {\n        Body: (tupledArg) => toList(delay(() => (isReadWrite ? singleton(createElement(CellMenu, {\n            taskId: input.TaskId,\n            dateId: input.DateId,\n            onClose: tupledArg[0].onClose,\n        })) : singleton(Helpers_nothing)))),\n        CloseButton: false,\n        Padding: \"3px\",\n        Props: (x) => {\n            x.placement = \"right-start\";\n        },\n        RenderOnHover: false,\n        Trigger: (arg10 = toList(delay(() => append(singleton(createElement(CellSessionIndicator, {\n            status: sessionStatus,\n            sessions: sessions,\n        })), delay(() => append(selected ? singleton(Helpers_nothing) : singleton(createElement(CellBorder, {\n            taskId: input.TaskId,\n            date: input.DateId.fields[0],\n        })), delay(() => {\n            let matchValue_1;\n            return append((matchValue_1 = [showUser, sessionStatus], matchValue_1[0] ? ((matchValue_1[1].tag === 5) ? singleton(createElement(CellStatusUserIndicator, null)) : singleton(Helpers_nothing)) : singleton(Helpers_nothing)), delay(() => singleton(createElement(AttachmentIndicator, {\n                attachments: attachments,\n            }))));\n        })))))), center()((x_1) => {\n            let copyOfStruct, _arg5;\n            if (isTesting) {\n                x_1[\"data-testid\"] = toText(interpolate(\"cell-%P()-%P()\", [input.TaskId, (copyOfStruct = ((_arg5 = input.DateId.fields[0], create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0))), toShortDateString(copyOfStruct))]));\n            }\n            if (isReadWrite) {\n                x_1.onClick = onCellClick;\n            }\n            x_1.width = toText(interpolate(\"%P()px\", [cellSize]));\n            x_1.height = toText(interpolate(\"%P()px\", [cellSize]));\n            x_1.lineHeight = toText(interpolate(\"%P()px\", [cellSize]));\n            x_1.position = \"relative\";\n            x_1.backgroundColor = (cellStatusColor(sessionStatus) + (isToday ? \"aa\" : (input.SemiTransparent ? \"d9\" : \"\")));\n            x_1.textAlign = \"center\";\n            x_1.borderColor = (selected ? \"#ffffffAA\" : \"transparent\");\n            x_1.borderWidth = \"1px\";\n            if (isReadWrite) {\n                x_1.cursor = \"pointer\";\n                x_1._hover = JS_newObj((x_2) => {\n                    let copyOfStruct_1 = x_2;\n                    copyOfStruct_1.borderColor = \"#ffffff55\";\n                });\n            }\n        })(arg10)),\n    });\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Selectors_dateSequence } from \"../State.fs.js\";\nimport { delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { singleton, map } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { React_suspense_Z3796A576 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { createElement } from \"react\";\nimport { Cell } from \"./Cell.fs.js\";\nimport { DateId } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { InlineLoadingSpinner } from \"./LoadingSpinner.fs.js\";\nimport { flex } from \"../Bindings/Chakra.fs.js\";\n\nexport function TaskCells(taskCellsInputProps) {\n    const taskId = taskCellsInputProps.taskId;\n    const index = taskCellsInputProps.index;\n    const dateSequence = Jotai_jotaiUtils.useAtomValue(Selectors_dateSequence);\n    const arg10 = toList(delay(() => map((date) => React_suspense_Z3796A576(singleton(createElement(Cell, {\n        DateId: new DateId(0, date),\n        SemiTransparent: (index % 2) !== 0,\n        TaskId: taskId,\n    })), createElement(InlineLoadingSpinner, null)), dateSequence)));\n    return flex()((x) => {\n        x.backgroundColor = \"#212121\";\n    })(arg10);\n}\n\n","import { delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { mapIndexed } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { createElement } from \"react\";\nimport { TaskCells } from \"./TaskCells.fs.js\";\nimport { box } from \"../Bindings/Chakra.fs.js\";\n\nexport function Cells(cellsInputProps) {\n    const taskIdList = cellsInputProps.taskIdList;\n    const arg10 = toList(delay(() => mapIndexed((index, taskId) => createElement(TaskCells, {\n        index: index,\n        taskId: taskId,\n    }), taskIdList)));\n    return box()((_arg1) => {\n    })(arg10);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_cellSize, Selectors_Session_tasksByInformationKind } from \"../State.fs.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { ofArray, map, replicate } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { flex, stack, box } from \"../Bindings/Chakra.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { createElement } from \"react\";\nimport { InformationName } from \"./InformationName.fs.js\";\nimport { TaskPriority } from \"./TaskPriority.fs.js\";\nimport { TaskName } from \"./TaskName.fs.js\";\nimport { GridHeader } from \"./GridHeader.fs.js\";\nimport { Cells } from \"./Cells.fs.js\";\n\nexport function InformationView() {\n    let arg10_1, arg10_10, arg10_11;\n    const tasksByInformationKind = Jotai_jotaiUtils.useAtomValue(Selectors_Session_tasksByInformationKind);\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const arg10 = ofArray([(arg10_1 = toList(delay(() => append(replicate(3, box()((x_2) => {\n        x_2.minHeight = toText(interpolate(\"%P()px\", [cellSize]));\n    })([])), delay(() => {\n        let arg10_3;\n        return singleton((arg10_3 = toList(delay(() => map((tupledArg) => {\n            let arg10_6;\n            const arg10_4 = ofArray([box()((x_5) => {\n                x_5.height = toText(interpolate(\"%P()px\", [cellSize]));\n                x_5.lineHeight = toText(interpolate(\"%P()px\", [cellSize]));\n                x_5.color = \"#444\";\n            })([tupledArg[0]]), (arg10_6 = toList(delay(() => map((tupledArg_1) => {\n                let arg10_8;\n                const arg10_7 = ofArray([createElement(InformationName, {\n                    information: tupledArg_1[0],\n                }), (arg10_8 = toList(delay(() => map((taskId) => {\n                    const arg10_9 = ofArray([createElement(TaskPriority, {\n                        taskId: taskId,\n                    }), createElement(TaskName, {\n                        taskId: taskId,\n                    })]);\n                    return stack()((x_8) => {\n                        x_8.direction = \"row\";\n                        x_8.spacing = \"10px\";\n                        x_8.paddingLeft = toText(interpolate(\"%P()px\", [cellSize]));\n                    })(arg10_9);\n                }, tupledArg_1[1]))), box()((x_7) => {\n                    x_7.flex = \"1\";\n                })(arg10_8))]);\n                return box()((x_6) => {\n                    x_6.paddingLeft = toText(interpolate(\"%P()px\", [cellSize]));\n                })(arg10_7);\n            }, tupledArg[1]))), box()((_arg1) => {\n            })(arg10_6))]);\n            return flex()((x_4) => {\n                x_4.direction = \"column\";\n                x_4.flex = \"1\";\n            })(arg10_4);\n        }, tasksByInformationKind))), flex()((x_3) => {\n            x_3.direction = \"column\";\n        })(arg10_3)));\n    })))), flex()((x_1) => {\n        x_1.direction = \"column\";\n        x_1.flex = \"1\";\n        x_1.paddingRight = \"10px\";\n        x_1.paddingLeft = \"4px\";\n        x_1.maxWidth = \"400px\";\n    })(arg10_1)), (arg10_10 = ofArray([createElement(GridHeader, null), (arg10_11 = toList(delay(() => map((tupledArg_2) => {\n        const arg10_12 = toList(delay(() => append(singleton(box()((x_9) => {\n            x_9.position = \"relative\";\n            x_9.height = toText(interpolate(\"%P()px\", [cellSize]));\n            x_9.lineHeight = toText(interpolate(\"%P()px\", [cellSize]));\n        })([])), delay(() => map((tupledArg_3) => {\n            const arg10_14 = ofArray([box()((x_10) => {\n                x_10.position = \"relative\";\n                x_10.height = toText(interpolate(\"%P()px\", [cellSize]));\n                x_10.lineHeight = toText(interpolate(\"%P()px\", [cellSize]));\n            })([]), createElement(Cells, {\n                taskIdList: tupledArg_3[1],\n            })]);\n            return box()((_arg5) => {\n            })(arg10_14);\n        }, tupledArg_2[1])))));\n        return box()((_arg4) => {\n        })(arg10_12);\n    }, tasksByInformationKind))), box()((_arg3) => {\n    })(arg10_11))]), box()((_arg2) => {\n    })(arg10_10))]);\n    return flex()((x) => {\n        x.flex = \"1\";\n    })(arg10);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_Task_information } from \"../State.fs.js\";\nimport { createElement } from \"react\";\nimport { InformationName } from \"./InformationName.fs.js\";\n\nexport function TaskInformationName(taskInformationNameInputProps) {\n    const information = Jotai_jotaiUtils.useAtomValue(Atoms_Task_information(taskInformationNameInputProps.taskId));\n    return createElement(InformationName, {\n        information: information,\n    });\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_cellSize, Selectors_Session_sortedTaskIdList } from \"../State.fs.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { ofArray, singleton as singleton_1, map, replicate } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { flex, box } from \"../Bindings/Chakra.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { React_suspense_Z3796A576 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { createElement } from \"react\";\nimport { TaskInformationName } from \"./TaskInformationName.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { TaskPriority } from \"./TaskPriority.fs.js\";\nimport { TaskName } from \"./TaskName.fs.js\";\nimport { InlineLoadingSpinner } from \"./LoadingSpinner.fs.js\";\nimport { GridHeader } from \"./GridHeader.fs.js\";\nimport { Cells } from \"./Cells.fs.js\";\n\nexport function HabitTrackerView() {\n    let arg10_1, arg10_8;\n    const sortedTaskIdList = Jotai_jotaiUtils.useAtomValue(Selectors_Session_sortedTaskIdList);\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const arg10 = ofArray([(arg10_1 = toList(delay(() => append(replicate(3, box()((x_2) => {\n        x_2.minHeight = toText(interpolate(\"%P()px\", [cellSize]));\n    })([])), delay(() => {\n        let arg10_3, arg10_4, arg10_5, arg10_6;\n        return singleton((arg10_3 = ofArray([(arg10_4 = toList(delay(() => map((taskId) => React_suspense_Z3796A576(singleton_1(createElement(TaskInformationName, {\n            taskId: taskId,\n        })), Helpers_nothing), sortedTaskIdList))), box()((x_3) => {\n            x_3.paddingRight = \"10px\";\n        })(arg10_4)), (arg10_5 = toList(delay(() => map((taskId_1) => React_suspense_Z3796A576(singleton_1(createElement(TaskPriority, {\n            taskId: taskId_1,\n        })), Helpers_nothing), sortedTaskIdList))), box()((x_4) => {\n            x_4.paddingRight = \"10px\";\n            x_4.textAlign = \"center\";\n        })(arg10_5)), (arg10_6 = toList(delay(() => map((taskId_2) => {\n            const arg10_7 = singleton_1(React_suspense_Z3796A576(singleton_1(createElement(TaskName, {\n                taskId: taskId_2,\n            })), createElement(InlineLoadingSpinner, null)));\n            return box()((x_6) => {\n                x_6.height = toText(interpolate(\"%P()px\", [cellSize]));\n            })(arg10_7);\n        }, sortedTaskIdList))), box()((x_5) => {\n            x_5.flex = \"1\";\n        })(arg10_6))]), flex()((_arg1) => {\n        })(arg10_3)));\n    })))), flex()((x_1) => {\n        x_1.direction = \"column\";\n        x_1.paddingRight = \"10px\";\n        x_1.paddingLeft = \"4px\";\n    })(arg10_1)), (arg10_8 = ofArray([createElement(GridHeader, null), React_suspense_Z3796A576(singleton_1(createElement(Cells, {\n        taskIdList: sortedTaskIdList,\n    })), Helpers_nothing)]), box()((_arg2) => {\n    })(arg10_8))]);\n    return flex()((x) => {\n        x.flex = \"1\";\n    })(arg10);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_cellSize, Selectors_Session_sortedTaskIdList } from \"../State.fs.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { ofArray, map, replicate } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { flex, box } from \"../Bindings/Chakra.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { createElement } from \"react\";\nimport { TaskInformationName } from \"./TaskInformationName.fs.js\";\nimport { TaskPriority } from \"./TaskPriority.fs.js\";\nimport { TaskName } from \"./TaskName.fs.js\";\nimport { GridHeader } from \"./GridHeader.fs.js\";\nimport { Cells } from \"./Cells.fs.js\";\n\nexport function PriorityView() {\n    let arg10_1, arg10_7;\n    const sortedTaskIdList = Jotai_jotaiUtils.useAtomValue(Selectors_Session_sortedTaskIdList);\n    const cellSize = Jotai_jotaiUtils.useAtomValue(Atoms_cellSize) | 0;\n    const arg10 = ofArray([(arg10_1 = toList(delay(() => append(replicate(3, box()((x_2) => {\n        x_2.minHeight = toText(interpolate(\"%P()px\", [cellSize]));\n    })([])), delay(() => {\n        let arg10_3, arg10_4, arg10_5, arg10_6;\n        return singleton((arg10_3 = ofArray([(arg10_4 = toList(delay(() => map((taskId) => createElement(TaskInformationName, {\n            taskId: taskId,\n        }), sortedTaskIdList))), box()((x_3) => {\n            x_3.paddingRight = \"10px\";\n        })(arg10_4)), (arg10_5 = toList(delay(() => map((taskId_1) => createElement(TaskPriority, {\n            taskId: taskId_1,\n        }), sortedTaskIdList))), box()((x_4) => {\n            x_4.paddingRight = \"10px\";\n            x_4.textAlign = \"center\";\n        })(arg10_5)), (arg10_6 = toList(delay(() => map((taskId_2) => createElement(TaskName, {\n            taskId: taskId_2,\n        }), sortedTaskIdList))), box()((x_5) => {\n            x_5.flex = \"1\";\n        })(arg10_6))]), flex()((_arg1) => {\n        })(arg10_3)));\n    })))), flex()((x_1) => {\n        x_1.direction = \"column\";\n        x_1.flex = \"1\";\n        x_1.paddingRight = \"10px\";\n        x_1.paddingLeft = \"4px\";\n        x_1.maxWidth = \"400px\";\n    })(arg10_1)), (arg10_7 = ofArray([createElement(GridHeader, null), createElement(Cells, {\n        taskIdList: sortedTaskIdList,\n    })]), box()((_arg2) => {\n    })(arg10_7))]);\n    return flex()((x) => {\n        x.flex = \"1\";\n    })(arg10);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Selectors_BulletJournalView_weekCellsMap } from \"../State.fs.js\";\nimport { singleton, append, map as map_1, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { ofArray, forAll, singleton as singleton_1, isEmpty, filter, map } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { FSharpMap__get_Item } from \"../../.fable/fable-library.3.2.7/Map.js\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { CellStatus } from \"../../../Fluke.Shared/Domain/State.fs.js\";\nimport { format as format_1 } from \"date-fns\";\nimport { create } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { flex, box } from \"../Bindings/Chakra.fs.js\";\nimport { createElement } from \"react\";\nimport { Cell } from \"./Cell.fs.js\";\nimport { TaskName } from \"./TaskName.fs.js\";\n\nexport function BulletJournalView() {\n    const weekCellsMap = Jotai_jotaiUtils.useAtomValue(Selectors_BulletJournalView_weekCellsMap);\n    const arg10 = toList(delay(() => map((week) => {\n        const arg10_1 = toList(delay(() => map_1((dateId) => {\n            const dateId_1 = dateId;\n            const cells = FSharpMap__get_Item(week, dateId_1);\n            const visibleCells = filter((cell) => {\n                if ((!isEmpty(cell.Sessions)) ? true : (!isEmpty(cell.Attachments))) {\n                    return true;\n                }\n                else {\n                    return !equals(cell.Status, new CellStatus(0));\n                }\n            }, cells);\n            const arg10_2 = toList(delay(() => {\n                let arg10_3, source_4, _arg5;\n                return append(singleton((arg10_3 = singleton_1((source_4 = format_1((_arg5 = dateId_1.fields[0], create(_arg5.Year.fields[0], _arg5.Month, _arg5.Day.fields[0], 12, 0, 0)), \"EEEE, dd MMM yyyy\"), (source_4 == null) ? source_4 : source_4.toLowerCase())), box()((x_3) => {\n                    x_3.visibility = (isEmpty(visibleCells) ? \"hidden\" : \"visible\");\n                    x_3.marginBottom = \"3px\";\n                    x_3.borderBottomWidth = \"1px\";\n                    x_3.borderBottomColor = \"gray.16\";\n                    x_3.fontSize = \"14px\";\n                    x_3.lineHeight = \"14px\";\n                    x_3.color = (forAll((x_4) => x_4.IsToday, cells) ? \"gray.45\" : \"\");\n                })(arg10_3))), delay(() => map((cell_1) => {\n                    let arg10_5;\n                    const arg10_4 = ofArray([createElement(Cell, {\n                        DateId: dateId_1,\n                        SemiTransparent: false,\n                        TaskId: cell_1.TaskId,\n                    }), (arg10_5 = singleton_1(createElement(TaskName, {\n                        taskId: cell_1.TaskId,\n                    })), box()((x_5) => {\n                        x_5.paddingLeft = \"4px\";\n                    })(arg10_5))]);\n                    return flex()((_arg1_1) => {\n                    })(arg10_4);\n                }, visibleCells)));\n            }));\n            return box()((x_2) => {\n                x_2.flex = \"1\";\n                x_2.paddingLeft = \"10px\";\n                x_2.paddingRight = \"10px\";\n            })(arg10_2);\n        }, map_1((_arg1) => _arg1[0], week))));\n        return flex()((x_1) => {\n            x_1.flex = \"1\";\n            x_1.marginTop = \"15px\";\n            x_1.marginBottom = \"15px\";\n        })(arg10_1);\n    }, weekCellsMap)));\n    return box()((x) => {\n        x.flex = \"1\";\n    })(arg10);\n}\n\n","import { Jotai_AtomReference$1, Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_searchText, Atoms_filterTasksByView, Atoms_hideSchedulingOverlay, Selectors_Session_sortedTaskIdList, Selectors_Session_filteredTaskIdSet, Atoms_view, Atoms_showViewOptions } from \"../State.fs.js\";\nimport { InputAtom$1, useState } from \"../Bindings/Store.fs.js\";\nimport { useReact_useEffect_Z101E1A95, useReact_useRef_1505, useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport * as ti from \"react-icons/ti\";\nimport { createElement } from \"react\";\nimport * as react_1 from \"react\";\nimport { InformationView } from \"./InformationView.fs.js\";\nimport { View as View_4 } from \"../../../Fluke.Shared/View.fs.js\";\nimport * as bs from \"react-icons/bs\";\nimport { HabitTrackerView } from \"./HabitTrackerView.fs.js\";\nimport * as fa from \"react-icons/fa\";\nimport { PriorityView } from \"./PriorityView.fs.js\";\nimport { BulletJournalView } from \"./BulletJournalView.fs.js\";\nimport { item, isEmpty, singleton as singleton_1, map, tryFindIndex, ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { interpolate, toConsole } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { tabs as tabs_2, tabPanels, tabPanel, stack, box, flex, tabList, iconButton, spacer, tab as tab_3, icon } from \"../Bindings/Chakra.fs.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\nimport { Menu } from \"./Menu.fs.js\";\nimport * as react from \"@chakra-ui/react\";\nimport { MenuItemToggle } from \"./MenuItemToggle.fs.js\";\nimport { CheckboxInput } from \"./CheckboxInput.fs.js\";\nimport { Input } from \"./Input.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { FSharpSet__get_IsEmpty } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { InlineLoadingSpinner } from \"./LoadingSpinner.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\n\nexport function ViewTabs() {\n    const showViewOptions = Jotai_jotaiUtils.useAtomValue(Atoms_showViewOptions);\n    const patternInput = useState()(Atoms_view);\n    const view = patternInput[0];\n    const filteredTaskIdSet = Jotai_jotaiUtils.useAtomValue(Selectors_Session_filteredTaskIdSet);\n    const sortedTaskIdList = Jotai_jotaiUtils.useAtomValue(Selectors_Session_sortedTaskIdList);\n    const patternInput_1 = useReact_useMemo_CF4EA67(() => {\n        let Icon, Icon_1, Icon_2, Icon_3;\n        const tabs = ofArray([(Icon = ti.TiFlowChildren, {\n            Content: createElement(InformationView, null),\n            Icon: Icon,\n            Name: \"Information View\",\n            View: new View_4(0),\n        }), (Icon_1 = bs.BsGrid, {\n            Content: createElement(HabitTrackerView, null),\n            Icon: Icon_1,\n            Name: \"Habit Tracker View\",\n            View: new View_4(1),\n        }), (Icon_2 = fa.FaSortNumericDownAlt, {\n            Content: createElement(PriorityView, null),\n            Icon: Icon_2,\n            Name: \"Priority View\",\n            View: new View_4(2),\n        }), (Icon_3 = bs.BsListCheck, {\n            Content: createElement(BulletJournalView, null),\n            Icon: Icon_3,\n            Name: \"Bullet Journal View\",\n            View: new View_4(3),\n        })]);\n        return [tabs, tryFindIndex((tab) => equals(tab.View, view), tabs)];\n    }, [view]);\n    const tabs_1 = patternInput_1[0];\n    const tabIndex_1 = patternInput_1[1];\n    const lastTabIndex = useReact_useRef_1505(defaultArg(tabIndex_1, 0));\n    useReact_useEffect_Z101E1A95(() => {\n        if (tabIndex_1 == null) {\n        }\n        else {\n            const tabIndex_2 = tabIndex_1 | 0;\n            lastTabIndex.current = (tabIndex_2 | 0);\n        }\n    }, [tabIndex_1, lastTabIndex]);\n    toConsole(interpolate(\"ViewTabs.render. current view=%P(). tabIndex=%P() lastTabIndex=%P()\", [view, tabIndex_1, lastTabIndex.current]));\n    const arg10 = toList(delay(() => {\n        let arg10_1, arg10_2;\n        return append(singleton((arg10_1 = singleton_1((arg10_2 = toList(delay(() => append(map((tab_1) => {\n            const arg10_3 = ofArray([icon()((x_6) => {\n                x_6.as = tab_1.Icon;\n                x_6.marginRight = \"6px\";\n            })([]), tab_1.Name]);\n            return tab_3()((x_3) => {\n                x_3.padding = \"12px\";\n                x_3.color = \"gray.45\";\n                x_3._hover = JS_newObj((x_4) => {\n                    let copyOfStruct = x_4;\n                    copyOfStruct.borderBottomWidth = \"2px\";\n                    let copyOfStruct_1 = x_4;\n                    copyOfStruct_1.borderBottomColor = \"gray.45\";\n                });\n                x_3._selected = JS_newObj((x_5) => {\n                    let copyOfStruct_2 = x_5;\n                    copyOfStruct_2.color = \"gray.77\";\n                    let copyOfStruct_3 = x_5;\n                    copyOfStruct_3.borderColor = \"gray.77\";\n                });\n            })(arg10_3);\n        }, tabs_1), delay(() => append(singleton(spacer()((_arg1) => {\n        })([])), delay(() => {\n            let Trigger, input;\n            return singleton(createElement(Menu, (Trigger = ((input = {\n                Props: (x_7) => {\n                    x_7.as = react.MenuButton;\n                    x_7.fontSize = \"14px\";\n                    x_7.icon = react_1.createElement(bs.BsThreeDotsVertical, void 0);\n                    x_7.alignSelf = \"center\";\n                },\n            }, iconButton()((x_8) => {\n                x_8.backgroundColor = \"transparent\";\n                x_8.variant = \"outline\";\n                x_8.border = \"0\";\n                x_8.width = \"30px\";\n                x_8.height = \"30px\";\n                x_8.borderRadius = \"0\";\n                x_8.textAlign = \"-webkit-center\";\n                input.Props(x_8);\n            })([]))), {\n                Body: [createElement(MenuItemToggle, {\n                    atom: Atoms_hideSchedulingOverlay,\n                    label: \"Hide Scheduling Overlay\",\n                }), createElement(MenuItemToggle, {\n                    atom: Atoms_showViewOptions,\n                    label: \"Show View Options\",\n                })],\n                MenuListProps: (_arg2) => {\n                },\n                Tooltip: \"\",\n                Trigger: Trigger,\n            })));\n        })))))), tabList()((x_2) => {\n            x_2.flex = \"1 1 auto\";\n            x_2.display = \"flex\";\n            x_2.borderColor = \"transparent\";\n            x_2.marginBottom = \"5px\";\n            x_2.padding = \"1px\";\n            x_2.alignItems = \"center\";\n            x_2.borderBottomWidth = \"1px\";\n            x_2.borderBottomColor = \"gray.16\";\n        })(arg10_2))), flex()((x_1) => {\n            x_1.margin = \"1px\";\n            x_1.overflowX = \"auto\";\n        })(arg10_1))), delay(() => {\n            let arg10_7, arg10_8, input_1, arg10_9;\n            return append(showViewOptions ? singleton((arg10_7 = ofArray([(arg10_8 = singleton_1(createElement(CheckboxInput, {\n                Atom: Atoms_filterTasksByView,\n                Label: \"Filter tasks by view\",\n                Props: (_arg3) => {\n                },\n            })), box()((x_10) => {\n                x_10.marginLeft = \"2px\";\n            })(arg10_8)), (input_1 = {\n                CustomProps: (x_11) => {\n                    x_11.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_searchText)));\n                },\n                Icon: react_1.createElement(bs.BsSearch, void 0),\n                Props: (x_12) => {\n                    x_12.autoFocus = true;\n                    x_12.placeholder = \"Search task or information\";\n                },\n            }, (arg10_9 = ofArray([flex()((x_14) => {\n                x_14.zIndex = 0;\n                x_14.position = \"absolute\";\n                x_14.left = \"9px\";\n                x_14.height = \"calc(var(--chakra-fontSizes-main) * 2.45)\";\n                x_14.alignItems = \"center\";\n            })([input_1.Icon]), createElement(Input, {\n                CustomProps: input_1.CustomProps,\n                Props: (x_15) => {\n                    x_15.paddingLeft = \"28px\";\n                    input_1.Props(x_15);\n                },\n            })]), flex()((x_13) => {\n                x_13.flex = \"1\";\n                x_13.position = \"relative\";\n            })(arg10_9)))]), stack()((x_9) => {\n                x_9.padding = \"4px\";\n            })(arg10_7))) : singleton(Helpers_nothing), delay(() => {\n                let arg10_11;\n                return singleton((arg10_11 = toList(delay(() => map((tab_2) => {\n                    const arg10_12 = toList(delay(() => {\n                        let arg10_14;\n                        return isEmpty(sortedTaskIdList) ? (FSharpSet__get_IsEmpty(filteredTaskIdSet) ? singleton(box()((x_18) => {\n                            x_18.padding = \"7px\";\n                            x_18.whiteSpace = \"nowrap\";\n                        })([\"No tasks found. Add tasks in the Databases panel.\"])) : singleton((arg10_14 = singleton_1(createElement(InlineLoadingSpinner, null)), box()((x_19) => {\n                            x_19.padding = \"15px\";\n                        })(arg10_14)))) : singleton(tab_2.Content);\n                    }));\n                    return tabPanel()((x_17) => {\n                        x_17.display = \"flex\";\n                        x_17.padding = \"0\";\n                        x_17.boxShadow = \"none !important\";\n                        x_17.flex = \"1\";\n                        x_17.overflow = \"auto\";\n                    })(arg10_12);\n                }, tabs_1))), tabPanels()((x_16) => {\n                    x_16.flex = \"1\";\n                    x_16.display = \"flex\";\n                    x_16.overflowX = \"hidden\";\n                    x_16.flexBasis = 0;\n                })(arg10_11)));\n            }));\n        }));\n    }));\n    return tabs_2()((x) => {\n        x.isLazy = true;\n        x.index = defaultArg(tabIndex_1, lastTabIndex.current);\n        x.onChange = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            patternInput[1](item(e, tabs_1).View);\n            return Promise.resolve();\n        })));\n        x.flexDirection = \"column\";\n        x.display = \"flex\";\n        x.flex = \"1\";\n        x.overflow = \"auto\";\n    })(arg10);\n}\n\n","import { iconButton, stack, box, circle } from \"../Bindings/Chakra.fs.js\";\nimport { ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport * as react from \"react\";\nimport * as bs from \"react-icons/bs\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\n\nexport function DatabaseAccessIndicator() {\n    let arg10_1;\n    const arg10 = ofArray([(arg10_1 = ofArray([circle()((x_2) => {\n        x_2.width = \"10px\";\n        x_2.height = \"10px\";\n        x_2.backgroundColor = \"#0f0\";\n    })([]), box()((_arg1) => {\n    })([\"Private\"])]), stack()((x_1) => {\n        x_1.direction = \"row\";\n        x_1.spacing = \"4px\";\n        x_1.alignItems = \"center\";\n    })(arg10_1)), iconButton()((x_3) => {\n        x_3.icon = react.createElement(bs.BsThreeDots, void 0);\n        x_3.disabled = true;\n        x_3.width = \"22px\";\n        x_3.height = \"15px\";\n        x_3.onClick = ((_arg2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            return Promise.resolve();\n        })));\n    })([])]);\n    return stack()((x) => {\n        x.direction = \"row\";\n        x.spacing = \"15px\";\n    })(arg10);\n}\n\n","import { input, stack, box, useToast } from \"../Bindings/Chakra.fs.js\";\nimport { Jotai_queryAtomPath, Jotai_AtomReference$1, Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_rightDock, TextKey, Atoms_accordionFlag, Atoms_UIFlag, Atoms_UIFlagType, Atoms_uiFlag, Selectors_Database_database, Atoms_databaseIdSet, Atoms_Database_name, Atoms_debug } from \"../State.fs.js\";\nimport { InputScope$1, Atoms_username, AtomField$1, readWriteValue, AtomScope, emptyAtom, InputAtom$1, useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { ofNullable, some, value as value_7 } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { Auto_unsafeFromString_Z5CB6BD } from \"../../.fable/Thoth.Json.5.1.0/Decode.fs.js\";\nimport { Database, DatabaseAccess, DatabaseName, DatabaseId, DatabaseName$reflection } from \"../../../Fluke.Shared/Domain/State.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { interpolate, toText, isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { ofArray, singleton as singleton_1, contains, empty, filter, map } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { safeHash, equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { Username } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { add, toList } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { newGuid } from \"../../.fable/fable-library.3.2.7/Guid.js\";\nimport { useFeliz_React__React_useState_Static_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { useHydrateDatabase, useImportDatabase } from \"../Hooks/Hydrate.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Accordion } from \"./Accordion.fs.js\";\nimport { singleton, append, delay, toList as toList_1 } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { Input } from \"./Input.fs.js\";\nimport { Auto_toString_5A41365E } from \"../../.fable/Thoth.Json.5.1.0/Encode.fs.js\";\nimport { format as format_1 } from \"date-fns\";\nimport { now } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { DatabaseAccessIndicator } from \"./DatabaseAccessIndicator.fs.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as fi from \"react-icons/fi\";\nimport * as bi from \"react-icons/bi\";\n\nexport function DatabaseForm(databaseFormInputProps) {\n    let arg10_2, arg10_6, arg10_8, cmp_4;\n    const onSave = databaseFormInputProps.onSave;\n    const databaseId = databaseFormInputProps.databaseId;\n    const toast = useToast();\n    const debug = Jotai_jotaiUtils.useAtomValue(Atoms_debug);\n    const onSave_1 = useCallback((getter, setter, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let atom_2, atomPath, matchValue, atomPath_1, activePatternResult36978, str_1, a;\n        let databaseName;\n        const getter_1 = getter;\n        const atom_1 = Atoms_Database_name(databaseId);\n        const matchValue_1 = ((atom_2 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, atom_1))), (atom_2 != null) ? ((atomPath = atom_2.fields[0], new AtomField$1((atomPath.tag === 0) ? atomPath.fields[0] : emptyAtom, (matchValue = [Jotai_queryAtomPath(atomPath), new AtomScope(1)], (matchValue[0] != null) ? ((matchValue[1].tag === 1) ? ((atomPath_1 = value_7(matchValue[0]), readWriteValue(atomPath_1))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n        if (matchValue_1 != null) {\n            const result = getter_1(matchValue_1);\n            databaseName = ((result === null) ? getter_1(atom_1) : Auto_unsafeFromString_Z5CB6BD(result, void 0, void 0, {\n                ResolveType: DatabaseName$reflection,\n            }));\n        }\n        else {\n            databaseName = getter_1(atom_1);\n        }\n        const username = getter(Atoms_username);\n        if (((activePatternResult36978 = ((str_1 = databaseName.fields[0], (str_1 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_1) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_1))))), (activePatternResult36978.tag === 1) ? some(void 0) : ((activePatternResult36978.tag === 2) ? some(void 0) : (void 0)))) != null) {\n            toast((x) => {\n                x.description = \"Invalid name\";\n            });\n            return Promise.resolve();\n        }\n        else {\n            const databaseNames = map((atom_9) => getter(atom_9), map(Atoms_Database_name, filter((databaseId$0027) => {\n                if (!equals(databaseId, (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Id)) {\n                    return true;\n                }\n                else {\n                    return !equals(databaseId, databaseId$0027);\n                }\n            }, toList(getter(Atoms_databaseIdSet)))));\n            if (username == null) {\n                return Promise.resolve();\n            }\n            else {\n                const username_1 = username;\n                if (contains(databaseName, databaseNames, {\n                    Equals: (x_1, y) => equals(x_1, y),\n                    GetHashCode: (x_1) => safeHash(x_1),\n                })) {\n                    toast((x_2) => {\n                        x_2.description = \"Database with this name already exists\";\n                    });\n                    return Promise.resolve();\n                }\n                else {\n                    return (equals(databaseId, (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Id) ? ((a = (new Database(new DatabaseId(0, newGuid()), databaseName, username_1, new DatabaseAccess(1, empty()), void 0)), Promise.resolve(a))) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        const database = getter(Selectors_Database_database(databaseId));\n                        return Promise.resolve((new Database(database.Id, databaseName, database.Owner, database.SharedWith, database.Position)));\n                    }))).then(((_arg1_1) => {\n                        let atom_13, atomPath_2, matchValue_2, atomPath_3;\n                        const matchValue_3 = ((atom_13 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Database_name(databaseId)))), (atom_13 != null) ? ((atomPath_2 = atom_13.fields[0], new AtomField$1((atomPath_2.tag === 0) ? atomPath_2.fields[0] : emptyAtom, (matchValue_2 = [Jotai_queryAtomPath(atomPath_2), new AtomScope(1)], (matchValue_2[0] != null) ? ((matchValue_2[1].tag === 1) ? ((atomPath_3 = value_7(matchValue_2[0]), readWriteValue(atomPath_3))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n                        if (matchValue_3 != null) {\n                            setter(matchValue_3, null);\n                        }\n                        setter(Atoms_uiFlag(new Atoms_UIFlagType(0)), new Atoms_UIFlag(0));\n                        return onSave(_arg1_1).then((() => (Promise.resolve(undefined))));\n                    }));\n                }\n            }\n        }\n    })), [databaseId, onSave, toast]);\n    const patternInput = useFeliz_React__React_useState_Static_1505(void 0);\n    const importDatabase = useImportDatabase();\n    return createElement(Accordion, {\n        Atom: Atoms_accordionFlag(new TextKey(0, \"DatabaseForm\")),\n        Items: ofArray([[toText(interpolate(\"%P() Database\", [equals(databaseId, (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Id) ? \"Add\" : \"Edit\"])), (arg10_2 = toList_1(delay(() => {\n            let arg10_3;\n            return append((!debug) ? singleton(Helpers_nothing) : singleton((arg10_3 = singleton_1(toText(interpolate(\"%P()\", [databaseId]))), box()((_arg2_1) => {\n            })(arg10_3))), delay(() => append(singleton(createElement(Input, {\n                CustomProps: (x_5) => {\n                    x_5.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Database_name(databaseId))));\n                    x_5.inputScope = (new InputScope$1(1, [(obj) => Auto_toString_5A41365E(0, obj, void 0, void 0, void 0, {\n                        ResolveType: DatabaseName$reflection,\n                    }), (data_1) => Auto_unsafeFromString_Z5CB6BD(data_1, void 0, void 0, {\n                        ResolveType: DatabaseName$reflection,\n                    })]));\n                    x_5.onFormat = ((_arg3) => _arg3.fields[0]);\n                    x_5.onValidate = ((arg_1) => (new DatabaseName(0, arg_1[0])));\n                    x_5.onEnterPress = onSave_1;\n                },\n                Props: (x_6) => {\n                    x_6.autoFocus = true;\n                    x_6.label = \"Name\";\n                    x_6.placeholder = toText(interpolate(\"new-database-%s%P()\", [format_1(now(), \"yyyy-MM-dd\")]));\n                },\n            })), delay(() => {\n                let arg10_4;\n                return append(singleton((arg10_4 = ofArray([box()((_arg4) => {\n                })([\"Access:\"]), createElement(DatabaseAccessIndicator, null)]), stack()((x_7) => {\n                    x_7.direction = \"row\";\n                    x_7.alignItems = \"center\";\n                })(arg10_4))), delay(() => {\n                    let cmp;\n                    return singleton(createElement(Button, {\n                        Children: [\"Save\"],\n                        Hint: void 0,\n                        Icon: [(cmp = fi.FiSave, () => react.createElement(cmp, void 0)), new IconPosition(0)],\n                        Props: (x_8) => {\n                            x_8.onClick = onSave_1;\n                        },\n                    }));\n                }));\n            }))));\n        })), stack()((x_4) => {\n            x_4.spacing = \"15px\";\n        })(arg10_2))], [\"Import Database\", (arg10_6 = ofArray([input()((x_10) => {\n            x_10.type = \"file\";\n            x_10.padding = \"5px\";\n            x_10.onChange = ((x_11) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                patternInput[1](ofNullable(x_11.target.files));\n                return Promise.resolve();\n            })));\n        })([]), (arg10_8 = singleton_1(createElement(Button, {\n            Children: [\"Confirm\"],\n            Hint: void 0,\n            Icon: [(cmp_4 = bi.BiImport, () => react.createElement(cmp_4, void 0)), new IconPosition(0)],\n            Props: (x_12) => {\n                x_12.onClick = ((_arg6) => importDatabase(patternInput[0]));\n            },\n        })), box()((_arg5) => {\n        })(arg10_8))]), stack()((x_9) => {\n            x_9.spacing = \"15px\";\n        })(arg10_6))]]),\n        Props: (x_3) => {\n            x_3.flex = \"1\";\n            x_3.overflowY = \"auto\";\n            x_3.flexBasis = 0;\n        },\n    });\n}\n\nexport function DatabaseFormWrapper() {\n    const hydrateDatabase = useHydrateDatabase();\n    let setDatabaseIdSet;\n    const setter = Jotai_jotaiUtils.useUpdateAtom(Atoms_databaseIdSet);\n    setDatabaseIdSet = ((value) => {\n        setter(value);\n    });\n    const setRightDock = Jotai_jotaiUtils.useUpdateAtom(Atoms_rightDock);\n    const databaseUIFlag = Jotai_jotaiUtils.useAtomValue(Atoms_uiFlag(new Atoms_UIFlagType(0)));\n    const databaseId_1 = (databaseUIFlag.tag === 1) ? databaseUIFlag.fields[0] : (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Id;\n    return createElement(DatabaseForm, {\n        databaseId: databaseId_1,\n        onSave: (database) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (hydrateDatabase([new AtomScope(0), database]).then((() => (((!equals(database.Id, databaseId_1)) ? ((void setTimeout(() => {\n            setDatabaseIdSet((set$) => add(database.Id, set$));\n        }, 0), Promise.resolve())) : (Promise.resolve())).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            setRightDock(void 0);\n            return Promise.resolve();\n        })))))))),\n    });\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { useCallback, Atoms_isTesting } from \"../Bindings/Store.fs.js\";\nimport { Atoms_Attachment_attachment, Atoms_Attachment_timestamp, Atoms_ctrlPressed } from \"../State.fs.js\";\nimport { useFeliz_React__React_useState_Static_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { newGuid } from \"../../.fable/fable-library.3.2.7/Guid.js\";\nimport { Attachment, Comment$, FlukeDateTime, FlukeDate, Year, AttachmentId } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { minute, hour, day, month, year, now } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { enum_type, int32_type, parseEnum } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { int32ToString } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { FlukeTime, Minute, Hour, Day } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport * as fi from \"react-icons/fi\";\nimport { Browser_Types_Event__Event_get_Value } from \"../../.fable/Fable.React.7.4.1/Fable.React.Extensions.fs.js\";\nimport { flex } from \"../Bindings/Chakra.fs.js\";\nimport { Input } from \"./Input.fs.js\";\nimport { ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as fa from \"react-icons/fa\";\n\nexport function AddAttachmentInput(addAttachmentInputInputProps) {\n    let input, arg10_3, cmp_3;\n    const onAdd = addAttachmentInputInputProps.onAdd;\n    const isTesting = Jotai_jotaiUtils.useAtomValue(Atoms_isTesting);\n    const ctrlPressed = Jotai_jotaiUtils.useAtomValue(Atoms_ctrlPressed);\n    const patternInput = useFeliz_React__React_useState_Static_1505(\"\");\n    const setAddAttachmentText = patternInput[1];\n    const addAttachmentText = patternInput[0];\n    const addAttachment = useCallback((_arg2, setter, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let str, date, date_1, date_2;\n        if (((str = addAttachmentText, (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))).tag === 0) {\n            const attachmentId = new AttachmentId(0, newGuid());\n            const atom_2 = Atoms_Attachment_timestamp(attachmentId);\n            const value = (date = now(), new FlukeDateTime((date_1 = date, new FlukeDate(new Year(0, year(date_1)), parseEnum(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), int32ToString(month(date_1))), new Day(0, day(date_1)))), (date_2 = date, new FlukeTime(new Hour(0, hour(date_2)), new Minute(0, minute(date_2))))));\n            setter(atom_2, value);\n            setter(Atoms_Attachment_attachment(attachmentId), new Attachment(0, new Comment$(0, addAttachmentText)));\n            return onAdd(attachmentId).then((() => {\n                setAddAttachmentText(\"\");\n                return Promise.resolve();\n            }));\n        }\n        else {\n            return Promise.resolve();\n        }\n    })), [onAdd, addAttachmentText, setAddAttachmentText]);\n    const arg10_2 = ofArray([(input = {\n        CustomProps: (x_1) => {\n            x_1.textarea = true;\n            x_1.fixedValue = addAttachmentText;\n            x_1.autoFocusOnAllMounts = true;\n            x_1.onEnterPress = ((_arg3) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (ctrlPressed ? (addAttachment().then((() => (Promise.resolve(undefined))))) : (Promise.resolve())))));\n        },\n        Icon: react.createElement(fi.FiPaperclip, void 0),\n        Props: (x_2) => {\n            x_2.placeholder = \"Add Attachment\";\n            x_2.autoFocus = true;\n            x_2.maxHeight = \"200px\";\n            x_2.borderBottomRightRadius = \"0\";\n            x_2.borderTopRightRadius = \"0\";\n            x_2.onChange = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                setAddAttachmentText(Browser_Types_Event__Event_get_Value(e));\n                return Promise.resolve();\n            })));\n        },\n    }, (arg10_3 = ofArray([flex()((x_4) => {\n        x_4.zIndex = 0;\n        x_4.position = \"absolute\";\n        x_4.left = \"9px\";\n        x_4.height = \"calc(var(--chakra-fontSizes-main) * 2.45)\";\n        x_4.alignItems = \"center\";\n    })([input.Icon]), createElement(Input, {\n        CustomProps: input.CustomProps,\n        Props: (x_5) => {\n            x_5.paddingLeft = \"28px\";\n            input.Props(x_5);\n        },\n    })]), flex()((x_3) => {\n        x_3.flex = \"1\";\n        x_3.position = \"relative\";\n    })(arg10_3))), createElement(Button, {\n        Children: [],\n        Hint: void 0,\n        Icon: [(cmp_3 = fa.FaPlus, () => react.createElement(cmp_3, void 0)), new IconPosition(0)],\n        Props: (x_6) => {\n            if (isTesting) {\n                x_6[\"data-testid\"] = \"Add Attachment\";\n            }\n            x_6.borderBottomLeftRadius = \"0\";\n            x_6.borderTopLeftRadius = \"0\";\n            x_6.onClick = ((_arg4) => addAttachment());\n        },\n    })]);\n    return flex()((x) => {\n        x.alignItems = \"flex-end\";\n    })(arg10_2);\n}\n\n","import { append, singleton, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { ofArray, singleton as singleton_1, map, isEmpty } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { stack, flex, box } from \"../Bindings/Chakra.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { createElement } from \"react\";\nimport { AddAttachmentInput } from \"./AddAttachmentInput.fs.js\";\n\nexport function AttachmentPanel(attachmentPanelInputProps) {\n    let arg10_1;\n    const onAdd = attachmentPanelInputProps.onAdd;\n    const attachments = attachmentPanelInputProps.attachments;\n    const arg10 = ofArray([(arg10_1 = toList(delay(() => {\n        let arg10_3;\n        return isEmpty(attachments) ? singleton(box()((_arg1) => {\n        })([\"No attachments found\"])) : singleton((arg10_3 = toList(delay(() => map((tupledArg) => {\n            const attachment = tupledArg[1];\n            const arg10_4 = toList(delay(() => {\n                let arg10_5, arg10_7, _arg7, _arg6, _arg1_1;\n                return (attachment.tag === 0) ? append(singleton((arg10_5 = ofArray([box()((_arg2) => {\n                })([\"Comment\"]), (arg10_7 = singleton_1((_arg7 = tupledArg[0], toText(interpolate(\"%P() %P()\", [(_arg6 = _arg7.Date, toText(interpolate(\"%d%P()-%02d%P()-%02d%P()\", [_arg6.Year.fields[0], _arg6.Month, _arg6.Day.fields[0]]))), (_arg1_1 = _arg7.Time, toText(interpolate(\"%02d%P():%02d%P()\", [_arg1_1.Hour.fields[0], _arg1_1.Minute.fields[0]])))])))), box()((x_5) => {\n                    x_5.lineHeight = \"16px\";\n                })(arg10_7))]), flex()((x_4) => {\n                    x_4.justifyContent = \"space-between\";\n                    x_4.color = \"whiteAlpha.600\";\n                })(arg10_5))), delay(() => singleton(box()((_arg3) => {\n                })([attachment.fields[0].fields[0]])))) : singleton(\"???\");\n            }));\n            return stack()((x_3) => {\n                x_3.flex = \"1\";\n            })(arg10_4);\n        }, attachments))), stack()((x_2) => {\n            x_2.spacing = \"10px\";\n        })(arg10_3)));\n    })), stack()((x_1) => {\n        x_1.flex = \"1\";\n        x_1.display = \"contents\";\n        x_1.overflowY = \"auto\";\n        x_1.flexBasis = 0;\n    })(arg10_1)), createElement(AddAttachmentInput, {\n        onAdd: onAdd,\n    })]);\n    return stack()((x) => {\n        x.spacing = \"15px\";\n        x.flex = \"1\";\n    })(arg10);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_UIFlagType, Atoms_uiFlag, TextKey, Atoms_accordionFlag, Atoms_informationAttachmentMap, Selectors_Information_attachments } from \"../State.fs.js\";\nimport { useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { tryFind, add } from \"../../.fable/fable-library.3.2.7/Map.js\";\nimport { empty, add as add_1 } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { compare } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { createElement } from \"react\";\nimport { Accordion } from \"./Accordion.fs.js\";\nimport { isNullOrWhiteSpace, interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { Information_Name_Z233FE4C2 } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { ofArray, singleton } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { stack, box } from \"../Bindings/Chakra.fs.js\";\nimport { AttachmentPanel } from \"./AttachmentPanel.fs.js\";\n\nexport function InformationForm(informationFormInputProps) {\n    let arg10_1, arg10_2, informationName, activePatternResult37001, str, activePatternResult37002, str_4, arg10_3;\n    const information = informationFormInputProps.information;\n    const attachments = Jotai_jotaiUtils.useAtomValue(Selectors_Information_attachments(information));\n    const onAttachmentAdd = useCallback((_arg1, setter, attachmentId) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        setter(Atoms_informationAttachmentMap, (informationAttachmentMap) => add(information, add_1(attachmentId, defaultArg(tryFind(information, informationAttachmentMap), empty({\n            Compare: (x, y) => compare(x, y),\n        }))), informationAttachmentMap));\n        return Promise.resolve();\n    })), [information]);\n    return createElement(Accordion, {\n        Atom: Atoms_accordionFlag(new TextKey(0, \"InformationForm\")),\n        Items: ofArray([[\"Info\", (arg10_1 = singleton((arg10_2 = singleton(toText(interpolate(\"Information: %P()\", [(informationName = Information_Name_Z233FE4C2(information), (informationName.tag === 0) ? informationName.fields[0].fields[0] : ((informationName.tag === 2) ? informationName.fields[0].fields[0] : ((activePatternResult37001 = ((str = informationName.fields[0].fields[0], (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))), (activePatternResult37001.tag === 0) ? ((activePatternResult37002 = ((str_4 = informationName.fields[1].fields[0], (str_4 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_4) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_4))))), (activePatternResult37002.tag === 0) ? toText(interpolate(\"%P()/%P()\", [activePatternResult37001.fields[0], activePatternResult37002.fields[0]])) : \"\")) : \"\"))))]))), box()((_arg2) => {\n        })(arg10_2))), stack()((x_2) => {\n            x_2.spacing = \"10px\";\n        })(arg10_1))], [\"Attachments\", (arg10_3 = singleton(createElement(AttachmentPanel, {\n            attachments: attachments,\n            onAdd: onAttachmentAdd,\n        })), stack()((x_3) => {\n            x_3.spacing = \"10px\";\n            x_3.flex = \"1\";\n        })(arg10_3))]]),\n        Props: (x_1) => {\n            x_1.flex = \"1\";\n            x_1.overflowY = \"auto\";\n            x_1.flexBasis = 0;\n        },\n    });\n}\n\nexport function InformationFormWrapper() {\n    const informationUIFlag = Jotai_jotaiUtils.useAtomValue(Atoms_uiFlag(new Atoms_UIFlagType(1)));\n    const information_1 = (informationUIFlag.tag === 2) ? informationUIFlag.fields[0] : (void 0);\n    if (information_1 != null) {\n        const information_2 = information_1;\n        return createElement(InformationForm, {\n            information: information_2,\n        });\n    }\n    else {\n        return box()((x) => {\n            x.padding = \"15px\";\n        })([\"No information selected\"]);\n    }\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Selectors_Database_isReadWrite, Atoms_databaseIdSet, Atoms_Database_name } from \"../State.fs.js\";\nimport { useHydrateDatabase } from \"../Hooks/Hydrate.fs.js\";\nimport { useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { add, toList } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { singleton as singleton_1, empty, sortBy, sort, tryFindIndex, map, toArray, ofArray, item, mapIndexed, choose } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { AtomScope, Atoms_isTesting, waitForAll } from \"../Bindings/Store.fs.js\";\nimport { map as map_1, defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { compare, equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { singleton, append, delay, toList as toList_1 } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Hint as Hint_2 } from \"./Hint.fs.js\";\nimport { box, stack, flex } from \"../Bindings/Chakra.fs.js\";\nimport { Dropdown } from \"./Dropdown.fs.js\";\nimport { DropdownMenuButton } from \"./DropdownMenuButton.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { DatabaseForm } from \"./DatabaseForm.fs.js\";\nimport { Database, DatabaseAccess, DatabaseName, DatabaseId } from \"../../../Fluke.Shared/Domain/State.fs.js\";\nimport { Username } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as fi from \"react-icons/fi\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { Task, Scheduling as Scheduling_1, ManualScheduling, Information as Information_1, Area, AreaName, TaskName, TaskId } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\n\nexport function DatabaseSelector(databaseSelectorInputProps) {\n    let input, arg10_1;\n    const onChange = databaseSelectorInputProps.onChange;\n    const taskId = databaseSelectorInputProps.taskId;\n    const databaseId = databaseSelectorInputProps.databaseId;\n    const patternInput = Jotai_jotaiUtils.useAtomValue(Atoms_Database_name(databaseId));\n    const databaseIdSet = Jotai_jotaiUtils.useAtomValue(Atoms_databaseIdSet);\n    let setDatabaseIdSet;\n    const setter = Jotai_jotaiUtils.useUpdateAtom(Atoms_databaseIdSet);\n    setDatabaseIdSet = ((value) => {\n        setter(value);\n    });\n    const hydrateDatabase = useHydrateDatabase();\n    const databaseIdList = useReact_useMemo_CF4EA67(() => toList(databaseIdSet), [databaseIdSet]);\n    const filteredDatabaseIdList = choose((x) => x, mapIndexed((i, isReadWrite) => {\n        const matchValue = isReadWrite;\n        let pattern_matching_result;\n        if (matchValue != null) {\n            if (matchValue) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return item(i, databaseIdList);\n            }\n            case 1: {\n                return void 0;\n            }\n        }\n    }, ofArray(Jotai_jotaiUtils.useAtomValue(waitForAll(toArray(map(Selectors_Database_isReadWrite, databaseIdList)))))));\n    const databaseNameList = map((arg00) => arg00.fields[0], ofArray(Jotai_jotaiUtils.useAtomValue(waitForAll(toArray(map(Atoms_Database_name, filteredDatabaseIdList))))));\n    const index = useReact_useMemo_CF4EA67(() => defaultArg(tryFindIndex((y_1) => equals(databaseId, y_1), sort(filteredDatabaseIdList, {\n        Compare: (x_1, y) => compare(x_1, y),\n    })), -1), [filteredDatabaseIdList, databaseId]) | 0;\n    const isTesting = Jotai_jotaiUtils.useAtomValue(Atoms_isTesting);\n    const arg10 = ofArray([(input = {\n        Hint: void 0,\n        HintTitle: void 0,\n        Label: \"Database\",\n        Props: (x_3) => {\n            x_3.marginBottom = \"5px\";\n        },\n    }, (arg10_1 = toList_1(delay(() => append(singleton(input.Label), delay(() => {\n        const matchValue_1 = input.Hint;\n        if (matchValue_1 == null) {\n            return singleton(Helpers_nothing);\n        }\n        else {\n            const hint = matchValue_1;\n            return singleton(createElement(Hint_2, {\n                props: (x_4) => {\n                    let matchValue_2;\n                    x_4.hint = hint;\n                    x_4.hintTitle = ((matchValue_2 = input.HintTitle, (matchValue_2 == null) ? input.Label : matchValue_2));\n                },\n            }));\n        }\n    })))), flex()(input.Props)(arg10_1))), createElement(Dropdown, {\n        Body: (onHide) => {\n            let arg10_2;\n            return ofArray([(arg10_2 = toList_1(delay(() => map((option_3) => defaultArg(option_3, Helpers_nothing), map((option_2) => map_1((tuple_1) => tuple_1[1], option_2), sortBy((option_1) => map_1((tuple) => tuple[0], option_1), mapIndexed((i_1, databaseId_1) => {\n                const label = item(i_1, databaseNameList);\n                return [label, createElement(DropdownMenuButton, {\n                    Checked: index === i_1,\n                    Label: label,\n                    OnClick: () => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        onChange(databaseId_1);\n                        onHide();\n                        return Promise.resolve();\n                    })),\n                })];\n            }, filteredDatabaseIdList), {\n                Compare: (x_7, y_2) => compare(x_7, y_2),\n            }))))), stack()((x_6) => {\n                x_6.flex = \"1\";\n                x_6.spacing = \"1px\";\n                x_6.padding = \"1px\";\n                x_6.marginBottom = \"6px\";\n                x_6.maxHeight = \"217px\";\n                x_6.overflowY = \"auto\";\n                x_6.flexBasis = 0;\n            })(arg10_2)), createElement(Dropdown, {\n                Body: (onHide_1) => singleton_1(createElement(DatabaseForm, {\n                    databaseId: (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Id,\n                    onSave: (database) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (hydrateDatabase([new AtomScope(0), database]).then((() => {\n                        void setTimeout(() => {\n                            setDatabaseIdSet((set$_1) => add(database.Id, set$_1));\n                        }, 0);\n                        onHide_1();\n                        return Promise.resolve();\n                    }))))),\n                })),\n                Left: true,\n                Tooltip: \"\",\n                Trigger: (visible_1, setVisible_1) => {\n                    let cmp_5;\n                    return createElement(Button, {\n                        Children: [\"Add Database\"],\n                        Hint: void 0,\n                        Icon: [(cmp_5 = (visible_1 ? fi.FiChevronUp : fi.FiChevronDown), () => react.createElement(cmp_5, void 0)), new IconPosition(1)],\n                        Props: (x_8) => {\n                            x_8.onClick = ((_arg2_1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                setVisible_1(!visible_1);\n                                return Promise.resolve();\n                            })));\n                        },\n                    });\n                },\n            })]);\n        },\n        Left: true,\n        Tooltip: \"\",\n        Trigger: (visible, setVisible) => {\n            let Icon, cmp;\n            return createElement(Button, (Icon = [(cmp = fi.FiChevronDown, () => react.createElement(cmp, void 0)), new IconPosition(1)], {\n                Children: toList_1(delay(() => {\n                    let activePatternResult41845, str;\n                    return (activePatternResult41845 = ((str = patternInput.fields[0], (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))), (activePatternResult41845.tag === 0) ? singleton(activePatternResult41845.fields[0]) : singleton(\"Select...\"));\n                })),\n                Hint: void 0,\n                Icon: Icon,\n                Props: (x_5) => {\n                    x_5.onClick = ((_arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        setVisible(!visible);\n                        return Promise.resolve();\n                    })));\n                    if (!equals(taskId, (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_1(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_1(0, new ManualScheduling(1)), void 0)).Id)) {\n                        x_5.isDisabled = true;\n                    }\n                },\n            }));\n        },\n    })]);\n    return box()((x_2) => {\n        if (isTesting) {\n            x_2[\"data-testid\"] = \"DatabaseSelector\";\n        }\n    })(arg10);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_darkMode } from \"../State.fs.js\";\nimport { stack, box, radio } from \"../Bindings/Chakra.fs.js\";\nimport { delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\n\nexport function Radio(radioInputProps) {\n    let arg10_2;\n    const children = radioInputProps.children;\n    const props = radioInputProps.props;\n    const darkMode = Jotai_jotaiUtils.useAtomValue(Atoms_darkMode);\n    const arg10 = ofArray([radio()((x_1) => {\n        x_1.colorScheme = \"purple\";\n        x_1.borderColor = (darkMode ? \"#484848\" : \"#b7b7b7\");\n        x_1.size = \"lg\";\n        props(x_1);\n    })([]), (arg10_2 = toList(delay(() => children)), box()((_arg1) => {\n    })(arg10_2))]);\n    return stack()((x) => {\n        x.spacing = \"4px\";\n        x.alignItems = \"center\";\n        x.direction = \"row\";\n    })(arg10);\n}\n\n","import { stack, box, useToast } from \"../Bindings/Chakra.fs.js\";\nimport { useFeliz_React__React_useState_Static_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { some } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { AreaName, Area } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Input } from \"./Input.fs.js\";\nimport { Browser_Types_Event__Event_get_Value } from \"../../.fable/Fable.React.7.4.1/Fable.React.Extensions.fs.js\";\nimport { ofArray, singleton } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as fi from \"react-icons/fi\";\n\nexport function AreaForm(areaFormInputProps) {\n    let arg10_2, cmp;\n    const onSave = areaFormInputProps.onSave;\n    const area = areaFormInputProps.area;\n    const toast = useToast();\n    const patternInput = useFeliz_React__React_useState_Static_1505(area.Name);\n    const areaName = patternInput[0];\n    const onSave_1 = useCallback((_arg3, _arg2, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let activePatternResult36978, str_1;\n        if (((activePatternResult36978 = ((str_1 = areaName.fields[0], (str_1 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_1) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_1))))), (activePatternResult36978.tag === 1) ? some(void 0) : ((activePatternResult36978.tag === 2) ? some(void 0) : (void 0)))) != null) {\n            toast((x) => {\n                x.description = \"Invalid name\";\n            });\n            return Promise.resolve();\n        }\n        else {\n            const area_1 = new Area(areaName);\n            return onSave(area_1).then((() => (Promise.resolve(undefined))));\n        }\n    })), [areaName, onSave, toast]);\n    const arg10 = ofArray([box()((x_2) => {\n        x_2.fontSize = \"15px\";\n    })([\"Add Area\"]), (arg10_2 = singleton(createElement(Input, {\n        CustomProps: (x_4) => {\n            x_4.fixedValue = areaName.fields[0];\n            x_4.onEnterPress = onSave_1;\n        },\n        Props: (x_5) => {\n            x_5.autoFocus = true;\n            x_5.label = \"Name\";\n            x_5.placeholder = \"e.g. chores\";\n            x_5.onChange = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                patternInput[1](new AreaName(0, Browser_Types_Event__Event_get_Value(e)));\n                return Promise.resolve();\n            })));\n        },\n    })), stack()((x_3) => {\n        x_3.spacing = \"15px\";\n    })(arg10_2)), createElement(Button, {\n        Children: [\"Save\"],\n        Hint: void 0,\n        Icon: [(cmp = fi.FiSave, () => react.createElement(cmp, void 0)), new IconPosition(0)],\n        Props: (x_6) => {\n            x_6.onClick = onSave_1;\n        },\n    })]);\n    return stack()((x_1) => {\n        x_1.spacing = \"18px\";\n    })(arg10);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Selectors_Session_informationSet } from \"../State.fs.js\";\nimport { useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { ofArray, singleton as singleton_1, mapIndexed, sort, tryFindIndex, choose, sortBy } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { add, toList } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { Information } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { compare, equals, comparePrimitives } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { Atoms_isTesting } from \"../Bindings/Store.fs.js\";\nimport { stack, box, flex, link } from \"../Bindings/Chakra.fs.js\";\nimport { externalLinkIcon } from \"./ExternalLink.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Tooltip as Tooltip_2 } from \"./Tooltip.fs.js\";\nimport { singleton, append, delay, toList as toList_1 } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { Hint as Hint_3 } from \"./Hint.fs.js\";\nimport { Dropdown } from \"./Dropdown.fs.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as fi from \"react-icons/fi\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { AreaForm } from \"./AreaForm.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\n\nexport function AreaSelector(areaSelectorInputProps) {\n    let input_1, input, label, children, arg10_2;\n    const onSelect = areaSelectorInputProps.onSelect;\n    const area = areaSelectorInputProps.area;\n    const informationSet = Jotai_jotaiUtils.useAtomValue(Selectors_Session_informationSet);\n    const sortedAreaList = useReact_useMemo_CF4EA67(() => {\n        let set$_1;\n        return sortBy((area_2) => area_2.Name.fields[0], choose((_arg1) => {\n            if (_arg1.tag === 1) {\n                return _arg1.fields[0];\n            }\n            else {\n                return void 0;\n            }\n        }, toList((set$_1 = informationSet, (!(!isNullOrWhiteSpace(area.Name.fields[0]))) ? set$_1 : add(new Information(1, area), set$_1)))), {\n            Compare: (x, y) => comparePrimitives(x, y),\n        });\n    }, [informationSet, area]);\n    const index = useReact_useMemo_CF4EA67(() => defaultArg(tryFindIndex((y_2) => equals(area, y_2), sort(sortedAreaList, {\n        Compare: (x_1, y_1) => compare(x_1, y_1),\n    })), -1), [sortedAreaList, area]) | 0;\n    const isTesting = Jotai_jotaiUtils.useAtomValue(Atoms_isTesting);\n    const arg10 = ofArray([(input_1 = {\n        Hint: (input = {\n            Href: \"https://fortelabs.co/blog/para/\",\n            Link: \"Read documentation\",\n            Props: (_arg1_1) => {\n            },\n        }, (label = input.Href, (children = [link()((x_3) => {\n            x_3.href = input.Href;\n            x_3.isExternal = true;\n            input.Props(x_3);\n        })([input.Link, externalLinkIcon])], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children) : createElement(Tooltip_2, {\n            props: (x_4) => {\n                x_4.label = label;\n            },\n            wrapperProps: (_arg1_2) => {\n            },\n            children: children,\n        })))),\n        HintTitle: void 0,\n        Label: \"Area\",\n        Props: (x_5) => {\n            x_5.marginBottom = \"5px\";\n        },\n    }, (arg10_2 = toList_1(delay(() => append(singleton(input_1.Label), delay(() => {\n        const matchValue = input_1.Hint;\n        if (matchValue == null) {\n            return singleton(Helpers_nothing);\n        }\n        else {\n            const hint = matchValue;\n            return singleton(createElement(Hint_3, {\n                props: (x_6) => {\n                    let matchValue_1;\n                    x_6.hint = hint;\n                    x_6.hintTitle = ((matchValue_1 = input_1.HintTitle, (matchValue_1 == null) ? input_1.Label : matchValue_1));\n                },\n            }));\n        }\n    })))), flex()(input_1.Props)(arg10_2))), createElement(Dropdown, {\n        Body: (onHide) => {\n            let arg10_3;\n            return ofArray([(arg10_3 = toList_1(delay(() => mapIndexed((i, area_3) => {\n                let cmp_4;\n                return createElement(Button, {\n                    Children: [area_3.Name.fields[0]],\n                    Hint: void 0,\n                    Icon: [(index === i) ? ((cmp_4 = fi.FiCheck, () => react.createElement(cmp_4, void 0))) : (() => box()((x_9) => {\n                        x_9.width = \"11px\";\n                    })([])), new IconPosition(0)],\n                    Props: (x_10) => {\n                        x_10.onClick = ((_arg3) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            onSelect(area_3);\n                            onHide();\n                            return Promise.resolve();\n                        })));\n                        x_10.alignSelf = \"stretch\";\n                        x_10.backgroundColor = \"whiteAlpha.100\";\n                        x_10.borderRadius = \"2px\";\n                    },\n                });\n            }, sortedAreaList))), stack()((x_8) => {\n                x_8.flex = \"1\";\n                x_8.spacing = \"1px\";\n                x_8.padding = \"1px\";\n                x_8.flexDirection = \"column\";\n                x_8.alignItems = \"stretch\";\n                x_8.marginBottom = \"6px\";\n                x_8.maxHeight = \"217px\";\n                x_8.overflowY = \"auto\";\n                x_8.flexBasis = 0;\n            })(arg10_3)), createElement(Dropdown, {\n                Body: (onHide2) => singleton_1(createElement(AreaForm, {\n                    area: area,\n                    onSave: (area_4) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        onSelect(area_4);\n                        onHide();\n                        onHide2();\n                        return Promise.resolve();\n                    })),\n                })),\n                Left: true,\n                Tooltip: \"\",\n                Trigger: (visible_1, setVisible_1) => {\n                    let cmp_8;\n                    return createElement(Button, {\n                        Children: [\"Add Area\"],\n                        Hint: void 0,\n                        Icon: [(cmp_8 = (visible_1 ? fi.FiChevronUp : fi.FiChevronDown), () => react.createElement(cmp_8, void 0)), new IconPosition(1)],\n                        Props: (x_11) => {\n                            x_11.onClick = ((_arg4) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                setVisible_1(!visible_1);\n                                return Promise.resolve();\n                            })));\n                        },\n                    });\n                },\n            })]);\n        },\n        Left: true,\n        Tooltip: \"\",\n        Trigger: (visible, setVisible) => {\n            let Icon, cmp;\n            return createElement(Button, (Icon = [(cmp = (visible ? fi.FiChevronUp : fi.FiChevronDown), () => react.createElement(cmp, void 0)), new IconPosition(1)], {\n                Children: toList_1(delay(() => {\n                    let activePatternResult41657, str;\n                    return (activePatternResult41657 = ((str = area.Name.fields[0], (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))), (activePatternResult41657.tag === 0) ? singleton(activePatternResult41657.fields[0]) : singleton(\"Select...\"));\n                })),\n                Hint: void 0,\n                Icon: Icon,\n                Props: (x_7) => {\n                    x_7.onClick = ((_arg2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        setVisible(!visible);\n                        return Promise.resolve();\n                    })));\n                },\n            }));\n        },\n    })]);\n    return box()((x_2) => {\n        x_2.display = \"inline\";\n        if (isTesting) {\n            x_2[\"data-testid\"] = \"AreaSelector\";\n        }\n    })(arg10);\n}\n\n","import { stack, box, useToast } from \"../Bindings/Chakra.fs.js\";\nimport { useFeliz_React__React_useState_Static_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { some } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { ProjectName, Project } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { AreaSelector } from \"./AreaSelector.fs.js\";\nimport { Input } from \"./Input.fs.js\";\nimport { Browser_Types_Event__Event_get_Value } from \"../../.fable/Fable.React.7.4.1/Fable.React.Extensions.fs.js\";\nimport { ofArray, singleton } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as fi from \"react-icons/fi\";\n\nexport function ProjectForm(projectFormInputProps) {\n    let arg10_2, cmp;\n    const onSave = projectFormInputProps.onSave;\n    const project = projectFormInputProps.project;\n    const toast = useToast();\n    const patternInput = useFeliz_React__React_useState_Static_1505(project.Name);\n    const projectName = patternInput[0];\n    const patternInput_1 = useFeliz_React__React_useState_Static_1505(project.Area);\n    const area = patternInput_1[0];\n    const onSave_1 = useCallback((_arg3, _arg2, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let activePatternResult36978, str_1, activePatternResult36978_1, str_6;\n        const matchValue_2 = [projectName, area.Name];\n        if (((activePatternResult36978 = ((str_1 = matchValue_2[0].fields[0], (str_1 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_1) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_1))))), (activePatternResult36978.tag === 1) ? some(void 0) : ((activePatternResult36978.tag === 2) ? some(void 0) : (void 0)))) != null) {\n            toast((x) => {\n                x.description = \"Invalid name\";\n            });\n            return Promise.resolve();\n        }\n        else if (((activePatternResult36978_1 = ((str_6 = matchValue_2[1].fields[0], (str_6 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_6) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_6))))), (activePatternResult36978_1.tag === 1) ? some(void 0) : ((activePatternResult36978_1.tag === 2) ? some(void 0) : (void 0)))) != null) {\n            toast((x_1) => {\n                x_1.description = \"Invalid area\";\n            });\n            return Promise.resolve();\n        }\n        else {\n            const project_1 = new Project(projectName, area);\n            return onSave(project_1).then((() => (Promise.resolve(undefined))));\n        }\n    })), [onSave, projectName, area, toast]);\n    const arg10 = ofArray([box()((x_3) => {\n        x_3.fontSize = \"15px\";\n        x_3.textAlign = \"left\";\n    })([\"Add Project\"]), createElement(AreaSelector, {\n        area: area,\n        onSelect: patternInput_1[1],\n    }), (arg10_2 = singleton(createElement(Input, {\n        CustomProps: (x_5) => {\n            x_5.fixedValue = projectName.fields[0];\n            x_5.onEnterPress = onSave_1;\n        },\n        Props: (x_6) => {\n            x_6.autoFocus = true;\n            x_6.label = \"Name\";\n            x_6.placeholder = \"e.g. home renovation\";\n            x_6.onChange = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                patternInput[1](new ProjectName(0, Browser_Types_Event__Event_get_Value(e)));\n                return Promise.resolve();\n            })));\n        },\n    })), stack()((x_4) => {\n        x_4.spacing = \"15px\";\n    })(arg10_2)), createElement(Button, {\n        Children: [\"Save\"],\n        Hint: void 0,\n        Icon: [(cmp = fi.FiSave, () => react.createElement(cmp, void 0)), new IconPosition(0)],\n        Props: (x_7) => {\n            x_7.onClick = onSave_1;\n        },\n    })]);\n    return stack()((x_2) => {\n        x_2.spacing = \"18px\";\n    })(arg10);\n}\n\n","import { Union } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { union_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { interpolate, toText, isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { Resource, ResourceName, Information, Project, Area, AreaName, ProjectName, Information$reflection, Information_Name_Z233FE4C2 } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { Information_toString, Information_isResource, Information_isArea, Information_isProject } from \"../../../Fluke.Shared/Domain/ModelGenerated.fs.js\";\nimport { Atoms_isTesting, InputScope$1, InputAtom$1, Hooks_useAtomFieldOptions } from \"../Bindings/Store.fs.js\";\nimport { TextKey, Selectors_Session_informationSet, Atoms_Task_information } from \"../State.fs.js\";\nimport { Jotai_jotaiUtils, Jotai_AtomReference$1 } from \"../Bindings/Jotai.fs.js\";\nimport { Auto_toString_5A41365E } from \"../../.fable/Thoth.Json.5.1.0/Encode.fs.js\";\nimport { Auto_unsafeFromString_Z5CB6BD } from \"../../.fable/Thoth.Json.5.1.0/Decode.fs.js\";\nimport { useReact_useEffect_Z101E1A95, useFeliz_React__React_useState_Static_1505, useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { add, filter, toList } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { ofArray, mapIndexed, singleton as singleton_1, sort, tryFindIndex } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { compare, equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { radioGroup, stack, box, flex, link } from \"../Bindings/Chakra.fs.js\";\nimport { externalLinkIcon } from \"./ExternalLink.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Tooltip as Tooltip_2 } from \"./Tooltip.fs.js\";\nimport { singleton, append, delay, toList as toList_1 } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { Hint as Hint_3 } from \"./Hint.fs.js\";\nimport { Dropdown } from \"./Dropdown.fs.js\";\nimport { Radio } from \"./Radio.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as fi from \"react-icons/fi\";\nimport { ProjectForm } from \"./ProjectForm.fs.js\";\nimport { AreaForm } from \"./AreaForm.fs.js\";\n\nexport class InformationSelectionType extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Information\", \"Project\", \"Area\", \"Resource\"];\n    }\n}\n\nexport function InformationSelectionType$reflection() {\n    return union_type(\"Fluke.UI.Frontend.Components.InformationSelector.InformationSelectionType\", [], InformationSelectionType, () => [[], [], [], []]);\n}\n\nexport function isVisibleInformation(informationString, information) {\n    let informationName, activePatternResult37001, str, activePatternResult37002, str_4;\n    if (isNullOrWhiteSpace((informationName = Information_Name_Z233FE4C2(information), (informationName.tag === 0) ? informationName.fields[0].fields[0] : ((informationName.tag === 2) ? informationName.fields[0].fields[0] : ((activePatternResult37001 = ((str = informationName.fields[0].fields[0], (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))), (activePatternResult37001.tag === 0) ? ((activePatternResult37002 = ((str_4 = informationName.fields[1].fields[0], (str_4 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_4) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_4))))), (activePatternResult37002.tag === 0) ? toText(interpolate(\"%P()/%P()\", [activePatternResult37001.fields[0], activePatternResult37002.fields[0]])) : \"\")) : \"\")))))) {\n        return false;\n    }\n    else if (Information_isProject(information) ? (informationString === \"Project\") : false) {\n        return true;\n    }\n    else if (Information_isArea(information) ? (informationString === \"Area\") : false) {\n        return true;\n    }\n    else if (Information_isResource(information) ? (informationString === \"Resource\") : false) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function InformationSelector(input) {\n    let input_2, input_1, label, children, arg10_2;\n    const informationFieldOptions = Hooks_useAtomFieldOptions(new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_information(input.TaskId))), new InputScope$1(1, [(obj) => Auto_toString_5A41365E(0, obj, void 0, void 0, void 0, {\n        ResolveType: Information$reflection,\n    }), (data) => Auto_unsafeFromString_Z5CB6BD(data, void 0, void 0, {\n        ResolveType: Information$reflection,\n    })]));\n    const patternInput = useReact_useMemo_CF4EA67(() => {\n        let informationName, activePatternResult37001, str, activePatternResult37002, str_4;\n        return [(informationName = Information_Name_Z233FE4C2(informationFieldOptions.AtomValue), (informationName.tag === 0) ? informationName.fields[0].fields[0] : ((informationName.tag === 2) ? informationName.fields[0].fields[0] : ((activePatternResult37001 = ((str = informationName.fields[0].fields[0], (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))), (activePatternResult37001.tag === 0) ? ((activePatternResult37002 = ((str_4 = informationName.fields[1].fields[0], (str_4 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_4) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_4))))), (activePatternResult37002.tag === 0) ? toText(interpolate(\"%P()/%P()\", [activePatternResult37001.fields[0], activePatternResult37002.fields[0]])) : \"\")) : \"\")))), Information_toString(informationFieldOptions.AtomValue)];\n    }, [informationFieldOptions.AtomValue]);\n    const informationSelected = patternInput[1];\n    const informationName_1 = patternInput[0];\n    const patternInput_1 = useFeliz_React__React_useState_Static_1505(!isNullOrWhiteSpace(informationName_1));\n    const setSelected = patternInput_1[1];\n    const selected = patternInput_1[0];\n    useReact_useEffect_Z101E1A95(() => {\n        if ((!selected) ? (informationName_1.length > 0) : false) {\n            setSelected(true);\n        }\n    }, [selected, informationName_1, setSelected]);\n    const informationSet = Jotai_jotaiUtils.useAtomValue(Selectors_Session_informationSet);\n    const sortedInformationList = useReact_useMemo_CF4EA67(() => toList(filter((information) => isVisibleInformation(informationSelected, information), add(informationFieldOptions.AtomValue, informationSet))), [informationSelected, informationSet, informationFieldOptions.AtomValue]);\n    const index = useReact_useMemo_CF4EA67(() => defaultArg(tryFindIndex((y_1) => equals(informationFieldOptions.AtomValue, y_1), sort(sortedInformationList, {\n        Compare: (x_1, y) => compare(x_1, y),\n    })), -1), [sortedInformationList, informationFieldOptions.AtomValue]) | 0;\n    const isTesting = Jotai_jotaiUtils.useAtomValue(Atoms_isTesting);\n    const arg10 = ofArray([(input_2 = {\n        Hint: (input_1 = {\n            Href: \"https://fortelabs.co/blog/para/\",\n            Link: \"Read documentation\",\n            Props: (_arg1) => {\n            },\n        }, (label = input_1.Href, (children = [link()((x_4) => {\n            x_4.href = input_1.Href;\n            x_4.isExternal = true;\n            input_1.Props(x_4);\n        })([input_1.Link, externalLinkIcon])], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children) : createElement(Tooltip_2, {\n            props: (x_5) => {\n                x_5.label = label;\n            },\n            wrapperProps: (_arg1_1) => {\n            },\n            children: children,\n        })))),\n        HintTitle: void 0,\n        Label: \"Information\",\n        Props: (x_6) => {\n            x_6.marginBottom = \"5px\";\n        },\n    }, (arg10_2 = toList_1(delay(() => append(singleton(input_2.Label), delay(() => {\n        const matchValue = input_2.Hint;\n        if (matchValue == null) {\n            return singleton(Helpers_nothing);\n        }\n        else {\n            const hint = matchValue;\n            return singleton(createElement(Hint_3, {\n                props: (x_7) => {\n                    let matchValue_1;\n                    x_7.hint = hint;\n                    x_7.hintTitle = ((matchValue_1 = input_2.HintTitle, (matchValue_1 == null) ? input_2.Label : matchValue_1));\n                },\n            }));\n        }\n    })))), flex()(input_2.Props)(arg10_2))), createElement(Dropdown, {\n        Body: (onHide) => toList_1(delay(() => {\n            let arg10_3, arg10_4;\n            return append((input.SelectionType.tag === 0) ? singleton((arg10_3 = singleton_1((arg10_4 = toList_1(delay(() => {\n                const label_1 = (text) => box()((x_11) => {\n                    x_11.marginBottom = \"-2px\";\n                })([text]);\n                return append(singleton(createElement(Radio, {\n                    props: (x_12) => {\n                        x_12.value = \"Project\";\n                    },\n                    children: [label_1(\"Project\")],\n                })), delay(() => append(singleton(createElement(Radio, {\n                    props: (x_13) => {\n                        x_13.value = \"Area\";\n                    },\n                    children: [label_1(\"Area\")],\n                })), delay(() => {\n                    let label_2, children_3;\n                    return singleton(createElement(Radio, {\n                        props: (x_14) => {\n                            x_14.value = \"Resource\";\n                            x_14.isDisabled = input.DisableResource;\n                        },\n                        children: [(label_2 = (input.DisableResource ? \"Tasks can\\u0027t be assigned to Resources\" : Helpers_nothing), (children_3 = [label_1(\"Resource\")], equals(label_2, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_3) : createElement(Tooltip_2, {\n                            props: (x_15) => {\n                                x_15.label = label_2;\n                            },\n                            wrapperProps: (_arg1_2) => {\n                            },\n                            children: children_3,\n                        })))],\n                    }));\n                }))));\n            })), stack()((x_10) => {\n                x_10.justifyContent = \"center\";\n                x_10.flex = \"1\";\n                x_10.spacing = \"15px\";\n                x_10.direction = \"row\";\n            })(arg10_4))), radioGroup()((x_9) => {\n                x_9.onChange = ((radioValueSelected) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (((!isVisibleInformation(radioValueSelected, informationFieldOptions.AtomValue)) ? ((radioValueSelected === \"Project\") ? ((informationFieldOptions.SetAtomValue(new Information(0, new Project(new ProjectName(0, \"\"), new Area(new AreaName(0, \"\"))))), Promise.resolve())) : ((radioValueSelected === \"Area\") ? ((informationFieldOptions.SetAtomValue(new Information(1, new Area(new AreaName(0, \"\")))), Promise.resolve())) : ((radioValueSelected === \"Resource\") ? ((informationFieldOptions.SetAtomValue(new Information(2, new Resource(new ResourceName(0, \"\"), new Area(new AreaName(0, \"\"))))), Promise.resolve())) : ((Promise.resolve()))))) : (Promise.resolve())).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    setSelected(true);\n                    return Promise.resolve();\n                }))))));\n                x_9.value = ((!selected) ? null : informationSelected);\n            })(arg10_3))) : singleton(Helpers_nothing), delay(() => {\n                let _arg1_3, matchValue_3, formTextKey, arg10_6;\n                return singleton((_arg1_3 = ((matchValue_3 = [selected, informationSelected], matchValue_3[0] ? ((matchValue_3[1] === \"Project\") ? (new TextKey(0, \"ProjectForm\")) : ((matchValue_3[1] === \"Area\") ? (new TextKey(0, \"AreaForm\")) : ((matchValue_3[1] === \"Resource\") ? (new TextKey(0, \"AreaForm\")) : (void 0)))) : (void 0))), (_arg1_3 != null) ? ((formTextKey = _arg1_3, react.createElement(react.Fragment, {}, (arg10_6 = toList_1(delay(() => mapIndexed((i, information_2) => {\n                    let Icon_1, cmp_4, informationName_2, activePatternResult37001_1, str_12, activePatternResult37002_1, str_16;\n                    return createElement(Button, (Icon_1 = [(index === i) ? ((cmp_4 = fi.FiCheck, () => react.createElement(cmp_4, void 0))) : (() => box()((x_17) => {\n                        x_17.width = \"11px\";\n                    })([])), new IconPosition(0)], {\n                        Children: [(informationName_2 = Information_Name_Z233FE4C2(information_2), (informationName_2.tag === 0) ? informationName_2.fields[0].fields[0] : ((informationName_2.tag === 2) ? informationName_2.fields[0].fields[0] : ((activePatternResult37001_1 = ((str_12 = informationName_2.fields[0].fields[0], (str_12 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_12) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_12))))), (activePatternResult37001_1.tag === 0) ? ((activePatternResult37002_1 = ((str_16 = informationName_2.fields[1].fields[0], (str_16 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_16) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_16))))), (activePatternResult37002_1.tag === 0) ? toText(interpolate(\"%P()/%P()\", [activePatternResult37001_1.fields[0], activePatternResult37002_1.fields[0]])) : \"\")) : \"\"))))],\n                        Hint: void 0,\n                        Icon: Icon_1,\n                        Props: (x_18) => {\n                            x_18.onClick = ((_arg3) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                informationFieldOptions.SetAtomValue(information_2);\n                                onHide();\n                                return Promise.resolve();\n                            })));\n                            x_18.alignSelf = \"stretch\";\n                            x_18.backgroundColor = \"whiteAlpha.100\";\n                            x_18.borderRadius = \"2px\";\n                        },\n                    }));\n                }, sortedInformationList))), stack()((x_16) => {\n                    x_16.flex = \"1\";\n                    x_16.spacing = \"1px\";\n                    x_16.padding = \"1px\";\n                    x_16.marginBottom = \"6px\";\n                    x_16.marginTop = \"10px\";\n                    x_16.maxHeight = \"217px\";\n                    x_16.overflowY = \"auto\";\n                    x_16.flexBasis = 0;\n                })(arg10_6)), createElement(Dropdown, {\n                    Body: (onHide2) => toList_1(delay(() => {\n                        let matchValue_4, matchValue_5;\n                        return (informationSelected === \"Project\") ? singleton(createElement(ProjectForm, {\n                            project: (matchValue_4 = informationFieldOptions.AtomValue, (matchValue_4.tag === 0) ? matchValue_4.fields[0] : (new Project(new ProjectName(0, \"\"), new Area(new AreaName(0, \"\"))))),\n                            onSave: (project_1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                informationFieldOptions.SetAtomValue(new Information(0, project_1));\n                                onHide();\n                                onHide2();\n                                return Promise.resolve();\n                            })),\n                        })) : ((informationSelected === \"Area\") ? singleton(createElement(AreaForm, {\n                            area: (matchValue_5 = informationFieldOptions.AtomValue, (matchValue_5.tag === 1) ? matchValue_5.fields[0] : (new Area(new AreaName(0, \"\")))),\n                            onSave: (area_1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                informationFieldOptions.SetAtomValue(new Information(1, area_1));\n                                onHide();\n                                onHide2();\n                                return Promise.resolve();\n                            })),\n                        })) : ((informationSelected === \"Resource\") ? singleton(Helpers_nothing) : singleton(Helpers_nothing)));\n                    })),\n                    Left: true,\n                    Tooltip: \"\",\n                    Trigger: (visible_1, setVisible_1) => {\n                        let Icon_2, cmp_8;\n                        return createElement(Button, (Icon_2 = [(cmp_8 = (visible_1 ? fi.FiChevronUp : fi.FiChevronDown), () => react.createElement(cmp_8, void 0)), new IconPosition(1)], {\n                            Children: [(informationSelected === \"Project\") ? \"Add Project\" : ((informationSelected === \"Area\") ? \"Add Area\" : ((informationSelected === \"Resource\") ? \"Add Resource\" : \"\"))],\n                            Hint: void 0,\n                            Icon: Icon_2,\n                            Props: (x_19) => {\n                                x_19.onClick = ((_arg4) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                                    setVisible_1(!visible_1);\n                                    return Promise.resolve();\n                                })));\n                            },\n                        }));\n                    },\n                })))) : Helpers_nothing));\n            }));\n        })),\n        Left: true,\n        Tooltip: \"\",\n        Trigger: (visible, setVisible) => {\n            let Icon, cmp;\n            return createElement(Button, (Icon = [(cmp = (visible ? fi.FiChevronUp : fi.FiChevronDown), () => react.createElement(cmp, void 0)), new IconPosition(1)], {\n                Children: toList_1(delay(() => {\n                    let str_8;\n                    return (((str_8 = informationName_1, (str_8 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_8) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_8))))).tag === 0) ? singleton(toText(interpolate(\"%P(): %P()\", [informationSelected, informationName_1]))) : singleton(\"Select...\");\n                })),\n                Hint: void 0,\n                Icon: Icon,\n                Props: (x_8) => {\n                    x_8.onClick = ((_arg2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        setVisible(!visible);\n                        return Promise.resolve();\n                    })));\n                },\n            }));\n        },\n    })]);\n    return box()((x_3) => {\n        x_3.display = \"inline\";\n        if (isTesting) {\n            x_3[\"data-testid\"] = \"InformationSelector\";\n        }\n    })(arg10);\n}\n\n","import { createElement } from \"react\";\nimport * as react from \"react\";\nimport { InputFormat, Input } from \"./Input.fs.js\";\nimport { String_parseIntMin } from \"../../../Fluke.Shared/Core.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { value as value_5, some, defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { Browser_Types_Event__Event_get_Value } from \"../../.fable/Fable.React.7.4.1/Fable.React.Extensions.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { Day$reflection, Day, FixedRecurrency, Recurrency, RecurrencyOffset, Scheduling$reflection, Scheduling, ManualScheduling } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { flex, radioGroup, iconButton, stack, box } from \"../Bindings/Chakra.fs.js\";\nimport { Hint as Hint_1 } from \"./Hint.fs.js\";\nimport { sort, filter, empty, mapIndexed, sortBy, singleton as singleton_1, isEmpty, append as append_1, choose, map as map_1, contains, ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { Radio } from \"./Radio.fs.js\";\nimport { Auto_toString_5A41365E } from \"../../.fable/Thoth.Json.5.1.0/Encode.fs.js\";\nimport { tuple_type, getEnumValues, enum_type, int32_type, getEnumName, option_type } from \"../../.fable/fable-library.3.2.7/Reflection.js\";\nimport { map, singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { Checkbox } from \"./Checkbox.fs.js\";\nimport { int32ToString, compare, comparePrimitives, safeHash, equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { FSharpSet__Add, FSharpSet__Remove, FSharpSet__Contains, map as map_2, toList as toList_1, ofSeq } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { rangeDouble } from \"../../.fable/fable-library.3.2.7/Range.js\";\nimport * as fa from \"react-icons/fa\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { Tooltip as Tooltip_1 } from \"./Tooltip.fs.js\";\nimport * as fi from \"react-icons/fi\";\nimport { Auto_unsafeFromString_Z5CB6BD } from \"../../.fable/Thoth.Json.5.1.0/Decode.fs.js\";\nimport { Jotai_AtomReference$1, Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_Task_scheduling, Atoms_weekStart } from \"../State.fs.js\";\nimport { InputScope$1, InputAtom$1, Hooks_useAtomFieldOptions } from \"../Bindings/Store.fs.js\";\nimport { Dropdown } from \"./Dropdown.fs.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport { interpolate, toText, join } from \"../../.fable/fable-library.3.2.7/String.js\";\n\nexport function NumberInput(numberInputInputProps) {\n    const setValue = numberInputInputProps.setValue;\n    const value = numberInputInputProps.value;\n    return createElement(Input, {\n        CustomProps: (x) => {\n            x.fixedValue = value;\n            x.onValidate = ((arg) => String_parseIntMin(1, arg[0]));\n            x.inputFormat = (new InputFormat(5));\n        },\n        Props: (x_1) => {\n            x_1.width = \"70px\";\n            x_1.onChange = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                setValue(defaultArg(String_parseIntMin(1, Browser_Types_Event__Event_get_Value(e)), 1));\n                return Promise.resolve();\n            })));\n        },\n    });\n}\n\nexport function ManualRadio(manualRadioInputProps) {\n    let arg10;\n    const value = manualRadioInputProps.value;\n    const value_1 = (value.tag === 0) ? ((value.fields[0].tag === 1) ? value : (new Scheduling(0, new ManualScheduling(1)))) : (new Scheduling(0, new ManualScheduling(1)));\n    const children = [(arg10 = ofArray([box()((_arg1) => {\n    })([\"Manual\"]), createElement(Hint_1, {\n        props: (x_1) => {\n            x_1.hint = \"You need to change the cell status to \\u0027Schedule\\u0027 manually\";\n            x_1.hintTitle = \"Manual Scheduling\";\n        },\n    })]), stack()((x) => {\n        x.spacing = \"0\";\n        x.alignItems = \"center\";\n        x.direction = \"row\";\n    })(arg10))];\n    return createElement(Radio, {\n        props: (x_2) => {\n            x_2.value = Auto_toString_5A41365E(0, value_1, void 0, void 0, void 0, {\n                ResolveType: () => option_type(Scheduling$reflection()),\n            });\n            x_2.flexDirection = \"row\";\n        },\n        children: children,\n    });\n}\n\nexport function SuggestedRadio(suggestedRadioInputProps) {\n    let arg10;\n    const value = suggestedRadioInputProps.value;\n    const value_1 = (value.tag === 0) ? ((value.fields[0].tag === 0) ? value : (new Scheduling(0, new ManualScheduling(0)))) : (new Scheduling(0, new ManualScheduling(0)));\n    const children = [(arg10 = ofArray([box()((_arg1) => {\n    })([\"Suggested\"]), createElement(Hint_1, {\n        props: (x_1) => {\n            x_1.hint = \"Displayed with a different color and is always visible on all views\";\n            x_1.hintTitle = \"Suggested Scheduling\";\n        },\n    })]), stack()((x) => {\n        x.spacing = \"0\";\n        x.alignItems = \"center\";\n        x.direction = \"row\";\n    })(arg10))];\n    return createElement(Radio, {\n        props: (x_2) => {\n            x_2.value = Auto_toString_5A41365E(0, value_1, void 0, void 0, void 0, {\n                ResolveType: () => option_type(Scheduling$reflection()),\n            });\n            x_2.flexDirection = \"row\";\n        },\n        children: children,\n    });\n}\n\nexport function OffsetDaysRadio(offsetDaysRadioInputProps) {\n    let arg10;\n    const setValue = offsetDaysRadioInputProps.setValue;\n    const value = offsetDaysRadioInputProps.value;\n    const value_2 = (value.tag === 1) ? ((value.fields[0].tag === 0) ? ((value.fields[0].fields[0].tag === 0) ? value : (new Scheduling(1, new Recurrency(0, new RecurrencyOffset(0, 1))))) : (new Scheduling(1, new Recurrency(0, new RecurrencyOffset(0, 1))))) : (new Scheduling(1, new Recurrency(0, new RecurrencyOffset(0, 1))));\n    const children = [(arg10 = ofArray([box()((_arg1) => {\n    })([\"Every\"]), createElement(NumberInput, {\n        value: (value.tag === 1) ? ((value.fields[0].tag === 0) ? ((value.fields[0].fields[0].tag === 0) ? value.fields[0].fields[0].fields[0] : 1) : 1) : 1,\n        setValue: (value_1) => {\n            setValue(new Scheduling(1, new Recurrency(0, new RecurrencyOffset(0, value_1))));\n        },\n    }), box()((_arg2) => {\n    })([\"days\"])]), stack()((x) => {\n        x.alignItems = \"center\";\n        x.direction = \"row\";\n    })(arg10))];\n    return createElement(Radio, {\n        props: (x_1) => {\n            x_1.value = Auto_toString_5A41365E(0, value_2, void 0, void 0, void 0, {\n                ResolveType: () => option_type(Scheduling$reflection()),\n            });\n            x_1.flexDirection = \"row\";\n        },\n        children: children,\n    });\n}\n\nexport function OffsetWeeksRadio(offsetWeeksRadioInputProps) {\n    let arg10;\n    const setValue = offsetWeeksRadioInputProps.setValue;\n    const value = offsetWeeksRadioInputProps.value;\n    const value_2 = (value.tag === 1) ? ((value.fields[0].tag === 0) ? ((value.fields[0].fields[0].tag === 1) ? value : (new Scheduling(1, new Recurrency(0, new RecurrencyOffset(1, 1))))) : (new Scheduling(1, new Recurrency(0, new RecurrencyOffset(1, 1))))) : (new Scheduling(1, new Recurrency(0, new RecurrencyOffset(1, 1))));\n    const children = [(arg10 = ofArray([box()((_arg1) => {\n    })([\"Every\"]), createElement(NumberInput, {\n        value: (value.tag === 1) ? ((value.fields[0].tag === 0) ? ((value.fields[0].fields[0].tag === 1) ? value.fields[0].fields[0].fields[0] : 1) : 1) : 1,\n        setValue: (value_1) => {\n            setValue(new Scheduling(1, new Recurrency(0, new RecurrencyOffset(1, value_1))));\n        },\n    }), box()((_arg2) => {\n    })([\"weeks\"])]), stack()((x) => {\n        x.alignItems = \"center\";\n        x.direction = \"row\";\n    })(arg10))];\n    return createElement(Radio, {\n        props: (x_1) => {\n            x_1.value = Auto_toString_5A41365E(0, value_2, void 0, void 0, void 0, {\n                ResolveType: () => option_type(Scheduling$reflection()),\n            });\n            x_1.flexDirection = \"row\";\n        },\n        children: children,\n    });\n}\n\nexport function OffsetMonthsRadio(offsetMonthsRadioInputProps) {\n    let arg10;\n    const setValue = offsetMonthsRadioInputProps.setValue;\n    const value = offsetMonthsRadioInputProps.value;\n    const value_2 = (value.tag === 1) ? ((value.fields[0].tag === 0) ? ((value.fields[0].fields[0].tag === 2) ? value : (new Scheduling(1, new Recurrency(0, new RecurrencyOffset(2, 1))))) : (new Scheduling(1, new Recurrency(0, new RecurrencyOffset(2, 1))))) : (new Scheduling(1, new Recurrency(0, new RecurrencyOffset(2, 1))));\n    const children = [(arg10 = ofArray([box()((_arg1) => {\n    })([\"Every\"]), createElement(NumberInput, {\n        value: (value.tag === 1) ? ((value.fields[0].tag === 0) ? ((value.fields[0].fields[0].tag === 2) ? value.fields[0].fields[0].fields[0] : 1) : 1) : 1,\n        setValue: (value_1) => {\n            setValue(new Scheduling(1, new Recurrency(0, new RecurrencyOffset(2, value_1))));\n        },\n    }), box()((_arg2) => {\n    })([\"months\"])]), stack()((x) => {\n        x.alignItems = \"center\";\n        x.direction = \"row\";\n    })(arg10))];\n    return createElement(Radio, {\n        props: (x_1) => {\n            x_1.value = Auto_toString_5A41365E(0, value_2, void 0, void 0, void 0, {\n                ResolveType: () => option_type(Scheduling$reflection()),\n            });\n            x_1.flexDirection = \"row\";\n        },\n        children: children,\n    });\n}\n\nexport function FixedWeeklyRadio(fixedWeeklyRadioInputProps) {\n    const weekStart = fixedWeeklyRadioInputProps.weekStart;\n    const setValue = fixedWeeklyRadioInputProps.setValue;\n    const value = fixedWeeklyRadioInputProps.value;\n    const arg10 = toList(delay(() => append(singleton(box()((_arg1) => {\n    })([\"Weekly: \"])), delay(() => map((dayOfWeek) => {\n        let arg10_3;\n        const arg10_2 = ofArray([createElement(Checkbox, {\n            label: void 0,\n            props: (x_4) => {\n                x_4.isChecked = ((value.tag === 1) ? ((value.fields[0].tag === 1) ? (contains(new FixedRecurrency(0, dayOfWeek), value.fields[0].fields[0], {\n                    Equals: (x_5, y_1) => equals(x_5, y_1),\n                    GetHashCode: (x_5) => safeHash(x_5),\n                }) ? true : false) : false) : false);\n                x_4.onChange = ((_arg2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    let tmp, weeklySet, newList, value_3, set$_1;\n                    setValue((value.tag === 1) ? ((value.fields[0].tag === 1) ? ((tmp = map_1((_arg1_1) => {\n                        if (_arg1_1.tag === 0) {\n                            return [_arg1_1.fields[0], void 0];\n                        }\n                        else {\n                            return [void 0, _arg1_1];\n                        }\n                    }, value.fields[0].fields[0]), (weeklySet = ofSeq(choose((tuple) => tuple[0], tmp), {\n                        Compare: (x_6, y_2) => comparePrimitives(x_6, y_2),\n                    }), (newList = append_1(choose((tuple_1) => tuple_1[1], tmp), toList_1(map_2((arg0) => (new FixedRecurrency(0, arg0)), (value_3 = (dayOfWeek | 0), (set$_1 = weeklySet, FSharpSet__Contains(set$_1, value_3) ? FSharpSet__Remove(set$_1, value_3) : FSharpSet__Add(set$_1, value_3))), {\n                        Compare: (x_7, y_3) => compare(x_7, y_3),\n                    }))), isEmpty(newList) ? (new Scheduling(0, new ManualScheduling(1))) : (new Scheduling(1, new Recurrency(1, newList))))))) : (new Scheduling(1, new Recurrency(1, singleton_1(new FixedRecurrency(0, dayOfWeek)))))) : (new Scheduling(1, new Recurrency(1, singleton_1(new FixedRecurrency(0, dayOfWeek))))));\n                    return Promise.resolve();\n                })));\n            },\n        }), (arg10_3 = singleton_1(getEnumName(enum_type(\"System.DayOfWeek\", int32_type, [[\"Sunday\", 0], [\"Monday\", 1], [\"Tuesday\", 2], [\"Wednesday\", 3], [\"Thursday\", 4], [\"Friday\", 5], [\"Saturday\", 6]]), dayOfWeek)), box()((_arg3) => {\n        })(arg10_3))]);\n        return stack()((x_3) => {\n            x_3.alignItems = \"center\";\n            x_3.spacing = \"2px\";\n        })(arg10_2);\n    }, sortBy((arg) => {\n        const x_1 = arg | 0;\n        if (weekStart >= x_1) {\n            return (x_1 * x_1) | 0;\n        }\n        else {\n            return x_1 | 0;\n        }\n    }, ofArray(getEnumValues(enum_type(\"System.DayOfWeek\", int32_type, [[\"Sunday\", 0], [\"Monday\", 1], [\"Tuesday\", 2], [\"Wednesday\", 3], [\"Thursday\", 4], [\"Friday\", 5], [\"Saturday\", 6]]))), {\n        Compare: (x_2, y) => comparePrimitives(x_2, y),\n    }))))));\n    return stack()((x) => {\n        x.alignItems = \"center\";\n        x.direction = \"row\";\n    })(arg10);\n}\n\nexport function FixedMonthlyRadio(fixedMonthlyRadioInputProps) {\n    let arg10_2;\n    const setValue = fixedMonthlyRadioInputProps.setValue;\n    const value = fixedMonthlyRadioInputProps.value;\n    const arg10 = ofArray([box()((_arg1) => {\n    })([\"Monthly: \"]), (arg10_2 = toList(delay(() => map_1((x_5) => {\n        const arg10_5 = toList(delay(() => x_5));\n        return stack()((x_6) => {\n            x_6.direction = \"row\";\n        })(arg10_5);\n    }, map_1((list_6) => map_1((day) => {\n        let arg10_4;\n        const arg10_3 = ofArray([createElement(Checkbox, {\n            label: void 0,\n            props: (x_2) => {\n                x_2.isChecked = ((value.tag === 1) ? ((value.fields[0].tag === 1) ? (contains(new FixedRecurrency(1, day), value.fields[0].fields[0], {\n                    Equals: (x_3, y) => equals(x_3, y),\n                    GetHashCode: (x_3) => safeHash(x_3),\n                }) ? true : false) : false) : false);\n                x_2.onChange = ((_arg3) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    let tmp, monthlySet, newList, value_2, set$_1;\n                    setValue((value.tag === 1) ? ((value.fields[0].tag === 1) ? ((tmp = map_1((_arg2_1) => {\n                        if (_arg2_1.tag === 1) {\n                            return [_arg2_1.fields[0], void 0];\n                        }\n                        else {\n                            return [void 0, _arg2_1];\n                        }\n                    }, value.fields[0].fields[0]), (monthlySet = ofSeq(choose((tuple) => tuple[0], tmp), {\n                        Compare: (x_4, y_1) => compare(x_4, y_1),\n                    }), (newList = append_1(choose((tuple_1) => tuple_1[1], tmp), map_1((arg0_1) => (new FixedRecurrency(1, arg0_1)), toList_1((value_2 = day, (set$_1 = monthlySet, FSharpSet__Contains(set$_1, value_2) ? FSharpSet__Remove(set$_1, value_2) : FSharpSet__Add(set$_1, value_2)))))), isEmpty(newList) ? (new Scheduling(0, new ManualScheduling(1))) : (new Scheduling(1, new Recurrency(1, newList))))))) : (new Scheduling(1, new Recurrency(1, singleton_1(new FixedRecurrency(1, day)))))) : (new Scheduling(1, new Recurrency(1, singleton_1(new FixedRecurrency(1, day))))));\n                    return Promise.resolve();\n                })));\n            },\n        }), (arg10_4 = singleton_1(int32ToString(day.fields[0])), box()((_arg4) => {\n        })(arg10_4))]);\n        return stack()((x_1) => {\n            x_1.alignItems = \"center\";\n            x_1.spacing = \"2px\";\n        })(arg10_3);\n    }, list_6), map_1((list) => map_1((arg0) => (new Day(0, arg0)), list), ofArray([toList(rangeDouble(1, 1, 14)), toList(rangeDouble(15, 1, 31))])))))), stack()((_arg2) => {\n    })(arg10_2))]);\n    return stack()((x) => {\n        x.alignItems = \"center\";\n        x.direction = \"row\";\n    })(arg10);\n}\n\nexport function FixedYearlyRadio(fixedYearlyRadioInputProps) {\n    const setValue = fixedYearlyRadioInputProps.setValue;\n    const value = fixedYearlyRadioInputProps.value;\n    let rows_3;\n    const _arg4 = (value.tag === 1) ? ((value.fields[0].tag === 1) ? mapIndexed((i, _arg3) => {\n        if (_arg3.tag === 2) {\n            return [some([i, _arg3.fields[0], _arg3.fields[1]]), void 0];\n        }\n        else {\n            return [void 0, _arg3];\n        }\n    }, value.fields[0].fields[0]) : empty()) : empty();\n    rows_3 = (isEmpty(choose((tuple) => tuple[0], _arg4)) ? append_1(_arg4, singleton_1([some(void 0), void 0])) : _arg4);\n    return react.createElement(react.Fragment, {}, ...toList(delay(() => mapIndexed((i_1, row) => {\n        let arg10_1, arg10_4, arg10_5;\n        const arg10 = ofArray([(arg10_1 = toList(delay(() => append(singleton(\"Yearly: \"), delay(() => {\n            let label, children_1, label_1, children_4;\n            const matchValue = [i_1, row];\n            let pattern_matching_result_4, i_4;\n            if (matchValue[0] === 0) {\n                if (matchValue[1] != null) {\n                    if (value_5(matchValue[1]) != null) {\n                        pattern_matching_result_4 = 0;\n                    }\n                    else if (matchValue[0] > 0) {\n                        pattern_matching_result_4 = 1;\n                        i_4 = matchValue[0];\n                    }\n                    else {\n                        pattern_matching_result_4 = 2;\n                    }\n                }\n                else {\n                    pattern_matching_result_4 = 2;\n                }\n            }\n            else if (matchValue[1] != null) {\n                if (matchValue[0] > 0) {\n                    pattern_matching_result_4 = 1;\n                    i_4 = matchValue[0];\n                }\n                else {\n                    pattern_matching_result_4 = 2;\n                }\n            }\n            else {\n                pattern_matching_result_4 = 2;\n            }\n            switch (pattern_matching_result_4) {\n                case 0: {\n                    return singleton((label = \"Add row\", (children_1 = [iconButton()((x_2) => {\n                        x_2.border = \"0\";\n                        x_2.color = \"heliotrope\";\n                        x_2.marginLeft = \"3px\";\n                        x_2.marginTop = \"-2px\";\n                        x_2.padding = \"2px\";\n                        x_2.minWidth = \"0\";\n                        x_2.width = \"auto\";\n                        x_2.height = \"auto\";\n                        const x_1 = x_2;\n                        x_1.margin = \"4px\";\n                        x_1.icon = react.createElement(fa.FaPlus, void 0);\n                        x_1.onClick = ((_arg2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            setValue(new Scheduling(1, new Recurrency(1, append_1(choose((_arg6) => {\n                                let pattern_matching_result_5, day_1, month_1, fixedRecurrency_1;\n                                if (_arg6[0] != null) {\n                                    if (value_5(_arg6[0]) != null) {\n                                        pattern_matching_result_5 = 0;\n                                        day_1 = value_5(_arg6[0])[1];\n                                        month_1 = value_5(_arg6[0])[2];\n                                    }\n                                    else if (_arg6[1] != null) {\n                                        pattern_matching_result_5 = 1;\n                                        fixedRecurrency_1 = _arg6[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_5 = 2;\n                                    }\n                                }\n                                else if (_arg6[1] != null) {\n                                    pattern_matching_result_5 = 1;\n                                    fixedRecurrency_1 = _arg6[1];\n                                }\n                                else {\n                                    pattern_matching_result_5 = 2;\n                                }\n                                switch (pattern_matching_result_5) {\n                                    case 0: {\n                                        return new FixedRecurrency(2, day_1, month_1);\n                                    }\n                                    case 1: {\n                                        return fixedRecurrency_1;\n                                    }\n                                    case 2: {\n                                        return void 0;\n                                    }\n                                }\n                            }, rows_3), singleton_1(new FixedRecurrency(2, new Day(0, 1), 1))))));\n                            return Promise.resolve();\n                        })));\n                    })([])], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_1) : createElement(Tooltip_1, {\n                        props: (x_3) => {\n                            x_3.label = label;\n                        },\n                        wrapperProps: (_arg1_1) => {\n                        },\n                        children: children_1,\n                    }))));\n                }\n                case 1: {\n                    return singleton((label_1 = \"Remove row\", (children_4 = [iconButton()((x_5) => {\n                        x_5.border = \"0\";\n                        x_5.color = \"heliotrope\";\n                        x_5.marginLeft = \"3px\";\n                        x_5.marginTop = \"-2px\";\n                        x_5.padding = \"2px\";\n                        x_5.minWidth = \"0\";\n                        x_5.width = \"auto\";\n                        x_5.height = \"auto\";\n                        const x_4 = x_5;\n                        x_4.margin = \"4px\";\n                        x_4.icon = react.createElement(fi.FiMinus, void 0);\n                        x_4.onClick = ((_arg3_1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                            const fixedRecurrencyList_2 = choose((_arg7) => {\n                                let pattern_matching_result_6;\n                                if (_arg7[0] != null) {\n                                    if (value_5(_arg7[0]) != null) {\n                                        if (value_5(_arg7[0])[0] === i_4) {\n                                            pattern_matching_result_6 = 0;\n                                        }\n                                        else {\n                                            pattern_matching_result_6 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_6 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_6 = 1;\n                                }\n                                switch (pattern_matching_result_6) {\n                                    case 0: {\n                                        return void 0;\n                                    }\n                                    case 1: {\n                                        let pattern_matching_result_7, day_2, month_2, fixedRecurrency_2;\n                                        if (_arg7[0] != null) {\n                                            if (value_5(_arg7[0]) != null) {\n                                                pattern_matching_result_7 = 0;\n                                                day_2 = value_5(_arg7[0])[1];\n                                                month_2 = value_5(_arg7[0])[2];\n                                            }\n                                            else if (_arg7[1] != null) {\n                                                pattern_matching_result_7 = 1;\n                                                fixedRecurrency_2 = _arg7[1];\n                                            }\n                                            else {\n                                                pattern_matching_result_7 = 2;\n                                            }\n                                        }\n                                        else if (_arg7[1] != null) {\n                                            pattern_matching_result_7 = 1;\n                                            fixedRecurrency_2 = _arg7[1];\n                                        }\n                                        else {\n                                            pattern_matching_result_7 = 2;\n                                        }\n                                        switch (pattern_matching_result_7) {\n                                            case 0: {\n                                                return new FixedRecurrency(2, day_2, month_2);\n                                            }\n                                            case 1: {\n                                                return fixedRecurrency_2;\n                                            }\n                                            case 2: {\n                                                return void 0;\n                                            }\n                                        }\n                                    }\n                                }\n                            }, rows_3);\n                            setValue(isEmpty(fixedRecurrencyList_2) ? (new Scheduling(0, new ManualScheduling(1))) : (new Scheduling(1, new Recurrency(1, fixedRecurrencyList_2))));\n                            return Promise.resolve();\n                        })));\n                    })([])], equals(label_1, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_4) : createElement(Tooltip_1, {\n                        props: (x_6) => {\n                            x_6.label = label_1;\n                        },\n                        wrapperProps: (_arg1_2) => {\n                        },\n                        children: children_4,\n                    }))));\n                }\n                case 2: {\n                    return singleton(Helpers_nothing);\n                }\n            }\n        })))), box()((_arg1) => {\n        })(arg10_1)), (arg10_4 = singleton_1((arg10_5 = toList(delay(() => {\n            let arg10_6;\n            return append(singleton((arg10_6 = toList(delay(() => map_1((month_5) => {\n                let i_6, day_5, day_6, i_7, month$0027_1, day_7, i_8;\n                const value_2 = (row != null) ? ((value_5(row) != null) ? (((i_6 = (value_5(row)[0] | 0), (day_5 = value_5(row)[1], month_5 === value_5(row)[2]))) ? ((day_6 = value_5(row)[1], (i_7 = (value_5(row)[0] | 0), (month$0027_1 = (value_5(row)[2] | 0), [i_7, day_6, month_5])))) : ((row != null) ? ((value_5(row) != null) ? ((day_7 = value_5(row)[1], (i_8 = (value_5(row)[0] | 0), [i_8, day_7, month_5]))) : [-1, new Day(0, 1), month_5]) : [-1, new Day(0, 1), month_5])) : ((row != null) ? ((value_5(row) != null) ? ((day_7 = value_5(row)[1], (i_8 = (value_5(row)[0] | 0), [i_8, day_7, month_5]))) : [-1, new Day(0, 1), month_5]) : [-1, new Day(0, 1), month_5])) : ((row != null) ? ((value_5(row) != null) ? ((day_7 = value_5(row)[1], (i_8 = (value_5(row)[0] | 0), [i_8, day_7, month_5]))) : [-1, new Day(0, 1), month_5]) : [-1, new Day(0, 1), month_5]);\n                const children_6 = [getEnumName(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), month_5)];\n                return createElement(Radio, {\n                    props: (x_9) => {\n                        x_9.value = Auto_toString_5A41365E(0, value_2, void 0, void 0, void 0, {\n                            ResolveType: () => option_type(tuple_type(int32_type, Day$reflection(), enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]))),\n                        });\n                        x_9.flexDirection = \"column\";\n                    },\n                    children: children_6,\n                });\n            }, ofArray(getEnumValues(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]])))))), stack()((x_8) => {\n                x_8.direction = \"row\";\n            })(arg10_6))), delay(() => map_1((x_12) => {\n                const arg10_8 = toList(delay(() => x_12));\n                return stack()((x_13) => {\n                    x_13.direction = \"row\";\n                })(arg10_8);\n            }, map_1((list_9) => map_1((dayNumber) => {\n                let value_4, month_6, i_9, day_9, i_10, month_7, i_11, month_8, children_7;\n                const arg10_7 = singleton_1((value_4 = ((row != null) ? ((value_5(row) != null) ? (((month_6 = (value_5(row)[2] | 0), (i_9 = (value_5(row)[0] | 0), equals(value_5(row)[1], new Day(0, dayNumber))))) ? ((day_9 = value_5(row)[1], (i_10 = (value_5(row)[0] | 0), (month_7 = (value_5(row)[2] | 0), [i_10, day_9, month_7])))) : ((row != null) ? ((value_5(row) != null) ? ((i_11 = (value_5(row)[0] | 0), (month_8 = (value_5(row)[2] | 0), [i_11, new Day(0, dayNumber), month_8]))) : [-1, new Day(0, dayNumber), 1]) : [-1, new Day(0, dayNumber), 1])) : ((row != null) ? ((value_5(row) != null) ? ((i_11 = (value_5(row)[0] | 0), (month_8 = (value_5(row)[2] | 0), [i_11, new Day(0, dayNumber), month_8]))) : [-1, new Day(0, dayNumber), 1]) : [-1, new Day(0, dayNumber), 1])) : ((row != null) ? ((value_5(row) != null) ? ((i_11 = (value_5(row)[0] | 0), (month_8 = (value_5(row)[2] | 0), [i_11, new Day(0, dayNumber), month_8]))) : [-1, new Day(0, dayNumber), 1]) : [-1, new Day(0, dayNumber), 1])), (children_7 = [int32ToString(dayNumber)], createElement(Radio, {\n                    props: (x_11) => {\n                        x_11.value = Auto_toString_5A41365E(0, value_4, void 0, void 0, void 0, {\n                            ResolveType: () => option_type(tuple_type(int32_type, Day$reflection(), enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]))),\n                        });\n                        x_11.flexDirection = \"column\";\n                    },\n                    children: children_7,\n                }))));\n                return stack()((x_10) => {\n                    x_10.alignItems = \"center\";\n                    x_10.spacing = \"2px\";\n                })(arg10_7);\n            }, list_9), ofArray([toList(rangeDouble(1, 1, 14)), toList(rangeDouble(15, 1, 31))])))));\n        })), stack()((_arg4_1) => {\n        })(arg10_5))), radioGroup()((x_7) => {\n            x_7.onChange = ((radioValueSelected) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                const yearlySelected = Auto_unsafeFromString_Z5CB6BD(radioValueSelected, void 0, void 0, {\n                    ResolveType: () => option_type(tuple_type(int32_type, Day$reflection(), enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]))),\n                });\n                if (yearlySelected != null) {\n                    const month_3 = yearlySelected[2] | 0;\n                    const i_5 = yearlySelected[0] | 0;\n                    const day_3 = yearlySelected[1];\n                    const fixedRecurrencyList_4 = choose((_arg8) => {\n                        let pattern_matching_result_8;\n                        if (_arg8[0] != null) {\n                            if (value_5(_arg8[0]) != null) {\n                                if (value_5(_arg8[0])[0] === i_5) {\n                                    pattern_matching_result_8 = 0;\n                                }\n                                else {\n                                    pattern_matching_result_8 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_8 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_8 = 1;\n                        }\n                        switch (pattern_matching_result_8) {\n                            case 0: {\n                                return new FixedRecurrency(2, day_3, month_3);\n                            }\n                            case 1: {\n                                let pattern_matching_result_9, day_4, month_4, fixedRecurrency_3;\n                                if (_arg8[0] != null) {\n                                    if (value_5(_arg8[0]) != null) {\n                                        pattern_matching_result_9 = 0;\n                                        day_4 = value_5(_arg8[0])[1];\n                                        month_4 = value_5(_arg8[0])[2];\n                                    }\n                                    else if (_arg8[1] != null) {\n                                        pattern_matching_result_9 = 1;\n                                        fixedRecurrency_3 = _arg8[1];\n                                    }\n                                    else {\n                                        pattern_matching_result_9 = 2;\n                                    }\n                                }\n                                else if (_arg8[1] != null) {\n                                    pattern_matching_result_9 = 1;\n                                    fixedRecurrency_3 = _arg8[1];\n                                }\n                                else {\n                                    pattern_matching_result_9 = 2;\n                                }\n                                switch (pattern_matching_result_9) {\n                                    case 0: {\n                                        return new FixedRecurrency(2, day_4, month_4);\n                                    }\n                                    case 1: {\n                                        return fixedRecurrency_3;\n                                    }\n                                    case 2: {\n                                        return void 0;\n                                    }\n                                }\n                            }\n                        }\n                    }, rows_3);\n                    setValue(new Scheduling(1, new Recurrency(1, (i_5 === -1) ? append_1(fixedRecurrencyList_4, singleton_1(new FixedRecurrency(2, day_3, month_3))) : fixedRecurrencyList_4)));\n                    return Promise.resolve();\n                }\n                else {\n                    return Promise.resolve();\n                }\n            })));\n            x_7.value = Auto_toString_5A41365E(0, (row != null) ? value_5(row) : (void 0), void 0, void 0, void 0, {\n                ResolveType: () => option_type(tuple_type(int32_type, Day$reflection(), enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]))),\n            });\n        })(arg10_4))]);\n        return stack()((x) => {\n            x.alignItems = \"center\";\n            x.direction = \"row\";\n        })(arg10);\n    }, map_1((tuple_1) => tuple_1[0], filter((_arg5) => {\n        if (_arg5[0] != null) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }, rows_3))))));\n}\n\nexport function SchedulingSelector(schedulingSelectorInputProps) {\n    let input, arg10_1;\n    const taskId = schedulingSelectorInputProps.taskId;\n    const weekStart = Jotai_jotaiUtils.useAtomValue(Atoms_weekStart) | 0;\n    const schedulingFieldOptions = Hooks_useAtomFieldOptions(new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_scheduling(taskId))), new InputScope$1(1, [(obj) => Auto_toString_5A41365E(0, obj, void 0, void 0, void 0, {\n        ResolveType: Scheduling$reflection,\n    }), (data) => Auto_unsafeFromString_Z5CB6BD(data, void 0, void 0, {\n        ResolveType: Scheduling$reflection,\n    })]));\n    const arg10 = ofArray([(input = {\n        Hint: void 0,\n        HintTitle: void 0,\n        Label: \"Scheduling\",\n        Props: (x_1) => {\n            x_1.marginBottom = \"5px\";\n        },\n    }, (arg10_1 = toList(delay(() => append(singleton(input.Label), delay(() => {\n        const matchValue = input.Hint;\n        if (matchValue == null) {\n            return singleton(Helpers_nothing);\n        }\n        else {\n            const hint = matchValue;\n            return singleton(createElement(Hint_1, {\n                props: (x_2) => {\n                    let matchValue_1;\n                    x_2.hint = hint;\n                    x_2.hintTitle = ((matchValue_1 = input.HintTitle, (matchValue_1 == null) ? input.Label : matchValue_1));\n                },\n            }));\n        }\n    })))), flex()(input.Props)(arg10_1))), createElement(Dropdown, {\n        Body: (_onHide) => {\n            let arg10_2, arg10_3;\n            return singleton_1((arg10_2 = singleton_1((arg10_3 = ofArray([createElement(ManualRadio, {\n                value: schedulingFieldOptions.AtomValue,\n            }), createElement(SuggestedRadio, {\n                value: schedulingFieldOptions.AtomValue,\n            }), createElement(OffsetDaysRadio, {\n                value: schedulingFieldOptions.AtomValue,\n                setValue: schedulingFieldOptions.SetAtomValue,\n            }), createElement(OffsetWeeksRadio, {\n                value: schedulingFieldOptions.AtomValue,\n                setValue: schedulingFieldOptions.SetAtomValue,\n            }), createElement(OffsetMonthsRadio, {\n                value: schedulingFieldOptions.AtomValue,\n                setValue: schedulingFieldOptions.SetAtomValue,\n            }), createElement(FixedWeeklyRadio, {\n                value: schedulingFieldOptions.AtomValue,\n                setValue: schedulingFieldOptions.SetAtomValue,\n                weekStart: weekStart,\n            }), createElement(FixedMonthlyRadio, {\n                value: schedulingFieldOptions.AtomValue,\n                setValue: schedulingFieldOptions.SetAtomValue,\n            }), createElement(FixedYearlyRadio, {\n                value: schedulingFieldOptions.AtomValue,\n                setValue: schedulingFieldOptions.SetAtomValue,\n            })]), stack()((x_7) => {\n                x_7.spacing = \"18px\";\n                x_7.padding = \"5px\";\n            })(arg10_3))), radioGroup()((x_6) => {\n                x_6.overflow = \"auto\";\n                x_6.maxHeight = \"350px\";\n                x_6.onChange = ((radioValueSelected) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                    schedulingFieldOptions.SetAtomValue(Auto_unsafeFromString_Z5CB6BD(radioValueSelected, void 0, void 0, {\n                        ResolveType: Scheduling$reflection,\n                    }));\n                    return Promise.resolve();\n                })));\n                x_6.value = Auto_toString_5A41365E(0, schedulingFieldOptions.AtomValue, void 0, void 0, void 0, {\n                    ResolveType: Scheduling$reflection,\n                });\n            })(arg10_2)));\n        },\n        Left: true,\n        Tooltip: \"\",\n        Trigger: (visible, setVisible) => {\n            let Icon, cmp, scheduling;\n            return createElement(Button, (Icon = [(cmp = (visible ? fi.FiChevronUp : fi.FiChevronDown), () => react.createElement(cmp, void 0)), new IconPosition(1)], {\n                Children: [(scheduling = schedulingFieldOptions.AtomValue, (scheduling.tag === 1) ? ((scheduling.fields[0].tag === 1) ? join(\", \", map_1((_arg7) => {\n                    switch (_arg7.tag) {\n                        case 1: {\n                            return toText(interpolate(\"Every %P()\", [_arg7.fields[0].fields[0]]));\n                        }\n                        case 2: {\n                            return toText(interpolate(\"Every %P() %P()\", [getEnumName(enum_type(\"Fluke.Shared.Domain.Model.Month\", int32_type, [[\"January\", 1], [\"February\", 2], [\"March\", 3], [\"April\", 4], [\"May\", 5], [\"June\", 6], [\"July\", 7], [\"August\", 8], [\"September\", 9], [\"October\", 10], [\"November\", 11], [\"December\", 12]]), _arg7.fields[1]), _arg7.fields[0].fields[0]]));\n                        }\n                        default: {\n                            return toText(interpolate(\"Every %P()\", [getEnumName(enum_type(\"System.DayOfWeek\", int32_type, [[\"Sunday\", 0], [\"Monday\", 1], [\"Tuesday\", 2], [\"Wednesday\", 3], [\"Thursday\", 4], [\"Friday\", 5], [\"Saturday\", 6]]), _arg7.fields[0])]));\n                        }\n                    }\n                }, sort(scheduling.fields[0].fields[0], {\n                    Compare: (x_4, y) => compare(x_4, y),\n                }))) : ((scheduling.fields[0].fields[0].tag === 1) ? toText(interpolate(\"Every %P()week%P()\", [(scheduling.fields[0].fields[0].fields[0] > 1) ? toText(interpolate(\"%P() \", [scheduling.fields[0].fields[0].fields[0]])) : \"\", (scheduling.fields[0].fields[0].fields[0] > 1) ? \"s\" : \"\"])) : ((scheduling.fields[0].fields[0].tag === 2) ? toText(interpolate(\"Every %P()month%P()\", [(scheduling.fields[0].fields[0].fields[0] > 1) ? toText(interpolate(\"%P() \", [scheduling.fields[0].fields[0].fields[0]])) : \"\", (scheduling.fields[0].fields[0].fields[0] > 1) ? \"s\" : \"\"])) : toText(interpolate(\"Every %P()day%P()\", [(scheduling.fields[0].fields[0].fields[0] > 1) ? toText(interpolate(\"%P() \", [scheduling.fields[0].fields[0].fields[0]])) : \"\", (scheduling.fields[0].fields[0].fields[0] > 1) ? \"s\" : \"\"]))))) : ((scheduling.fields[0].tag === 0) ? \"Suggested\" : \"Manual\"))],\n                Hint: void 0,\n                Icon: Icon,\n                Props: (x_3) => {\n                    x_3.whiteSpace = \"normal\";\n                    x_3.onClick = ((_arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        setVisible(!visible);\n                        return Promise.resolve();\n                    })));\n                },\n            }));\n        },\n    })]);\n    return box()((x) => {\n        x.display = \"inline\";\n    })(arg10);\n}\n\n","import { flex, menuItem, iconButton, stack, box, useToast } from \"../Bindings/Chakra.fs.js\";\nimport { Jotai_queryAtomPath, Jotai_AtomReference$1, Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_Database_taskIdSet, Atoms_rightDock, Selectors_Session_selectedTaskIdSet, TextKey, Atoms_accordionFlag, Atoms_UIFlag, Selectors_Task_task, Atoms_Task_scheduling, Atoms_Task_information, Atoms_Task_name, Atoms_Task_attachmentIdSet, Selectors_Task_taskState, Atoms_UIFlagType, Atoms_uiFlag, Atoms_Task_sessions, Atoms_debug } from \"../State.fs.js\";\nimport { InputScope$1, AtomField$1, readWriteValue, AtomScope, emptyAtom, InputAtom$1, useCallback, useState } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { List_removeAt } from \"../../../Fluke.Shared/Core.fs.js\";\nimport { ofArray, map, isEmpty, singleton as singleton_1, empty, findIndex } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { TaskState, Database, DatabaseAccess, DatabaseName, DatabaseId } from \"../../../Fluke.Shared/Domain/State.fs.js\";\nimport { Username } from \"../../../Fluke.Shared/Domain/UserInteraction.fs.js\";\nimport { FSharpSet__Contains, add } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { some, value as value_15 } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { Auto_unsafeFromString_Z5CB6BD } from \"../../.fable/Thoth.Json.5.1.0/Decode.fs.js\";\nimport { Task, Scheduling as Scheduling_4, ManualScheduling, Information as Information_4, Area, AreaName, TaskName, TaskId, Information_Name_Z233FE4C2, Scheduling$reflection, Information$reflection, TaskName$reflection } from \"../../../Fluke.Shared/Domain/Model.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { interpolate, toText, isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { newGuid } from \"../../.fable/fable-library.3.2.7/Guid.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Accordion } from \"./Accordion.fs.js\";\nimport { empty as empty_1, singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { DatabaseSelector } from \"./DatabaseSelector.fs.js\";\nimport { InformationSelectionType, InformationSelector } from \"./InformationSelector.fs.js\";\nimport { SchedulingSelector } from \"./SchedulingSelector.fs.js\";\nimport { Input } from \"./Input.fs.js\";\nimport { Auto_toString_5A41365E } from \"../../.fable/Thoth.Json.5.1.0/Encode.fs.js\";\nimport { format as format_1 } from \"date-fns\";\nimport { now } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as fi from \"react-icons/fi\";\nimport { Menu } from \"./Menu.fs.js\";\nimport * as react_1 from \"@chakra-ui/react\";\nimport * as bs from \"react-icons/bs\";\nimport * as bi from \"react-icons/bi\";\nimport { AttachmentPanel } from \"./AttachmentPanel.fs.js\";\nimport { useHydrateTaskState } from \"../Hooks/Hydrate.fs.js\";\nimport { empty as empty_2 } from \"../../.fable/fable-library.3.2.7/Map.js\";\n\nexport function TaskForm(taskFormInputProps) {\n    const onSave = taskFormInputProps.onSave;\n    const taskId = taskFormInputProps.taskId;\n    const toast = useToast();\n    const debug = Jotai_jotaiUtils.useAtomValue(Atoms_debug);\n    const patternInput = useState()(Atoms_Task_sessions(taskId));\n    const setSessions = patternInput[1];\n    const sessions = patternInput[0];\n    const deleteSession = useCallback((_arg3, _arg2, start) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        setSessions(List_removeAt(findIndex((_arg1) => equals(_arg1.fields[0], start), sessions), sessions));\n        return Promise.resolve();\n    })), [sessions, setSessions]);\n    const patternInput_1 = useState()(Atoms_uiFlag(new Atoms_UIFlagType(2)));\n    const taskUIFlag = patternInput_1[0];\n    const taskDatabaseId = useReact_useMemo_CF4EA67(() => ((taskUIFlag.tag === 3) ? (equals(taskUIFlag.fields[1], taskId) ? taskUIFlag.fields[0] : (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Id) : (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Id), [taskUIFlag, taskId]);\n    const taskState = Jotai_jotaiUtils.useAtomValue(Selectors_Task_taskState(taskId));\n    const onAttachmentAdd = useCallback((_arg4, setter, attachmentId) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        setter(Atoms_Task_attachmentIdSet(taskId), (set$) => add(attachmentId, set$));\n        return Promise.resolve();\n    })), [taskId]);\n    const onSave_1 = useCallback((getter, setter_2, _arg5) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let atom_4, atomPath, matchValue_3, atomPath_1, atom_10, atomPath_2, matchValue_5, atomPath_3, atom_16, atomPath_4, matchValue_7, atomPath_5, activePatternResult36978, str_1, matchValue_10, informationName, activePatternResult37001, str_5, activePatternResult37002, str_9, activePatternResult36978_1, str_14, a, inputRecord;\n        let taskName;\n        const getter_1 = getter;\n        const atom_3 = Atoms_Task_name(taskId);\n        const matchValue_4 = ((atom_4 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, atom_3))), (atom_4 != null) ? ((atomPath = atom_4.fields[0], new AtomField$1((atomPath.tag === 0) ? atomPath.fields[0] : emptyAtom, (matchValue_3 = [Jotai_queryAtomPath(atomPath), new AtomScope(1)], (matchValue_3[0] != null) ? ((matchValue_3[1].tag === 1) ? ((atomPath_1 = value_15(matchValue_3[0]), readWriteValue(atomPath_1))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n        if (matchValue_4 != null) {\n            const result = getter_1(matchValue_4);\n            taskName = ((result === null) ? getter_1(atom_3) : Auto_unsafeFromString_Z5CB6BD(result, void 0, void 0, {\n                ResolveType: TaskName$reflection,\n            }));\n        }\n        else {\n            taskName = getter_1(atom_3);\n        }\n        let taskInformation;\n        const getter_5 = getter;\n        const atom_9 = Atoms_Task_information(taskId);\n        const matchValue_6 = ((atom_10 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, atom_9))), (atom_10 != null) ? ((atomPath_2 = atom_10.fields[0], new AtomField$1((atomPath_2.tag === 0) ? atomPath_2.fields[0] : emptyAtom, (matchValue_5 = [Jotai_queryAtomPath(atomPath_2), new AtomScope(1)], (matchValue_5[0] != null) ? ((matchValue_5[1].tag === 1) ? ((atomPath_3 = value_15(matchValue_5[0]), readWriteValue(atomPath_3))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n        if (matchValue_6 != null) {\n            const result_1 = getter_5(matchValue_6);\n            taskInformation = ((result_1 === null) ? getter_5(atom_9) : Auto_unsafeFromString_Z5CB6BD(result_1, void 0, void 0, {\n                ResolveType: Information$reflection,\n            }));\n        }\n        else {\n            taskInformation = getter_5(atom_9);\n        }\n        let taskScheduling;\n        const getter_9 = getter;\n        const atom_15 = Atoms_Task_scheduling(taskId);\n        const matchValue_8 = ((atom_16 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, atom_15))), (atom_16 != null) ? ((atomPath_4 = atom_16.fields[0], new AtomField$1((atomPath_4.tag === 0) ? atomPath_4.fields[0] : emptyAtom, (matchValue_7 = [Jotai_queryAtomPath(atomPath_4), new AtomScope(1)], (matchValue_7[0] != null) ? ((matchValue_7[1].tag === 1) ? ((atomPath_5 = value_15(matchValue_7[0]), readWriteValue(atomPath_5))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n        if (matchValue_8 != null) {\n            const result_2 = getter_9(matchValue_8);\n            taskScheduling = ((result_2 === null) ? getter_9(atom_15) : Auto_unsafeFromString_Z5CB6BD(result_2, void 0, void 0, {\n                ResolveType: Scheduling$reflection,\n            }));\n        }\n        else {\n            taskScheduling = getter_9(atom_15);\n        }\n        if (equals(taskDatabaseId, (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Id)) {\n            toast((x) => {\n                x.description = \"Invalid database\";\n            });\n            return Promise.resolve();\n        }\n        else if ((((activePatternResult36978 = ((str_1 = taskName.fields[0], (str_1 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_1) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_1))))), (activePatternResult36978.tag === 1) ? some(void 0) : ((activePatternResult36978.tag === 2) ? some(void 0) : (void 0)))) != null) ? true : false) {\n            toast((x_1) => {\n                x_1.description = \"Invalid name\";\n            });\n            return Promise.resolve();\n        }\n        else if ((matchValue_10 = ((informationName = Information_Name_Z233FE4C2(taskInformation), (informationName.tag === 0) ? informationName.fields[0].fields[0] : ((informationName.tag === 2) ? informationName.fields[0].fields[0] : ((activePatternResult37001 = ((str_5 = informationName.fields[0].fields[0], (str_5 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_5) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_5))))), (activePatternResult37001.tag === 0) ? ((activePatternResult37002 = ((str_9 = informationName.fields[1].fields[0], (str_9 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_9) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_9))))), (activePatternResult37002.tag === 0) ? toText(interpolate(\"%P()/%P()\", [activePatternResult37001.fields[0], activePatternResult37002.fields[0]])) : \"\")) : \"\"))))), (((activePatternResult36978_1 = ((str_14 = matchValue_10, (str_14 === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str_14) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str_14))))), (activePatternResult36978_1.tag === 1) ? some(void 0) : ((activePatternResult36978_1.tag === 2) ? some(void 0) : (void 0)))) != null) ? true : false)) {\n            toast((x_2) => {\n                x_2.description = \"Invalid information\";\n            });\n            return Promise.resolve();\n        }\n        else {\n            return (equals(taskId, (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_4(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_4(0, new ManualScheduling(1)), void 0)).Id) ? ((a = ((inputRecord = (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_4(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_4(0, new ManualScheduling(1)), void 0)), new Task(new TaskId(0, newGuid()), taskName, taskInformation, inputRecord.Duration, inputRecord.PendingAfter, inputRecord.MissedAfter, taskScheduling, inputRecord.Priority))), Promise.resolve(a))) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                const task = getter(Selectors_Task_task(taskId));\n                return Promise.resolve((new Task(task.Id, taskName, taskInformation, task.Duration, task.PendingAfter, task.MissedAfter, taskScheduling, task.Priority)));\n            }))).then(((_arg1_1) => {\n                let atom_23, atomPath_6, matchValue_11, atomPath_7, atom_28, atomPath_8, matchValue_13, atomPath_9, atom_33, atomPath_10, matchValue_15, atomPath_11;\n                const matchValue_12 = ((atom_23 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_name(taskId)))), (atom_23 != null) ? ((atomPath_6 = atom_23.fields[0], new AtomField$1((atomPath_6.tag === 0) ? atomPath_6.fields[0] : emptyAtom, (matchValue_11 = [Jotai_queryAtomPath(atomPath_6), new AtomScope(1)], (matchValue_11[0] != null) ? ((matchValue_11[1].tag === 1) ? ((atomPath_7 = value_15(matchValue_11[0]), readWriteValue(atomPath_7))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n                if (matchValue_12 != null) {\n                    setter_2(matchValue_12, null);\n                }\n                const matchValue_14 = ((atom_28 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_information(taskId)))), (atom_28 != null) ? ((atomPath_8 = atom_28.fields[0], new AtomField$1((atomPath_8.tag === 0) ? atomPath_8.fields[0] : emptyAtom, (matchValue_13 = [Jotai_queryAtomPath(atomPath_8), new AtomScope(1)], (matchValue_13[0] != null) ? ((matchValue_13[1].tag === 1) ? ((atomPath_9 = value_15(matchValue_13[0]), readWriteValue(atomPath_9))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n                if (matchValue_14 != null) {\n                    setter_2(matchValue_14, null);\n                }\n                const matchValue_16 = ((atom_33 = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_scheduling(taskId)))), (atom_33 != null) ? ((atomPath_10 = atom_33.fields[0], new AtomField$1((atomPath_10.tag === 0) ? atomPath_10.fields[0] : emptyAtom, (matchValue_15 = [Jotai_queryAtomPath(atomPath_10), new AtomScope(1)], (matchValue_15[0] != null) ? ((matchValue_15[1].tag === 1) ? ((atomPath_11 = value_15(matchValue_15[0]), readWriteValue(atomPath_11))) : (void 0)) : (void 0))))) : (new AtomField$1(void 0, void 0)))).ReadWrite;\n                if (matchValue_16 != null) {\n                    setter_2(matchValue_16, null);\n                }\n                setter_2(Atoms_uiFlag(new Atoms_UIFlagType(2)), new Atoms_UIFlag(0));\n                return onSave(_arg1_1).then((() => (Promise.resolve(undefined))));\n            }));\n        }\n    })), [taskId, onSave, toast, taskDatabaseId]);\n    return createElement(Accordion, {\n        Atom: Atoms_accordionFlag(new TextKey(0, \"TaskForm\")),\n        Items: toList(delay(() => {\n            let arg10_5;\n            return append(singleton([toText(interpolate(\"%P() Task\", [equals(taskId, (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_4(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_4(0, new ManualScheduling(1)), void 0)).Id) ? \"Add\" : \"Edit\"])), (arg10_5 = toList(delay(() => {\n                let arg10_6;\n                return append((!debug) ? singleton(Helpers_nothing) : singleton((arg10_6 = singleton_1(toText(interpolate(\"%P()\", [taskId]))), box()((_arg6_1) => {\n                })(arg10_6))), delay(() => append(singleton(createElement(DatabaseSelector, {\n                    databaseId: taskDatabaseId,\n                    taskId: taskId,\n                    onChange: (databaseId_2) => {\n                        patternInput_1[1](new Atoms_UIFlag(3, databaseId_2, taskId));\n                    },\n                })), delay(() => append(singleton(createElement(InformationSelector, {\n                    DisableResource: true,\n                    SelectionType: new InformationSelectionType(0),\n                    TaskId: taskId,\n                })), delay(() => append(singleton(createElement(SchedulingSelector, {\n                    taskId: taskId,\n                })), delay(() => {\n                    let arg10_7;\n                    return append(singleton((arg10_7 = singleton_1(createElement(Input, {\n                        CustomProps: (x_6) => {\n                            x_6.atom = (new InputAtom$1(0, new Jotai_AtomReference$1(0, Atoms_Task_name(taskId))));\n                            x_6.inputScope = (new InputScope$1(1, [(obj) => Auto_toString_5A41365E(0, obj, void 0, void 0, void 0, {\n                                ResolveType: TaskName$reflection,\n                            }), (data_3) => Auto_unsafeFromString_Z5CB6BD(data_3, void 0, void 0, {\n                                ResolveType: TaskName$reflection,\n                            })]));\n                            x_6.onFormat = ((_arg7) => _arg7.fields[0]);\n                            x_6.onEnterPress = onSave_1;\n                            x_6.onValidate = ((arg_1) => (new TaskName(0, arg_1[0])));\n                        },\n                        Props: (x_7) => {\n                            x_7.autoFocus = true;\n                            x_7.label = \"Name\";\n                            x_7.placeholder = toText(interpolate(\"new-task-%P()\", [format_1(now(), \"yyyy-MM-dd\")]));\n                        },\n                    })), stack()((x_5) => {\n                        x_5.spacing = \"15px\";\n                    })(arg10_7))), delay(() => {\n                        let cmp;\n                        return singleton(createElement(Button, {\n                            Children: [\"Save\"],\n                            Hint: void 0,\n                            Icon: [(cmp = fi.FiSave, () => react.createElement(cmp, void 0)), new IconPosition(0)],\n                            Props: (x_8) => {\n                                x_8.onClick = onSave_1;\n                            },\n                        }));\n                    }));\n                }))))))));\n            })), stack()((x_4) => {\n                x_4.spacing = \"15px\";\n            })(arg10_5))]), delay(() => ((!equals(taskId, (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_4(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_4(0, new ManualScheduling(1)), void 0)).Id)) ? append(singleton([\"Sessions\", isEmpty(sessions) ? box()((_arg8) => {\n            })([\"No sessions found\"]) : react.createElement(react.Fragment, {}, ...toList(delay(() => map((_arg13) => {\n                let arg10_10, _arg7_1, _arg6_2, _arg1_2, Trigger;\n                const start_1 = _arg13.fields[0];\n                const arg10_9 = singleton_1((arg10_10 = ofArray([(_arg7_1 = start_1, toText(interpolate(\"%P() %P()\", [(_arg6_2 = _arg7_1.Date, toText(interpolate(\"%d%P()-%02d%P()-%02d%P()\", [_arg6_2.Year.fields[0], _arg6_2.Month, _arg6_2.Day.fields[0]]))), (_arg1_2 = _arg7_1.Time, toText(interpolate(\"%02d%P():%02d%P()\", [_arg1_2.Hour.fields[0], _arg1_2.Minute.fields[0]])))]))), createElement(Menu, (Trigger = iconButton()((x_10) => {\n                    x_10.border = \"0\";\n                    x_10.color = \"heliotrope\";\n                    x_10.marginLeft = \"3px\";\n                    x_10.marginTop = \"-2px\";\n                    x_10.padding = \"2px\";\n                    x_10.minWidth = \"0\";\n                    x_10.width = \"auto\";\n                    x_10.height = \"auto\";\n                    const x_9 = x_10;\n                    x_9.as = react_1.MenuButton;\n                    x_9.icon = react.createElement(bs.BsThreeDots, void 0);\n                    x_9.fontSize = \"11px\";\n                    x_9.height = \"15px\";\n                    x_9.color = \"whiteAlpha.700\";\n                    x_9.marginTop = \"-1px\";\n                    x_9.marginLeft = \"6px\";\n                })([]), {\n                    Body: [menuItem()((x_11) => {\n                        let cmp_7;\n                        x_11.closeOnSelect = true;\n                        x_11.icon = ((cmp_7 = bi.BiTrash, box()((x_13) => {\n                            x_13.fontSize = \"13px\";\n                            x_13.as = cmp_7;\n                        })([])));\n                        x_11.onClick = ((_arg11) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (deleteSession(start_1).then((() => (Promise.resolve(undefined))))))));\n                    })([\"Delete Session\"])],\n                    MenuListProps: (_arg12) => {\n                    },\n                    Tooltip: \"\",\n                    Trigger: Trigger,\n                }))]), box()((_arg10) => {\n                })(arg10_10)));\n                return flex()((_arg9) => {\n                })(arg10_9);\n            }, sessions))))]), delay(() => {\n                let arg10_14;\n                return singleton([\"Attachments\", (arg10_14 = singleton_1(createElement(AttachmentPanel, {\n                    attachments: taskState.Attachments,\n                    onAdd: onAttachmentAdd,\n                })), stack()((x_14) => {\n                    x_14.spacing = \"10px\";\n                    x_14.flex = \"1\";\n                })(arg10_14))]);\n            })) : empty_1())));\n        })),\n        Props: (x_3) => {\n            x_3.flex = \"1\";\n            x_3.overflowY = \"auto\";\n            x_3.flexBasis = 0;\n        },\n    });\n}\n\nexport function TaskFormWrapper() {\n    const hydrateTaskState = useHydrateTaskState();\n    const selectedTaskIdSet = Jotai_jotaiUtils.useAtomValue(Selectors_Session_selectedTaskIdSet);\n    const setRightDock = Jotai_jotaiUtils.useUpdateAtom(Atoms_rightDock);\n    const taskUIFlag = Jotai_jotaiUtils.useAtomValue(Atoms_uiFlag(new Atoms_UIFlagType(2)));\n    const taskDatabaseId = (taskUIFlag.tag === 3) ? taskUIFlag.fields[0] : (new Database(new DatabaseId(0, \"00000000-0000-0000-0000-000000000000\"), new DatabaseName(0, \"\"), new Username(0, \"\"), new DatabaseAccess(1, empty()), void 0)).Id;\n    let setTaskIdSet;\n    const setter = Jotai_jotaiUtils.useUpdateAtom(Atoms_Database_taskIdSet(taskDatabaseId));\n    setTaskIdSet = ((value) => {\n        setter(value);\n    });\n    const taskId_2 = useReact_useMemo_CF4EA67(() => ((taskUIFlag.tag === 3) ? (FSharpSet__Contains(selectedTaskIdSet, taskUIFlag.fields[1]) ? taskUIFlag.fields[1] : (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_4(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_4(0, new ManualScheduling(1)), void 0)).Id) : (new Task(new TaskId(0, \"00000000-0000-0000-0000-000000000000\"), new TaskName(0, \"\"), new Information_4(1, new Area(new AreaName(0, \"\"))), void 0, void 0, void 0, new Scheduling_4(0, new ManualScheduling(1)), void 0)).Id), [taskUIFlag, selectedTaskIdSet]);\n    return createElement(TaskForm, {\n        taskId: taskId_2,\n        onSave: (task) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            const taskState = new TaskState(task, empty(), empty(), empty(), empty_2());\n            return hydrateTaskState([new AtomScope(0), taskDatabaseId, taskState]).then((() => (((!equals(task.Id, taskId_2)) ? ((void setTimeout(() => {\n                setTaskIdSet((set$) => add(task.Id, set$));\n            }, 0), Promise.resolve())) : (Promise.resolve())).then(() => PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                setRightDock(void 0);\n                return Promise.resolve();\n            })))));\n        })),\n    });\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Selectors_Session_selectedTaskIdSet, Atoms_UIFlagType, Atoms_uiFlag, TextKey, Atoms_accordionFlag, Atoms_Task_cellAttachmentMap, Selectors_Cell_attachments, Atoms_Task_name } from \"../State.fs.js\";\nimport { useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { tryFind, add } from \"../../.fable/fable-library.3.2.7/Map.js\";\nimport { FSharpSet__Contains, empty, add as add_1 } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { defaultArg } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { compare } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { createElement } from \"react\";\nimport { Accordion } from \"./Accordion.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { ofArray, singleton } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { stack, box } from \"../Bindings/Chakra.fs.js\";\nimport { AttachmentPanel } from \"./AttachmentPanel.fs.js\";\nimport { useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\n\nexport function CellForm(cellFormInputProps) {\n    let arg10_1, arg10_2, arg10_3, _arg6, arg10_4;\n    const dateId = cellFormInputProps.dateId;\n    const taskId = cellFormInputProps.taskId;\n    const patternInput = Jotai_jotaiUtils.useAtomValue(Atoms_Task_name(taskId));\n    const attachments = Jotai_jotaiUtils.useAtomValue(Selectors_Cell_attachments([taskId, dateId]));\n    const onAttachmentAdd = useCallback((_arg1, setter, attachmentId) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        setter(Atoms_Task_cellAttachmentMap(taskId), (cellAttachmentMap) => add(dateId, add_1(attachmentId, defaultArg(tryFind(dateId, cellAttachmentMap), empty({\n            Compare: (x, y) => compare(x, y),\n        }))), cellAttachmentMap));\n        return Promise.resolve();\n    })), [taskId, dateId]);\n    return createElement(Accordion, {\n        Atom: Atoms_accordionFlag(new TextKey(0, \"CellForm\")),\n        Items: ofArray([[\"Info\", (arg10_1 = ofArray([(arg10_2 = singleton(toText(interpolate(\"Task: %P()\", [patternInput.fields[0]]))), box()((_arg3) => {\n        })(arg10_2)), (arg10_3 = singleton(toText(interpolate(\"Date: %P()\", [(_arg6 = dateId.fields[0], toText(interpolate(\"%d%P()-%02d%P()-%02d%P()\", [_arg6.Year.fields[0], _arg6.Month, _arg6.Day.fields[0]])))]))), box()((_arg4) => {\n        })(arg10_3))]), stack()((x_1) => {\n            x_1.spacing = \"10px\";\n        })(arg10_1))], [\"Attachments\", (arg10_4 = singleton(createElement(AttachmentPanel, {\n            attachments: attachments,\n            onAdd: onAttachmentAdd,\n        })), stack()((x_2) => {\n            x_2.spacing = \"10px\";\n            x_2.flex = \"1\";\n        })(arg10_4))]]),\n        Props: (_arg2) => {\n        },\n    });\n}\n\nexport function CellFormWrapper() {\n    const cellUIFlag = Jotai_jotaiUtils.useAtomValue(Atoms_uiFlag(new Atoms_UIFlagType(3)));\n    const selectedTaskIdSet = Jotai_jotaiUtils.useAtomValue(Selectors_Session_selectedTaskIdSet);\n    const patternInput = useReact_useMemo_CF4EA67(() => ((cellUIFlag.tag === 4) ? (FSharpSet__Contains(selectedTaskIdSet, cellUIFlag.fields[0]) ? [cellUIFlag.fields[0], cellUIFlag.fields[1]] : [void 0, void 0]) : [void 0, void 0]), [cellUIFlag, selectedTaskIdSet]);\n    const matchValue = [patternInput[0], patternInput[1]];\n    let pattern_matching_result, dateId_3, taskId_3;\n    if (matchValue[0] != null) {\n        if (matchValue[1] != null) {\n            pattern_matching_result = 0;\n            dateId_3 = matchValue[1];\n            taskId_3 = matchValue[0];\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return createElement(CellForm, {\n                taskId: taskId_3,\n                dateId: dateId_3,\n            });\n        }\n        case 1: {\n            return box()((x) => {\n                x.padding = \"15px\";\n            })([\"No cell selected\"]);\n        }\n    }\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_rightDock, Atoms_leftDock, Selectors_deviceInfo } from \"../State.fs.js\";\nimport { React_suspense_Z3796A576, useReact_useMemo_CF4EA67 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { DockType } from \"../TempUI.fs.js\";\nimport { createElement } from \"react\";\nimport { DatabaseFormWrapper } from \"./DatabaseForm.fs.js\";\nimport { map, ofArray, empty, singleton } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { box, stack, flex } from \"../Bindings/Chakra.fs.js\";\nimport * as fi from \"react-icons/fi\";\nimport { InformationFormWrapper } from \"./InformationForm.fs.js\";\nimport * as bs from \"react-icons/bs\";\nimport { TaskFormWrapper } from \"./TaskForm.fs.js\";\nimport { CellFormWrapper } from \"./CellForm.fs.js\";\nimport * as fa from \"react-icons/fa\";\nimport { tryFind, ofSeq } from \"../../.fable/fable-library.3.2.7/Map.js\";\nimport { singleton as singleton_1, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { DockPanel } from \"./DockPanel.fs.js\";\nimport { LoadingSpinner } from \"./LoadingSpinner.fs.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { DockButton } from \"./DockButton.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\n\nexport function RightDock() {\n    const deviceInfo = Jotai_jotaiUtils.useAtomValue(Selectors_deviceInfo);\n    const setLeftDock = Jotai_jotaiUtils.useUpdateAtom(Atoms_leftDock);\n    const rightDock = Jotai_jotaiUtils.useAtomValue(Atoms_rightDock);\n    const items = useReact_useMemo_CF4EA67(() => ofArray([[new DockType(2), {\n        Content: () => {\n            const arg10 = singleton(createElement(DatabaseFormWrapper, null));\n            return flex()((x) => {\n                x.flex = \"1\";\n                x.overflowY = \"auto\";\n                x.flexBasis = 0;\n            })(arg10);\n        },\n        Icon: fi.FiDatabase,\n        Name: \"Database\",\n        RightIcons: empty(),\n    }], [new DockType(3), {\n        Content: () => {\n            const arg10_1 = singleton(createElement(InformationFormWrapper, null));\n            return flex()((x_1) => {\n                x_1.flex = \"1\";\n                x_1.overflowY = \"auto\";\n                x_1.flexBasis = 0;\n            })(arg10_1);\n        },\n        Icon: bs.BsListNested,\n        Name: \"Information\",\n        RightIcons: empty(),\n    }], [new DockType(4), {\n        Content: () => {\n            const arg10_2 = singleton(createElement(TaskFormWrapper, null));\n            return flex()((x_2) => {\n                x_2.flex = \"1\";\n                x_2.overflowY = \"auto\";\n                x_2.flexBasis = 0;\n            })(arg10_2);\n        },\n        Icon: bs.BsListTask,\n        Name: \"Task\",\n        RightIcons: empty(),\n    }], [new DockType(5), {\n        Content: () => {\n            const arg10_3 = singleton(createElement(CellFormWrapper, null));\n            return flex()((x_3) => {\n                x_3.flex = \"1\";\n                x_3.overflowY = \"auto\";\n                x_3.flexBasis = 0;\n            })(arg10_3);\n        },\n        Icon: fa.FaCalendarCheck,\n        Name: \"Cell\",\n        RightIcons: empty(),\n    }]]), []);\n    const itemsMap = ofSeq(items);\n    const arg10_4 = toList(delay(() => {\n        let matchValue, item, arg10_5;\n        return append((rightDock != null) ? ((matchValue = tryFind(rightDock, itemsMap), (matchValue != null) ? ((item = matchValue, singleton_1((arg10_5 = singleton(createElement(DockPanel, {\n            Atom: Atoms_rightDock,\n            Icon: item.Icon,\n            Name: item.Name,\n            RightIcons: item.RightIcons,\n            children: [React_suspense_Z3796A576(singleton(item.Content()), createElement(LoadingSpinner, null))],\n        })), flex()((x_5) => {\n            x_5.width = JS_newObj((x_6) => {\n                x_6.base = \"calc(100vw - 50px)\";\n                x_6.md = \"300px\";\n            });\n            x_5.height = \"100%\";\n            x_5.borderLeftWidth = \"1px\";\n            x_5.borderLeftColor = \"gray.16\";\n            x_5.flex = \"1\";\n        })(arg10_5))))) : singleton_1(Helpers_nothing))) : singleton_1(Helpers_nothing), delay(() => {\n            let arg10_6, arg10_7;\n            return singleton_1((arg10_6 = singleton((arg10_7 = toList(delay(() => map((tupledArg) => {\n                const item_1 = tupledArg[1];\n                return createElement(DockButton, {\n                    Atom: Atoms_rightDock,\n                    DockType: tupledArg[0],\n                    Icon: item_1.Icon,\n                    Name: item_1.Name,\n                    OnClick: (_arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        if (deviceInfo.IsMobile) {\n                            setLeftDock(void 0);\n                            return Promise.resolve();\n                        }\n                        else {\n                            return Promise.resolve();\n                        }\n                    })),\n                    Props: (_arg2) => {\n                    },\n                });\n            }, items))), stack()((x_8) => {\n                x_8.spacing = \"1px\";\n                x_8.direction = \"row\";\n                x_8.left = \"0\";\n                x_8.position = \"absolute\";\n                x_8.transform = \"rotate(90deg) translate(-24px, 0%)\";\n                x_8.transformOrigin = \"0 100%\";\n                x_8.height = \"24px\";\n            })(arg10_7))), box()((x_7) => {\n                x_7.width = \"24px\";\n                x_7.position = \"relative\";\n                x_7.margin = \"1px\";\n            })(arg10_6)));\n        }));\n    }));\n    return flex()((x_4) => {\n        x_4.overflow = \"auto\";\n    })(arg10_4);\n}\n\n","import { React_suspense_Z3796A576, useReact_useMemo_CF4EA67, useFeliz_React__React_useState_Static_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { now as now_1 } from \"../../.fable/fable-library.3.2.7/Date.js\";\nimport { SchedulingType, useScheduling } from \"../Hooks/Scheduling.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { toString } from \"../../.fable/fable-library.3.2.7/Types.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_position, Atoms_lastTotal, Selectors_Session_sortedTaskIdList, Selectors_Session_selectedTaskIdSet, Atoms_Task_cellAttachmentMap, Selectors_Session_taskStateList, Selectors_Session_informationStateList, Selectors_Session_informationSet, Atoms_databaseIdSet, Atoms_sessionBreakDuration, Atoms_sessionDuration, Selectors_Session_activeSessions } from \"../State.fs.js\";\nimport { empty, collect, sum as sum_2, map as map_1, filter, length as length_1, singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { simpleGrid, stack, flex, box, icon } from \"../Bindings/Chakra.fs.js\";\nimport * as gi from \"react-icons/gi\";\nimport { sum, toArray, ofArray, length, head, singleton as singleton_1, map, isEmpty } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { op_UnaryNegation_Int32 } from \"../../.fable/fable-library.3.2.7/Int32.js\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Tooltip } from \"./Tooltip.fs.js\";\nimport { CustomPopover } from \"./Popover.fs.js\";\nimport { Atoms_username, waitForAll } from \"../Bindings/Store.fs.js\";\nimport { count, FSharpSet__get_Count } from \"../../.fable/fable-library.3.2.7/Set.js\";\nimport { map as map_2, sum as sum_1 } from \"../../.fable/fable-library.3.2.7/Array.js\";\nimport * as bi from \"react-icons/bi\";\nimport * as fa from \"react-icons/fa\";\nimport { InlineLoadingSpinner } from \"./LoadingSpinner.fs.js\";\nimport { JS_newObj } from \"../Bindings/JS.fs.js\";\n\nexport function NowIndicator() {\n    const patternInput = useFeliz_React__React_useState_Static_1505(now_1());\n    useScheduling(new SchedulingType(1), 1000, (_arg2, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        patternInput[1](now_1());\n        return Promise.resolve();\n    })));\n    return toText(interpolate(\"Now: %P()\", [toString(patternInput[0])]));\n}\n\nexport function SessionIndicator() {\n    const activeSessions = Jotai_jotaiUtils.useAtomValue(Selectors_Session_activeSessions);\n    const sessionDuration = Jotai_jotaiUtils.useAtomValue(Atoms_sessionDuration).fields[0] | 0;\n    const patternInput_1 = Jotai_jotaiUtils.useAtomValue(Atoms_sessionBreakDuration);\n    const arg10 = toList(delay(() => append(singleton(icon()((x) => {\n        x.as = gi.GiHourglass;\n        x.marginRight = \"4px\";\n    })([])), delay(() => {\n        let input, label, children, arg10_2;\n        if (isEmpty(activeSessions)) {\n            return singleton(\"Sessions: No active sessions\");\n        }\n        else {\n            const activeSessions_1 = activeSessions;\n            const getSessionInfo = (_arg1_1) => {\n                const taskName = _arg1_1.fields[0];\n                const duration = _arg1_1.fields[1].fields[0] | 0;\n                const left = (sessionDuration - duration) | 0;\n                const matchValue = duration < sessionDuration;\n                let pattern_matching_result;\n                if (matchValue) {\n                    if (duration < 0) {\n                        pattern_matching_result = 0;\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        return {\n                            Color: \"#d8b324\",\n                            Duration: op_UnaryNegation_Int32(duration),\n                            Left: duration,\n                            SessionType: \"Session\",\n                            TaskName: taskName,\n                        };\n                    }\n                    case 1: {\n                        if (matchValue) {\n                            return {\n                                Color: \"#7cca7c\",\n                                Duration: duration,\n                                Left: left,\n                                SessionType: \"Session\",\n                                TaskName: taskName,\n                            };\n                        }\n                        else {\n                            return {\n                                Color: \"#ca7c7c\",\n                                Duration: op_UnaryNegation_Int32(left),\n                                Left: patternInput_1.fields[0] + left,\n                                SessionType: \"Break\",\n                                TaskName: taskName,\n                            };\n                        }\n                    }\n                }\n            };\n            return singleton((input = {\n                Body: (tupledArg) => {\n                    let arg10_5;\n                    return singleton_1((arg10_5 = toList(delay(() => append(singleton(box()((x_6) => {\n                        x_6.fontSize = \"15px\";\n                    })([\"Session Details\"])), delay(() => map((session) => {\n                        const sessionInfo_1 = getSessionInfo(session);\n                        const arg10_7 = singleton_1(toText(interpolate(\"%P(): %P(). Task: %P()\", [sessionInfo_1.SessionType, (sessionInfo_1.Left < 0) ? toText(interpolate(\"Starts in %P()m\", [sessionInfo_1.Duration])) : toText(interpolate(\" %P()m ago (%P()m left)\", [sessionInfo_1.Duration, sessionInfo_1.Left])), sessionInfo_1.TaskName])));\n                        return flex()((x_7) => {\n                            x_7.color = sessionInfo_1.Color;\n                        })(arg10_7);\n                    }, activeSessions_1))))), stack()((x_5) => {\n                        x_5.spacing = \"10px\";\n                    })(arg10_5)));\n                },\n                Props: (_arg2) => {\n                },\n                Trigger: (label = \"Session Details\", (children = [(arg10_2 = toList(delay(() => {\n                    let arg10_3;\n                    const sessionInfo = getSessionInfo(head(activeSessions_1));\n                    return singleton((arg10_3 = ofArray([toText(interpolate(\"%P(): %P() active (\", [sessionInfo.SessionType, length(activeSessions_1)])), box()((x_3) => {\n                        x_3.display = \"inline\";\n                        x_3.textOverflow = \"ellipsis\";\n                        x_3.whiteSpace = \"nowrap\";\n                        x_3.overflow = \"hidden\";\n                        x_3.maxWidth = \"100px\";\n                    })([sessionInfo.TaskName]), toText(interpolate(\"). %P()\", [(sessionInfo.Left < 0) ? toText(interpolate(\"Starts in %P()m.\", [sessionInfo.Duration])) : toText(interpolate(\"Started %P()m ago (%P()m left)\", [sessionInfo.Duration, sessionInfo.Left]))]))]), flex()((x_2) => {\n                        x_2.color = sessionInfo.Color;\n                    })(arg10_3)));\n                })), box()((x_1) => {\n                    x_1.cursor = \"pointer\";\n                })(arg10_2))], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children) : createElement(Tooltip, {\n                    props: (x_4) => {\n                        x_4.label = label;\n                    },\n                    wrapperProps: (_arg1_2) => {\n                    },\n                    children: children,\n                }))),\n            }, createElement(CustomPopover, {\n                Body: input.Body,\n                CloseButton: true,\n                Padding: \"10px\",\n                Props: input.Props,\n                RenderOnHover: false,\n                Trigger: input.Trigger,\n            })));\n        }\n    }))));\n    return flex()((_arg1) => {\n    })(arg10);\n}\n\nexport function TasksIndicator() {\n    let label, children_1;\n    const databaseIdSet = Jotai_jotaiUtils.useAtomValue(Atoms_databaseIdSet);\n    const informationSet = Jotai_jotaiUtils.useAtomValue(Selectors_Session_informationSet);\n    const informationStateList = Jotai_jotaiUtils.useAtomValue(Selectors_Session_informationStateList);\n    const taskStateList = Jotai_jotaiUtils.useAtomValue(Selectors_Session_taskStateList);\n    const cellAttachmentMapArray = Jotai_jotaiUtils.useAtomValue(waitForAll(toArray(map(Atoms_Task_cellAttachmentMap, map((taskState) => taskState.Task.Id, taskStateList)))));\n    const selectedTaskIdSet = Jotai_jotaiUtils.useAtomValue(Selectors_Session_selectedTaskIdSet);\n    const sortedTaskIdList = Jotai_jotaiUtils.useAtomValue(Selectors_Session_sortedTaskIdList);\n    const lastTotal = Jotai_jotaiUtils.useAtomValue(Atoms_lastTotal);\n    const patternInput = useReact_useMemo_CF4EA67(() => {\n        let source_10, element;\n        const database = FSharpSet__get_Count(databaseIdSet) | 0;\n        const information = FSharpSet__get_Count(informationSet) | 0;\n        const informationAttachment = sum(map((informationState) => length(informationState.Attachments), informationStateList), {\n            GetZero: () => 0,\n            Add: (x, y) => (x + y),\n        }) | 0;\n        const tasks = length(taskStateList) | 0;\n        const taskAttachment = sum(map((taskState_1) => length(taskState_1.Attachments), taskStateList), {\n            GetZero: () => 0,\n            Add: (x_1, y_1) => (x_1 + y_1),\n        }) | 0;\n        const taskSession = sum(map((taskState_2) => length(taskState_2.Sessions), taskStateList), {\n            GetZero: () => 0,\n            Add: (x_2, y_2) => (x_2 + y_2),\n        }) | 0;\n        const cellStatus = sum(map((taskState_3) => length_1(filter((_arg1_1) => {\n            if (_arg1_1.Status.tag === 5) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }, map_1((_arg1) => _arg1[1], taskState_3.CellStateMap))), taskStateList), {\n            GetZero: () => 0,\n            Add: (x_3, y_3) => (x_3 + y_3),\n        }) | 0;\n        const cellAttachment = sum_1(map_2((arg_1) => sum_2(map_1((set$) => count(set$), map_1((_arg1_2) => _arg1_2[1], arg_1)), {\n            GetZero: () => 0,\n            Add: (x_4, y_4) => (x_4 + y_4),\n        }), cellAttachmentMapArray, Int32Array), {\n            GetZero: () => 0,\n            Add: (x_5, y_5) => (x_5 + y_5),\n        }) | 0;\n        const total = (((((((database + information) + informationAttachment) + tasks) + taskAttachment) + taskSession) + cellStatus) + cellAttachment) | 0;\n        return [react.createElement(react.Fragment, {}, ...((source_10 = map((s) => s, ofArray([toText(interpolate(\"Database: %P()\", [database])), toText(interpolate(\"Information: %P()\", [information])), toText(interpolate(\"Information Attachment: %P()\", [informationAttachment])), toText(interpolate(\"Task: %P()\", [tasks])), toText(interpolate(\"Task Attachment: %P()\", [taskAttachment])), toText(interpolate(\"Task Session: %P()\", [taskSession])), toText(interpolate(\"Cell Status: %P()\", [cellStatus])), toText(interpolate(\"Cell Attachment: %P()\", [cellAttachment])), toText(interpolate(\"Total: %P()\", [total])), toText(interpolate(\"Last Total: %P()\", [lastTotal]))])), (element = react.createElement(\"br\", {}), toList(delay(() => {\n            let notFirst = false;\n            return collect((element_2) => append(notFirst ? singleton(element) : empty(), delay(() => append(singleton(element_2), delay(() => {\n                notFirst = true;\n                return empty();\n            })))), source_10);\n        })))))), total];\n    }, [lastTotal, cellAttachmentMapArray, informationSet, informationStateList, taskStateList, databaseIdSet]);\n    const arg10 = ofArray([icon()((x_6) => {\n        x_6.as = bi.BiTask;\n        x_6.marginRight = \"4px\";\n    })([]), (label = patternInput[0], (children_1 = [toText(interpolate(\"Tasks: %P() of %P() visible (Total: %P())\", [length(sortedTaskIdList), FSharpSet__get_Count(selectedTaskIdSet), patternInput[1]]))], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children_1) : createElement(Tooltip, {\n        props: (x_7) => {\n            x_7.label = label;\n        },\n        wrapperProps: (_arg1_4) => {\n        },\n        children: children_1,\n    })))]);\n    return flex()((_arg1_3) => {\n    })(arg10);\n}\n\nexport function StatusBar() {\n    const username = Jotai_jotaiUtils.useAtomValue(Atoms_username);\n    const position = Jotai_jotaiUtils.useAtomValue(Atoms_position);\n    const arg10 = toList(delay(() => {\n        let arg10_1;\n        return append(singleton((arg10_1 = toList(delay(() => append(singleton(icon()((x_2) => {\n            x_2.as = fa.FaRegUser;\n            x_2.marginRight = \"4px\";\n        })([])), delay(() => ((username != null) ? singleton(toText(interpolate(\"User: %P()\", [username.fields[0]]))) : singleton(Helpers_nothing)))))), flex()((_arg1) => {\n        })(arg10_1))), delay(() => append(singleton(React_suspense_Z3796A576(singleton_1(createElement(SessionIndicator, null)), createElement(InlineLoadingSpinner, null))), delay(() => append(singleton(React_suspense_Z3796A576(singleton_1(createElement(TasksIndicator, null)), createElement(InlineLoadingSpinner, null))), delay(() => {\n            let arg10_3, label, children, _arg7, _arg6, _arg1_1;\n            if (position == null) {\n                return singleton(\"Position: No databases selected\");\n            }\n            else {\n                const position_1 = position;\n                return singleton(react.createElement(react.Fragment, {}, (arg10_3 = ofArray([icon()((x_3) => {\n                    x_3.as = fa.FaRegClock;\n                    x_3.marginRight = \"4px\";\n                })([]), (label = createElement(NowIndicator, null), (children = [toText(interpolate(\"Position: %P()\", [(_arg7 = position_1, toText(interpolate(\"%P() %P()\", [(_arg6 = _arg7.Date, toText(interpolate(\"%d%P()-%02d%P()-%02d%P()\", [_arg6.Year.fields[0], _arg6.Month, _arg6.Day.fields[0]]))), (_arg1_1 = _arg7.Time, toText(interpolate(\"%02d%P():%02d%P()\", [_arg1_1.Hour.fields[0], _arg1_1.Minute.fields[0]])))])))]))], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children) : createElement(Tooltip, {\n                    props: (x_4) => {\n                        x_4.label = label;\n                    },\n                    wrapperProps: (_arg1_2) => {\n                    },\n                    children: children,\n                })))]), flex()((_arg2) => {\n                })(arg10_3))));\n            }\n        }))))));\n    }));\n    return simpleGrid()((x) => {\n        x.display = JS_newObj((x_1) => {\n            x_1.base = \"grid\";\n            x_1.md = \"flex\";\n        });\n        x.borderTopWidth = \"1px\";\n        x.borderTopColor = \"gray.16\";\n        x.minChildWidth = \"150px\";\n        x.justifyContent = \"space-between\";\n        x.justifyItems = \"center\";\n        x.padding = \"7px\";\n        x.spacing = \"6px\";\n    })(arg10);\n}\n\n","import { useReact_useEffect_Z101E1A95, useReact_useRef_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { ofArray, tryFind, map, iterate, empty } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Selectors_Session_activeSessions, Atoms_sessionBreakDuration, Atoms_sessionDuration } from \"../State.fs.js\";\nimport { JS_playAudio } from \"../Bindings/JS.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\n\nexport function SoundPlayer() {\n    const oldActiveSessions = useReact_useRef_1505(empty());\n    const sessionDuration = Jotai_jotaiUtils.useAtomValue(Atoms_sessionDuration);\n    const sessionBreakDuration = Jotai_jotaiUtils.useAtomValue(Atoms_sessionBreakDuration);\n    const activeSessions = Jotai_jotaiUtils.useAtomValue(Selectors_Session_activeSessions);\n    useReact_useEffect_Z101E1A95(() => {\n        iterate((x_2) => {\n            x_2();\n        }, map((_arg2) => {\n            const oldDuration = _arg2.fields[1].fields[0] | 0;\n            const newSession = tryFind((_arg1) => {\n                if (_arg1.fields[0] === _arg2.fields[0]) {\n                    return _arg1.fields[1].fields[0] === (oldDuration + 1);\n                }\n                else {\n                    return false;\n                }\n            }, activeSessions);\n            let pattern_matching_result;\n            if (newSession != null) {\n                if ((oldDuration === -1) ? (newSession.fields[1].fields[0] === 0) : false) {\n                    pattern_matching_result = 0;\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    return () => {\n                        (() => { var audio = new Audio(\"../sounds/tick.wav\"); audio.volume = 1 || 1; return audio; })().play();;\n                    };\n                }\n                case 1: {\n                    let pattern_matching_result_1;\n                    if (newSession != null) {\n                        if (newSession.fields[1].fields[0] === sessionDuration.fields[0]) {\n                            pattern_matching_result_1 = 0;\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_1 = 1;\n                    }\n                    switch (pattern_matching_result_1) {\n                        case 0: {\n                            return () => {\n                                void map((ms) => setTimeout(() => {\n                                    JS_playAudio(\"../sounds/ding.wav\");\n                                }, ms), ofArray([0, 1000]));\n                            };\n                        }\n                        case 1: {\n                            if (newSession == null) {\n                                if (oldDuration === ((sessionDuration.fields[0] + sessionBreakDuration.fields[0]) - 1)) {\n                                    return () => {\n                                        void map((ms_1) => setTimeout(() => {\n                                            JS_playAudio(\"../sounds/ding.wav\");\n                                        }, ms_1), ofArray([0, 1000]));\n                                    };\n                                }\n                                else {\n                                    return () => {\n                                    };\n                                }\n                            }\n                            else {\n                                return () => {\n                                };\n                            }\n                        }\n                    }\n                }\n            }\n        }, oldActiveSessions.current));\n        oldActiveSessions.current = activeSessions;\n    }, [oldActiveSessions, sessionDuration, sessionBreakDuration, activeSessions]);\n    return Helpers_nothing;\n}\n\n","import { useFeliz_React__React_useState_Static_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_gunPeers } from \"../Bindings/Store.fs.js\";\nimport { Atoms_initialPeerSkipped } from \"../State.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { FSharpChoice$2 } from \"../../.fable/fable-library.3.2.7/Choice.js\";\nimport { isNullOrWhiteSpace } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Input } from \"./Input.fs.js\";\nimport { center, stack, hStack, link } from \"../Bindings/Chakra.fs.js\";\nimport { externalLinkIcon } from \"./ExternalLink.fs.js\";\nimport { equals } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { Tooltip } from \"./Tooltip.fs.js\";\nimport { Browser_Types_Event__Event_get_Value } from \"../../.fable/Fable.React.7.4.1/Fable.React.Extensions.fs.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as cg from \"react-icons/cg\";\nimport * as hi from \"react-icons/hi\";\nimport { singleton, ofArray } from \"../../.fable/fable-library.3.2.7/List.js\";\n\nexport function InitialPeers() {\n    let arg10_1, arg10_3, cmp, cmp_4;\n    const patternInput = useFeliz_React__React_useState_Static_1505(\"https://flukegunpeer-test.herokuapp.com/gun\");\n    const gunPeer = patternInput[0];\n    const setGunPeers = Jotai_jotaiUtils.useUpdateAtom(Atoms_gunPeers);\n    const setInitialPeerSkipped = Jotai_jotaiUtils.useUpdateAtom(Atoms_initialPeerSkipped);\n    const nextClick = (_arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        let str;\n        if (((str = gunPeer, (str === null) ? (new FSharpChoice$2(2, void 0)) : (isNullOrWhiteSpace(str) ? (new FSharpChoice$2(1, void 0)) : (new FSharpChoice$2(0, str))))).tag === 0) {\n            setGunPeers([gunPeer]);\n            return Promise.resolve();\n        }\n        else {\n            return Promise.resolve();\n        }\n    }));\n    const arg10 = singleton((arg10_1 = ofArray([createElement(Input, {\n        CustomProps: (x_2) => {\n            let input, label, children;\n            x_2.hint = ((input = {\n                Href: \"https://gun.eco/docs/FAQ#what-is-the-difference-between-super-peer-and-other-peers\",\n                Link: \"Read documentation\",\n                Props: (_arg1_1) => {\n                },\n            }, (label = input.Href, (children = [link()((x_3) => {\n                x_3.href = input.Href;\n                x_3.isExternal = true;\n                input.Props(x_3);\n            })([input.Link, externalLinkIcon])], equals(label, Helpers_nothing) ? react.createElement(react.Fragment, {}, ...children) : createElement(Tooltip, {\n                props: (x_4) => {\n                    x_4.label = label;\n                },\n                wrapperProps: (_arg1_2) => {\n                },\n                children: children,\n            })))));\n            x_2.fixedValue = gunPeer;\n            x_2.onEnterPress = nextClick;\n        },\n        Props: (x_5) => {\n            x_5.label = \"Gun peer\";\n            x_5.placeholder = \"https://??????.herokuapp.com/gun\";\n            x_5.onChange = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                patternInput[1](Browser_Types_Event__Event_get_Value(e));\n                return Promise.resolve();\n            })));\n        },\n    }), (arg10_3 = ofArray([createElement(Button, {\n        Children: [\"Skip\"],\n        Hint: void 0,\n        Icon: [(cmp = cg.CgCornerDownRight, () => react.createElement(cmp, void 0)), new IconPosition(0)],\n        Props: (x_7) => {\n            x_7.flex = \"1\";\n            x_7.autoFocus = true;\n            x_7.onClick = ((_arg2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                setInitialPeerSkipped(true);\n                return Promise.resolve();\n            })));\n        },\n    }), createElement(Button, {\n        Children: [\"Connect\"],\n        Hint: void 0,\n        Icon: [(cmp_4 = hi.HiArrowRight, () => react.createElement(cmp_4, void 0)), new IconPosition(1)],\n        Props: (x_8) => {\n            x_8.flex = \"1\";\n            x_8.onClick = nextClick;\n            x_8.disabled = (gunPeer.length === 0);\n        },\n    })]), hStack()((x_6) => {\n        x_6.alignItems = \"stretch\";\n    })(arg10_3))]), stack()((x_1) => {\n        x_1.minWidth = \"200px\";\n    })(arg10_1)));\n    return center()((x) => {\n        x.flex = \"1\";\n    })(arg10);\n}\n\n","import { center, hStack, stack, box, useToast } from \"../Bindings/Chakra.fs.js\";\nimport { useFeliz_React__React_useState_Static_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { useSignUp, useSignIn } from \"../Hooks/Auth.fs.js\";\nimport { useCallback } from \"../Bindings/Store.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { printf, toConsole } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { InputFormat, Input } from \"./Input.fs.js\";\nimport { Browser_Types_Event__Event_get_Value } from \"../../.fable/Fable.React.7.4.1/Fable.React.Extensions.fs.js\";\nimport { Dropdown } from \"./Dropdown.fs.js\";\nimport { IconPosition, Button } from \"./Button.fs.js\";\nimport * as fi from \"react-icons/fi\";\nimport { ofArray, singleton } from \"../../.fable/fable-library.3.2.7/List.js\";\n\nexport function LoginScreen() {\n    let arg10_1;\n    const toast = useToast();\n    const patternInput = useFeliz_React__React_useState_Static_1505(\"\");\n    const usernameField = patternInput[0];\n    const patternInput_1 = useFeliz_React__React_useState_Static_1505(\"\");\n    const passwordField = patternInput_1[0];\n    const patternInput_2 = useFeliz_React__React_useState_Static_1505(\"\");\n    const password2Field = patternInput_2[0];\n    const signIn = useSignIn();\n    const signUp = useSignUp();\n    const signInClick = useCallback((_arg3, _arg2, _arg1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (signIn([usernameField, passwordField]).then(((_arg1_1) => {\n        if (_arg1_1.tag === 1) {\n            toast((x) => {\n                x.description = _arg1_1.fields[0];\n            });\n            return Promise.resolve();\n        }\n        else {\n            toConsole(printf(\"logged\"));\n            return Promise.resolve();\n        }\n    }))))), [signIn, toast, usernameField, passwordField]);\n    const signUpClick = useCallback((_arg6, _arg5, _arg4) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        if (passwordField !== password2Field) {\n            toast((x_1) => {\n                x_1.description = \"Passwords don\\u0027t match\";\n            });\n            return Promise.resolve(false);\n        }\n        else {\n            return signUp([usernameField, passwordField]).then(((_arg2_1) => {\n                if (_arg2_1.tag === 1) {\n                    toast((x_3) => {\n                        x_3.description = _arg2_1.fields[0];\n                    });\n                    return Promise.resolve(false);\n                }\n                else {\n                    toast((x_2) => {\n                        x_2.title = \"Success\";\n                        x_2.status = \"success\";\n                        x_2.description = \"User registered successfully\";\n                    });\n                    return Promise.resolve(true);\n                }\n            }));\n        }\n    })), [signUp, toast, usernameField, passwordField, password2Field]);\n    const arg10 = singleton((arg10_1 = ofArray([createElement(Input, {\n        CustomProps: (x_5) => {\n            x_5.fixedValue = usernameField;\n            x_5.onEnterPress = signInClick;\n        },\n        Props: (x_6) => {\n            x_6.autoFocus = true;\n            x_6.placeholder = \"Username\";\n            x_6.onChange = ((e) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                patternInput[1](Browser_Types_Event__Event_get_Value(e));\n                return Promise.resolve();\n            })));\n        },\n    }), createElement(Input, {\n        CustomProps: (x_7) => {\n            x_7.fixedValue = passwordField;\n            x_7.onEnterPress = signInClick;\n            x_7.inputFormat = (new InputFormat(4));\n        },\n        Props: (x_8) => {\n            x_8.placeholder = \"Password\";\n            x_8.onChange = ((e_1) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                patternInput_1[1](Browser_Types_Event__Event_get_Value(e_1));\n                return Promise.resolve();\n            })));\n        },\n    }), createElement(Dropdown, {\n        Body: (onHide) => {\n            let arg10_3, arg10_5, cmp_8;\n            return singleton((arg10_3 = ofArray([box()((x_13) => {\n                x_13.paddingBottom = \"5px\";\n                x_13.fontSize = \"15px\";\n            })([\"Register\"]), createElement(Input, {\n                CustomProps: (x_14) => {\n                    x_14.fixedValue = password2Field;\n                    x_14.inputFormat = (new InputFormat(4));\n                    x_14.onEnterPress = ((_arg9) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (signUpClick().then(((_arg3_1) => {\n                        if (_arg3_1) {\n                            onHide();\n                            return Promise.resolve();\n                        }\n                        else {\n                            return Promise.resolve();\n                        }\n                    }))))));\n                },\n                Props: (x_15) => {\n                    x_15.autoFocus = true;\n                    x_15.placeholder = \"Confirm Password\";\n                    x_15.onChange = ((e_2) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        patternInput_2[1](Browser_Types_Event__Event_get_Value(e_2));\n                        return Promise.resolve();\n                    })));\n                },\n            }), (arg10_5 = singleton(createElement(Button, {\n                Children: [\"Confirm\"],\n                Hint: void 0,\n                Icon: [(cmp_8 = fi.FiKey, () => react.createElement(cmp_8, void 0)), new IconPosition(0)],\n                Props: (x_16) => {\n                    x_16.onClick = ((_arg11) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (signUpClick().then(((_arg4_1) => {\n                        if (_arg4_1) {\n                            onHide();\n                            return Promise.resolve();\n                        }\n                        else {\n                            return Promise.resolve();\n                        }\n                    }))))));\n                },\n            })), box()((_arg10) => {\n            })(arg10_5))]), stack()((x_12) => {\n                x_12.spacing = \"10px\";\n            })(arg10_3)));\n        },\n        Left: false,\n        Tooltip: \"\",\n        Trigger: (visible, setVisible) => {\n            let cmp, cmp_4;\n            const arg10_2 = ofArray([createElement(Button, {\n                Children: [\"Login\"],\n                Hint: void 0,\n                Icon: [(cmp = fi.FiKey, () => react.createElement(cmp, void 0)), new IconPosition(0)],\n                Props: (x_10) => {\n                    x_10.flex = \"1\";\n                    x_10.onClick = signInClick;\n                },\n            }), createElement(Button, {\n                Children: [\"Register\"],\n                Hint: void 0,\n                Icon: [(cmp_4 = (visible ? fi.FiChevronUp : fi.FiChevronDown), () => react.createElement(cmp_4, void 0)), new IconPosition(1)],\n                Props: (x_11) => {\n                    x_11.onClick = ((_arg8) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                        setVisible(!visible);\n                        return Promise.resolve();\n                    })));\n                    x_11.flex = \"1\";\n                },\n            })]);\n            return hStack()((x_9) => {\n                x_9.alignItems = \"stretch\";\n            })(arg10_2);\n        },\n    })]), stack()((_arg7) => {\n    })(arg10_1)));\n    return center()((x_4) => {\n        x_4.flex = \"1\";\n    })(arg10);\n}\n\n","import { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Selectors_deviceInfo, Atoms_initialPeerSkipped, Atoms_sessionRestored, Atoms_lastTotal, Atoms_color } from \"../State.fs.js\";\nimport { React_suspense_Z3796A576 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { createElement } from \"react\";\nimport { PositionUpdater } from \"./PositionUpdater.fs.js\";\nimport { singleton, append, delay, toList } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { TopBar } from \"./TopBar.fs.js\";\nimport { LoadingSpinner } from \"./LoadingSpinner.fs.js\";\nimport { LeftDock } from \"./LeftDock.fs.js\";\nimport { ofArray, singleton as singleton_1 } from \"../../.fable/fable-library.3.2.7/List.js\";\nimport { ViewTabs } from \"./ViewTabs.fs.js\";\nimport { RightDock } from \"./RightDock.fs.js\";\nimport { stack, flex } from \"../Bindings/Chakra.fs.js\";\nimport { StatusBar } from \"./StatusBar.fs.js\";\nimport { SoundPlayer } from \"./SoundPlayer.fs.js\";\nimport { Helpers_nothing } from \"../../.fable/Fable.React.7.4.1/Fable.React.Helpers.fs.js\";\nimport { addTimestamp } from \"../Bindings/Profiling.fs.js\";\nimport { Atoms_username, Atoms_gunPeers } from \"../Bindings/Store.fs.js\";\nimport { InitialPeers } from \"./InitialPeers.fs.js\";\nimport { LoginScreen } from \"./LoginScreen.fs.js\";\nimport { equalsWith } from \"../../.fable/fable-library.3.2.7/Array.js\";\nimport { comparePrimitives } from \"../../.fable/fable-library.3.2.7/Util.js\";\n\nexport function LoggedContent() {\n    let arg10;\n    const color = Jotai_jotaiUtils.useAtomValue(Atoms_color);\n    const lastTotal = Jotai_jotaiUtils.useAtomValue(Atoms_lastTotal);\n    return React_suspense_Z3796A576(ofArray([createElement(PositionUpdater, null), (arg10 = toList(delay(() => append(singleton(createElement(TopBar, null)), delay(() => {\n        let arg10_1;\n        return ((color == null) ? true : (lastTotal == null)) ? singleton(createElement(LoadingSpinner, null)) : append(singleton((arg10_1 = ofArray([React_suspense_Z3796A576(singleton_1(createElement(LeftDock, null)), createElement(LoadingSpinner, null)), React_suspense_Z3796A576(singleton_1(createElement(ViewTabs, null)), createElement(LoadingSpinner, null)), React_suspense_Z3796A576(singleton_1(createElement(RightDock, null)), createElement(LoadingSpinner, null))]), flex()((x_1) => {\n            x_1.flex = \"1\";\n            x_1.overflow = \"auto\";\n        })(arg10_1))), delay(() => singleton(createElement(StatusBar, null))));\n    })))), stack()((x) => {\n        x.spacing = \"0\";\n        x.flex = \"1\";\n        x.maxWidth = \"100vw\";\n    })(arg10)), React_suspense_Z3796A576(singleton_1(createElement(SoundPlayer, null)), Helpers_nothing)]), createElement(LoadingSpinner, null));\n}\n\nexport function Content() {\n    addTimestamp(\"mainComponent.render\");\n    const sessionRestored = Jotai_jotaiUtils.useAtomValue(Atoms_sessionRestored);\n    const initialPeerSkipped = Jotai_jotaiUtils.useAtomValue(Atoms_initialPeerSkipped);\n    const gunPeers = Jotai_jotaiUtils.useAtomValue(Atoms_gunPeers);\n    const deviceInfo = Jotai_jotaiUtils.useAtomValue(Selectors_deviceInfo);\n    const username = Jotai_jotaiUtils.useAtomValue(Atoms_username);\n    const arg10 = toList(delay(() => {\n        let testExpr;\n        if (sessionRestored) {\n            if (username != null) {\n                return singleton(createElement(LoggedContent, null));\n            }\n            else {\n                const matchValue = [gunPeers, initialPeerSkipped];\n                let pattern_matching_result;\n                if ((testExpr = matchValue[0], (!equalsWith((x_1, y) => comparePrimitives(x_1, y), testExpr, null)) ? (testExpr.length === 0) : false)) {\n                    if (matchValue[1]) {\n                        pattern_matching_result = 1;\n                    }\n                    else {\n                        pattern_matching_result = 0;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        return singleton(createElement(InitialPeers, null));\n                    }\n                    case 1: {\n                        return singleton(createElement(LoginScreen, null));\n                    }\n                }\n            }\n        }\n        else {\n            return singleton(createElement(LoadingSpinner, null));\n        }\n    }));\n    return flex()((x) => {\n        x.flex = \"1\";\n        x.minHeight = \"100vh\";\n        x.height = (deviceInfo.IsExtension ? \"590px\" : null);\n        x.width = (deviceInfo.IsExtension ? \"790px\" : null);\n    })(arg10);\n}\n\n","import { useFeliz_React__React_useState_Static_1505 } from \"../../.fable/Feliz.1.47.0/React.fs.js\";\nimport { Jotai_jotaiUtils } from \"../Bindings/Jotai.fs.js\";\nimport { Atoms_debug } from \"../State.fs.js\";\nimport { SchedulingType, useScheduling } from \"../Hooks/Scheduling.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../../.fable/Fable.Promise.2.2.2/Promise.fs.js\";\nimport { Atoms_isTesting } from \"../Bindings/Store.fs.js\";\nimport { promise } from \"../../.fable/Fable.Promise.2.2.2/PromiseImpl.fs.js\";\nimport { uncurry, comparePrimitives, int32ToString, createObj } from \"../../.fable/fable-library.3.2.7/Util.js\";\nimport { empty, singleton, delay, toList, toArray, sortBy, map } from \"../../.fable/fable-library.3.2.7/Seq.js\";\nimport { profilingState } from \"../Bindings/Profiling.fs.js\";\nimport { interpolate, toText } from \"../../.fable/fable-library.3.2.7/String.js\";\nimport { some } from \"../../.fable/fable-library.3.2.7/Option.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Interop_reactApi } from \"../../.fable/Feliz.1.47.0/Interop.fs.js\";\nimport { box } from \"../Bindings/Chakra.fs.js\";\n\nexport function DebugOverlay() {\n    let arg10;\n    const patternInput = useFeliz_React__React_useState_Static_1505(\"\");\n    const patternInput_1 = useFeliz_React__React_useState_Static_1505(\"\");\n    const debug = Jotai_jotaiUtils.useAtomValue(Atoms_debug);\n    useScheduling(new SchedulingType(1), 1000, (getter, _arg3) => PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n        if (getter(Atoms_isTesting) ? true : (!debug)) {\n            return Promise.resolve();\n        }\n        else {\n            const json = JSON.stringify({\n                CallCount: createObj(map((_arg2) => {\n                    const activePatternResult41271 = _arg2;\n                    return [activePatternResult41271[0], int32ToString(activePatternResult41271[1])];\n                }, profilingState.CallCount)),\n                SortedCallCount: createObj(sortBy((tuple) => tuple[0], map((_arg1) => {\n                    const activePatternResult41269 = _arg1;\n                    return [activePatternResult41269[0], int32ToString(activePatternResult41269[1])];\n                }, profilingState.CallCount), {\n                    Compare: (x, y) => comparePrimitives(x, y),\n                })),\n                Timestamps: toArray(map((tupledArg) => toText(interpolate(\"%P() = %P()\", [tupledArg[0], tupledArg[1]])), profilingState.Timestamps)),\n            }, uncurry(2, null), some(4));\n            if (json === patternInput_1[0]) {\n                return Promise.resolve();\n            }\n            else {\n                patternInput[1](json);\n                patternInput_1[1](json);\n                return Promise.resolve();\n            }\n        }\n    })));\n    return react.createElement(react.Fragment, {}, (arg10 = toList(delay(() => (debug ? singleton(createElement(\"pre\", {\n        id: \"diag\",\n        children: Interop_reactApi.Children.toArray([patternInput[0]]),\n    })) : empty()))), box()((x_1) => {\n        x_1.width = \"min-content\";\n        x_1.height = (debug ? \"60%\" : \"initial\");\n        x_1.position = \"fixed\";\n        x_1.right = \"24px\";\n        x_1.bottom = \"0\";\n        x_1.fontSize = \"9px\";\n        x_1.backgroundColor = \"#44444488\";\n        x_1.zIndex = 1;\n        x_1.overflow = (debug ? \"scroll\" : \"initial\");\n    })(arg10)));\n}\n\n","import { addTimestamp } from \"./Bindings/Profiling.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { RootWrapper } from \"./Components/RootWrapper.fs.js\";\nimport { RouterObserver } from \"./Components/RouterObserver.fs.js\";\nimport { SelectionListener_SelectionListener, ShiftListener_ShiftListener, CtrlListener_CtrlListener } from \"./Components/KeyboardListener.fs.js\";\nimport { Content } from \"./Components/Content.fs.js\";\nimport { DebugOverlay } from \"./Components/DebugOverlay.fs.js\";\nimport { ofArray } from \"../.fable/fable-library.3.2.7/List.js\";\n\nexport function App(appInputProps) {\n    const wrap = appInputProps.wrap;\n    addTimestamp(\"appMain.render\");\n    return (wrap ? ((children) => createElement(RootWrapper, {\n        children: children,\n    })) : ((arg00) => react.createElement(react.Fragment, {}, ...arg00)))(ofArray([createElement(RouterObserver, null), createElement(CtrlListener_CtrlListener, null), createElement(ShiftListener_ShiftListener, null), createElement(SelectionListener_SelectionListener, null), createElement(Content, null), createElement(DebugOverlay, null)]));\n}\n\n","import * as index from \"../public/index.tsx\";\nimport * as index_1 from \"../public/index.ts\";\nimport * as index_2 from \"../public/index.jsx\";\nimport * as index_3 from \"../public/index.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { App } from \"./App.fs.js\";\nimport { JS_window } from \"./Bindings/JS.fs.js\";\nimport * as react$002Ddom from \"react-dom\";\nimport \"@fontsource/roboto-condensed/300.css\";\n\n\n\n\n\n\nexport default (() => {\n    const cmp_1 = react.createElement(react.StrictMode, {}, createElement(App, {\n        wrap: true,\n    }));\n    const matchValue = JS_window((x) => x);\n    if (matchValue == null) {\n        return cmp_1;\n    }\n    else {\n        react$002Ddom.createRoot(matchValue.document.getElementById(\"root\")).render(cmp_1);\n        return void 0;\n    }\n})();\n\n"],"sourceRoot":""}